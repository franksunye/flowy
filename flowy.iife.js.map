{"version":3,"file":"flowy.iife.js","sources":["../src/flowy.js"],"sourcesContent":["// 导入模块\n// 在浏览器环境中，模块会被自动加载到window对象\n// 在Node.js测试环境中，通过require加载\n// - DomUtils: DOM操作工具\n// - BlockManager: 块管理模块\n\n// 检查模块是否可用\nfunction getBlockManager() {\n  // 在浏览器环境中，尝试从全局作用域获取\n  if (typeof window !== 'undefined' && window.BlockManager) {\n    return new window.BlockManager();\n  }\n  // 在Node.js测试环境中，尝试require\n  if (typeof require !== 'undefined') {\n    try {\n      const BlockManager = require('./core/block-manager.js');\n      return new BlockManager();\n    } catch (e) {\n      // 如果模块不可用，返回null\n      return null;\n    }\n  }\n  // 如果都不可用，返回null\n  return null;\n}\n\nconst flowy = function (canvas, grab, release, snapping, spacing_x, spacing_y) {\n  if (!grab) {\n    grab = function () {};\n  }\n  if (!release) {\n    release = function () {};\n  }\n  if (!snapping) {\n    snapping = function () {};\n  }\n  if (!spacing_x) {\n    spacing_x = 20;\n  }\n  if (!spacing_y) {\n    spacing_y = 80;\n  }\n  $(document).ready(function () {\n    // 创建块管理器实例\n    const blockManager = getBlockManager();\n\n    // 保持原有变量作为引用，确保向后兼容\n    let blocks = blockManager ? blockManager.getAllBlocks() : [];\n    let blockstemp = blockManager ? blockManager.getTempBlocks() : [];\n    const canvas_div = canvas;\n\n    // 添加同步函数，确保引用始终是最新的\n    function syncBlockReferences() {\n        if (blockManager) {\n            blocks = blockManager.getAllBlocks();\n            blockstemp = blockManager.getTempBlocks();\n        }\n    }\n\n    // 辅助函数：获取块数量（兼容原有代码）\n    function getBlockCount() {\n      return blockManager ? blockManager.getBlockCount() : blocks.length;\n    }\n\n    // 辅助函数：获取下一个块ID\n    function getNextBlockId() {\n      if (blockManager) {\n        return blockManager.getNextBlockId();\n      } else {\n        return blocks.length === 0\n          ? 0\n          : Math.max.apply(\n              Math,\n              blocks.map(a => a.id)\n            ) + 1;\n      }\n    }\n\n    // 辅助函数：清空所有块\n    function clearAllBlocks() {\n      if (blockManager) {\n        blockManager.clearBlocks();\n        // 同时清空引用数组以保持同步\n        blocks.length = 0;\n      } else {\n        blocks = [];\n      }\n    }\n\n    // 辅助函数：添加块\n    function addBlock(blockData) {\n      if (blockManager) {\n        blockManager.addBlock(blockData);\n        // 不要重复添加到blocks数组，通过syncBlockReferences同步\n      } else {\n        blocks.push(blockData);\n      }\n    }\n\n    // 辅助函数：合并临时块到主数组\n    function mergeTempBlocks() {\n      if (blockManager) {\n        blockManager.mergeTempBlocks();\n        // 同时更新引用数组以保持同步\n        blocks = blockManager.getAllBlocks();\n        blockstemp = blockManager.getTempBlocks();\n      } else {\n        blocks = $.merge(blocks, blockstemp);\n        blockstemp = [];\n      }\n    }\n\n    // 辅助函数：移除指定ID的块\n    function removeBlockById(blockId) {\n      if (blockManager) {\n        blockManager.removeBlocks(function (block) {\n          return block.id != blockId;\n        });\n        // 同时更新引用数组以保持同步\n        blocks = blockManager.getAllBlocks();\n      } else {\n        blocks = $.grep(blocks, function (e) {\n          return e.id != blockId;\n        });\n      }\n    }\n    let active = false;\n    const paddingx = spacing_x;\n    const paddingy = spacing_y;\n    let offsetleft = 0;\n    let offsetleftold = 0;\n    let rearrange = false;\n    let lastevent = false;\n    let drag, dragx, dragy, original;\n    // 添加条件检查，确保 canvas_div 存在且有 append 方法\n    if (canvas_div && typeof canvas_div.append === 'function') {\n      canvas_div.append(\"<div class='indicator invisible'></div>\");\n    }\n    flowy.output = function () {\n      const json_data = [];\n      if (blocks.length > 0) {\n        for (var i = 0; i < blocks.length; i++) {\n          json_data.push({\n            id: blocks[i].id,\n            parent: blocks[i].parent,\n            data: [],\n          });\n          $('.blockid[value=' + blocks[i].id + ']')\n            .parent()\n            .children('input')\n            .each(function () {\n              const json_name = $(this).attr('name');\n              const json_value = $(this).val();\n              json_data[i].data.push({\n                name: json_name,\n                value: json_value,\n              });\n            });\n        }\n        return json_data;\n      }\n    };\n    flowy.deleteBlocks = function () {\n      clearAllBlocks();\n      canvas_div.html(\"<div class='indicator invisible'></div>\");\n    };\n    $(document).on('mousedown', '.create-flowy', function (event) {\n      if (event.which === 1) {\n        original = $(this);\n        if (getBlockCount() == 0) {\n          var newBlockId = getBlockCount(); // 当blocks为空时，使用0作为第一个ID\n          $(this)\n            .clone()\n            .addClass('block')\n            .append(\n              \"<input type='hidden' name='blockid' class='blockid' value='\" +\n                newBlockId +\n                \"'>\"\n            )\n            .removeClass('create-flowy')\n            .appendTo('body');\n          $(this).addClass('dragnow');\n          drag = $('.blockid[value=' + newBlockId + ']').parent();\n        } else {\n          var newBlockId = getNextBlockId();\n          $(this)\n            .clone()\n            .addClass('block')\n            .append(\n              \"<input type='hidden' name='blockid' class='blockid' value='\" +\n                newBlockId +\n                \"'>\"\n            )\n            .removeClass('create-flowy')\n            .appendTo('body');\n          $(this).addClass('dragnow');\n          drag = $('.blockid[value=' + parseInt(newBlockId) + ']').parent();\n        }\n        blockGrabbed($(this));\n        drag.addClass('dragging');\n        active = true;\n        dragx = event.clientX - $(this).offset().left;\n        dragy = event.clientY - $(this).offset().top;\n        drag.css('left', event.clientX - dragx + 'px');\n        drag.css('top', event.clientY - dragy + 'px');\n\n\n      }\n    });\n    $(document).on('mouseup', function (event) {\n      if (event.which === 1 && (active || rearrange)) {\n        blockReleased();\n        if (!$('.indicator').hasClass('invisible')) {\n          $('.indicator').addClass('invisible');\n        }\n        if (active) {\n          original.removeClass('dragnow');\n          drag.removeClass('dragging');\n        }\n        if (parseInt(drag.children('.blockid').val()) == 0 && rearrange) {\n          drag.removeClass('dragging');\n          rearrange = false;\n          for (var w = 0; w < blockstemp.length; w++) {\n            if (blockstemp[w].id != parseInt(drag.children('.blockid').val())) {\n              $('.blockid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .css(\n                  'left',\n                  $('.blockid[value=' + blockstemp[w].id + ']')\n                    .parent()\n                    .offset().left -\n                    canvas_div.offset().left +\n                    canvas_div.scrollLeft()\n                );\n              $('.blockid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .css(\n                  'top',\n                  $('.blockid[value=' + blockstemp[w].id + ']')\n                    .parent()\n                    .offset().top -\n                    canvas_div.offset().top +\n                    canvas_div.scrollTop()\n                );\n              $('.arrowid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .css(\n                  'left',\n                  $('.arrowid[value=' + blockstemp[w].id + ']')\n                    .parent()\n                    .offset().left -\n                    canvas_div.offset().left +\n                    canvas_div.scrollLeft()\n                );\n              $('.arrowid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .css(\n                  'top',\n                  $('.arrowid[value=' + blockstemp[w].id + ']')\n                    .parent()\n                    .offset().top -\n                    canvas_div.offset().top +\n                    canvas_div.scrollTop() +\n                    'px'\n                );\n              $('.blockid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .appendTo(canvas_div);\n              $('.arrowid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .appendTo(canvas_div);\n\n              blockstemp[w].x =\n                $('.blockid[value=' + blockstemp[w].id + ']')\n                  .parent()\n                  .offset().left +\n                $('.blockid[value=' + blockstemp[w].id + ']').innerWidth() / 2 +\n                canvas_div.scrollLeft();\n              blockstemp[w].y =\n                $('.blockid[value=' + blockstemp[w].id + ']')\n                  .parent()\n                  .offset().top +\n                $('.blockid[value=' + blockstemp[w].id + ']')\n                  .parent()\n                  .innerHeight() /\n                  2 +\n                canvas_div.scrollTop();\n            }\n          }\n          blockstemp.filter(a => a.id == 0)[0].x =\n            drag.offset().left + drag.innerWidth() / 2;\n          blockstemp.filter(a => a.id == 0)[0].y =\n            drag.offset().top + drag.innerHeight() / 2;\n          mergeTempBlocks();\n        } else if (\n          active &&\n          blocks.length == 0 &&\n          drag.offset().top > canvas_div.offset().top &&\n          drag.offset().left > canvas_div.offset().left\n        ) {\n          blockSnap(drag);\n          active = false;\n          drag.css(\n            'top',\n            drag.offset().top -\n              canvas_div.offset().top +\n              canvas_div.scrollTop() +\n              'px'\n          );\n          drag.css(\n            'left',\n            drag.offset().left -\n              canvas_div.offset().left +\n              canvas_div.scrollLeft() +\n              'px'\n          );\n          drag.appendTo(canvas_div);\n          addBlock({\n            parent: -1,\n            childwidth: 0,\n            id: parseInt(drag.children('.blockid').val()),\n            x:\n              drag.offset().left +\n              drag.innerWidth() / 2 +\n              canvas_div.scrollLeft(),\n            y:\n              drag.offset().top +\n              drag.innerHeight() / 2 +\n              canvas_div.scrollTop(),\n            width: drag.innerWidth(),\n            height: drag.innerHeight(),\n          });\n        } else if (active && blocks.length == 0) {\n          drag.remove();\n        } else if (active || rearrange) {\n          const xpos =\n            drag.offset().left +\n            drag.innerWidth() / 2 +\n            canvas_div.scrollLeft();\n          const ypos = drag.offset().top + canvas_div.scrollTop();\n          const blocko = blocks.map(a => a.id);\n\n          // 调试信息\n          const debugInfo = {\n            dragPos: { x: xpos, y: ypos },\n            blocks: blocks.map(b => ({ id: b.id, x: b.x, y: b.y, width: b.width, height: b.height })),\n            dragElement: {\n              offsetLeft: drag.offset().left,\n              offsetTop: drag.offset().top,\n              width: drag.innerWidth(),\n              height: drag.innerHeight()\n            }\n          };\n          window.lastDebugInfo = debugInfo;\n          console.log('吸附检测:', debugInfo);\n          for (var i = 0; i < blocks.length; i++) {\n            const targetBlock = blocks.filter(a => a.id == blocko[i])[0];\n            const xMin = targetBlock.x - targetBlock.width / 2 - paddingx;\n            const xMax = targetBlock.x + targetBlock.width / 2 + paddingx;\n            const yMin = targetBlock.y - targetBlock.height / 2;\n            const yMax = targetBlock.y + targetBlock.height;\n\n            const xInRange = xpos >= xMin && xpos <= xMax;\n            const yInRange = ypos >= yMin && ypos <= yMax;\n\n            const snapCheckInfo = {\n              blockId: blocko[i],\n              targetBlock: { x: targetBlock.x, y: targetBlock.y, width: targetBlock.width, height: targetBlock.height },\n              dragPos: { x: xpos, y: ypos },\n              xRange: { min: xMin, max: xMax, inRange: xInRange },\n              yRange: { min: yMin, max: yMax, inRange: yInRange },\n              shouldSnap: xInRange && yInRange,\n              paddingx: paddingx\n            };\n            window.lastSnapCheck = snapCheckInfo;\n            console.log('吸附条件检查:', snapCheckInfo);\n\n            if (xInRange && yInRange) {\n              console.log('🎯 吸附条件满足，开始执行吸附逻辑', { rearrange });\n              active = false;\n              if (!rearrange) {\n                console.log('📌 执行blockSnap和appendTo');\n                blockSnap(drag);\n                drag.appendTo(canvas_div);\n              } else {\n                console.log('🔄 重排模式，跳过blockSnap');\n              }\n              let totalwidth = 0;\n              let totalremove = 0;\n              const maxheight = 0;\n              for (\n                var w = 0;\n                w < blocks.filter(id => id.parent == blocko[i]).length;\n                w++\n              ) {\n                var children = blocks.filter(id => id.parent == blocko[i])[w];\n                if (children.childwidth > children.width) {\n                  totalwidth += children.childwidth + paddingx;\n                } else {\n                  totalwidth += children.width + paddingx;\n                }\n              }\n              totalwidth += drag.innerWidth();\n              for (\n                var w = 0;\n                w < blocks.filter(id => id.parent == blocko[i]).length;\n                w++\n              ) {\n                var children = blocks.filter(id => id.parent == blocko[i])[w];\n                if (children.childwidth > children.width) {\n                  $('.blockid[value=' + children.id + ']')\n                    .parent()\n                    .css(\n                      'left',\n                      blocks.filter(a => a.id == blocko[i])[0].x -\n                        totalwidth / 2 +\n                        totalremove +\n                        children.childwidth / 2 -\n                        children.width / 2 +\n                        'px'\n                    );\n                  children.x =\n                    blocks.filter(id => id.parent == blocko[i])[0].x -\n                    totalwidth / 2 +\n                    totalremove +\n                    children.childwidth / 2;\n                  totalremove += children.childwidth + paddingx;\n                } else {\n                  $('.blockid[value=' + children.id + ']')\n                    .parent()\n                    .css(\n                      'left',\n                      blocks.filter(a => a.id == blocko[i])[0].x -\n                        totalwidth / 2 +\n                        totalremove +\n                        'px'\n                    );\n                  children.x =\n                    blocks.filter(id => id.parent == blocko[i])[0].x -\n                    totalwidth / 2 +\n                    totalremove +\n                    children.width / 2;\n                  totalremove += children.width + paddingx;\n                }\n              }\n              drag.css(\n                'left',\n                blocks.filter(id => id.id == blocko[i])[0].x -\n                  totalwidth / 2 +\n                  totalremove -\n                  canvas_div.offset().left +\n                  canvas_div.scrollLeft() +\n                  'px'\n              );\n              drag.css(\n                'top',\n                blocks.filter(id => id.id == blocko[i])[0].y +\n                  blocks.filter(id => id.id == blocko[i])[0].height / 2 +\n                  paddingy -\n                  canvas_div.offset().top +\n                  'px'\n              );\n              if (rearrange) {\n                blockstemp.filter(\n                  a => a.id == parseInt(drag.children('.blockid').val())\n                )[0].x =\n                  drag.offset().left +\n                  drag.innerWidth() / 2 +\n                  canvas_div.scrollLeft();\n                blockstemp.filter(\n                  a => a.id == parseInt(drag.children('.blockid').val())\n                )[0].y =\n                  drag.offset().top +\n                  drag.innerHeight() / 2 +\n                  canvas_div.scrollTop();\n                blockstemp.filter(\n                  a => a.id == drag.children('.blockid').val()\n                )[0].parent = blocko[i];\n                for (var w = 0; w < blockstemp.length; w++) {\n                  if (\n                    blockstemp[w].id !=\n                    parseInt(drag.children('.blockid').val())\n                  ) {\n                    $('.blockid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .css(\n                        'left',\n                        $('.blockid[value=' + blockstemp[w].id + ']')\n                          .parent()\n                          .offset().left -\n                          canvas_div.offset().left +\n                          canvas_div.scrollLeft()\n                      );\n                    $('.blockid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .css(\n                        'top',\n                        $('.blockid[value=' + blockstemp[w].id + ']')\n                          .parent()\n                          .offset().top -\n                          canvas_div.offset().top +\n                          canvas_div.scrollTop()\n                      );\n                    $('.arrowid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .css(\n                        'left',\n                        $('.arrowid[value=' + blockstemp[w].id + ']')\n                          .parent()\n                          .offset().left -\n                          canvas_div.offset().left +\n                          canvas_div.scrollLeft() +\n                          20\n                      );\n                    $('.arrowid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .css(\n                        'top',\n                        $('.arrowid[value=' + blockstemp[w].id + ']')\n                          .parent()\n                          .offset().top -\n                          canvas_div.offset().top +\n                          canvas_div.scrollTop()\n                      );\n                    $('.blockid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .appendTo(canvas_div);\n                    $('.arrowid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .appendTo(canvas_div);\n\n                    blockstemp[w].x =\n                      $('.blockid[value=' + blockstemp[w].id + ']')\n                        .parent()\n                        .offset().left +\n                      $(\n                        '.blockid[value=' + blockstemp[w].id + ']'\n                      ).innerWidth() /\n                        2 +\n                      canvas_div.scrollLeft();\n                    blockstemp[w].y =\n                      $('.blockid[value=' + blockstemp[w].id + ']')\n                        .parent()\n                        .offset().top +\n                      $('.blockid[value=' + blockstemp[w].id + ']')\n                        .parent()\n                        .innerHeight() /\n                        2 +\n                      canvas_div.scrollTop();\n                  }\n                }\n                mergeTempBlocks();\n              } else {\n                addBlock({\n                  childwidth: 0,\n                  parent: blocko[i],\n                  id: parseInt(drag.children('.blockid').val()),\n                  x:\n                    drag.offset().left +\n                    drag.innerWidth() / 2 +\n                    canvas_div.scrollLeft(),\n                  y:\n                    drag.offset().top +\n                    drag.innerHeight() / 2 +\n                    canvas_div.scrollTop(),\n                  width: drag.innerWidth(),\n                  height: drag.innerHeight(),\n                });\n                // 同步引用以确保新添加的块可以被找到\n                syncBlockReferences();\n              }\n              // 确保在连线计算前块数据是最新的\n              syncBlockReferences();\n              const arrowhelp = blocks.filter(\n                a => a.id == parseInt(drag.children('.blockid').val())\n              )[0];\n              const arrowx =\n                arrowhelp.x - blocks.filter(a => a.id == blocko[i])[0].x + 20;\n              // 获取父块的第一个子块（应该是刚添加的当前块）\n              const firstChildOfParent = blocks.filter(id => id.parent == blocko[i])[0];\n              const arrowy =\n                arrowhelp.y -\n                arrowhelp.height / 2 -\n                (firstChildOfParent ? (firstChildOfParent.y + firstChildOfParent.height / 2) : (arrowhelp.y + arrowhelp.height / 2)) +\n                canvas_div.scrollTop();\n\n\n              if (arrowx < 0) {\n                drag.after(\n                  '<div class=\"arrowblock\"><input type=\"hidden\" class=\"arrowid\" value=\"' +\n                    drag.children('.blockid').val() +\n                    '\"><svg preserveaspectratio=\"none\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M' +\n                    (blocks.filter(a => a.id == blocko[i])[0].x -\n                      arrowhelp.x +\n                      5) +\n                    ' 0L' +\n                    (blocks.filter(a => a.id == blocko[i])[0].x -\n                      arrowhelp.x +\n                      5) +\n                    ' ' +\n                    paddingy / 2 +\n                    'L5 ' +\n                    paddingy / 2 +\n                    'L5 ' +\n                    arrowy +\n                    '\" stroke=\"#C5CCD0\" stroke-width=\"2px\"/><path d=\"M0 ' +\n                    (arrowy - 5) +\n                    'H10L5 ' +\n                    arrowy +\n                    'L0 ' +\n                    (arrowy - 5) +\n                    'Z\" fill=\"#C5CCD0\"/></svg></div>'\n                );\n                $('.arrowid[value=' + drag.children('.blockid').val() + ']')\n                  .parent()\n                  .css(\n                    'left',\n                    arrowhelp.x -\n                      5 -\n                      canvas_div.offset().left +\n                      canvas_div.scrollLeft() +\n                      'px'\n                  );\n                $('.arrowid[value=' + drag.children('.blockid').val() + ']')\n                  .parent()\n                  .css(\n                    'top',\n                    blocks.filter(a => a.id == blocko[i])[0].y +\n                      blocks.filter(a => a.id == blocko[i])[0].height / 2 -\n                      canvas_div.offset().top +\n                      canvas_div.scrollTop() +\n                      'px'\n                  );\n              } else {\n                const svgPath = `M20 0L20 ${paddingy / 2}L${arrowx} ${paddingy / 2}L${arrowx} ${arrowy}`;\n\n                drag.after(\n                  '<div class=\"arrowblock\"><input type=\"hidden\" class=\"arrowid\" value=\"' +\n                    drag.children('.blockid').val() +\n                    '\"><svg preserveaspectratio=\"none\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"' +\n                    svgPath +\n                    '\" stroke=\"#C5CCD0\" stroke-width=\"2px\"/><path d=\"M' +\n                    (arrowx - 5) +\n                    ' ' +\n                    (arrowy - 5) +\n                    'H' +\n                    (arrowx + 5) +\n                    'L' +\n                    arrowx +\n                    ' ' +\n                    arrowy +\n                    'L' +\n                    (arrowx - 5) +\n                    ' ' +\n                    (arrowy - 5) +\n                    'Z\" fill=\"#C5CCD0\"/></svg></div>'\n                );\n                $(\n                  '.arrowid[value=' +\n                    parseInt(drag.children('.blockid').val()) +\n                    ']'\n                )\n                  .parent()\n                  .css(\n                    'left',\n                    blocks.filter(a => a.id == blocko[i])[0].x -\n                      20 -\n                      canvas_div.offset().left +\n                      canvas_div.scrollLeft() +\n                      'px'\n                  );\n              }\n              $(\n                '.arrowid[value=' +\n                  parseInt(drag.children('.blockid').val()) +\n                  ']'\n              )\n                .parent()\n                .css(\n                  'top',\n                  blocks.filter(a => a.id == blocko[i])[0].y +\n                    blocks.filter(a => a.id == blocko[i])[0].height / 2 -\n                    canvas_div.offset().top +\n                    canvas_div.scrollTop() +\n                    'px'\n                );\n              if (blocks.filter(a => a.id == blocko[i])[0].parent != -1) {\n                let flag = false;\n                var idval = blocko[i];\n                while (!flag) {\n                  if (blocks.filter(a => a.id == idval)[0].parent == -1) {\n                    flag = true;\n                  } else {\n                    let zwidth = 0;\n                    for (\n                      var w = 0;\n                      w < blocks.filter(id => id.parent == idval).length;\n                      w++\n                    ) {\n                      var children = blocks.filter(id => id.parent == idval)[w];\n                      if (children.childwidth > children.width) {\n                        if (\n                          w ==\n                          blocks.filter(id => id.parent == idval).length - 1\n                        ) {\n                          zwidth += children.childwidth;\n                        } else {\n                          zwidth += children.childwidth + paddingx;\n                        }\n                      } else {\n                        if (\n                          w ==\n                          blocks.filter(id => id.parent == idval).length - 1\n                        ) {\n                          zwidth += children.width;\n                        } else {\n                          zwidth += children.width + paddingx;\n                        }\n                      }\n                    }\n                    blocks.filter(a => a.id == idval)[0].childwidth = zwidth;\n                    idval = blocks.filter(a => a.id == idval)[0].parent;\n                  }\n                }\n                blocks.filter(id => id.id == idval)[0].childwidth = totalwidth;\n              }\n              if (rearrange) {\n                rearrange = false;\n                drag.removeClass('dragging');\n              }\n              rearrangeMe();\n              checkOffset();\n              break;\n            } else if (i == blocks.length - 1) {\n              if (rearrange) {\n                rearrange = false;\n                blockstemp = [];\n              }\n              active = false;\n              drag.remove();\n            }\n          }\n        }\n      }\n    });\n    $(document).on('mousedown', '.block', function (event) {\n      $(document).on('mouseup mousemove', '.block', function handler(event) {\n        if (event.type !== 'mouseup') {\n          if (event.which === 1) {\n            if (!active && !rearrange) {\n              rearrange = true;\n              drag = $(this);\n              drag.addClass('dragging');\n              dragx = event.clientX - $(this).offset().left;\n              dragy = event.clientY - $(this).offset().top;\n              const blockid = parseInt($(this).children('.blockid').val());\n              drag = $(this);\n              blockstemp.push(blocks.filter(a => a.id == blockid)[0]);\n              blocks = $.grep(blocks, function(e) {\n                return e.id != blockid;\n              });\n              $('.arrowid[value=' + blockid + ']')\n                .parent()\n                .remove();\n              let layer = blocks.filter(a => a.parent == blockid);\n              let flag = false;\n              let foundids = [];\n              const allids = [];\n              while (!flag) {\n                for (var i = 0; i < layer.length; i++) {\n                  blockstemp.push(blocks.filter(a => a.id == layer[i].id)[0]);\n                  $('.blockid[value=' + layer[i].id + ']')\n                    .parent()\n                    .css(\n                      'left',\n                      $('.blockid[value=' + layer[i].id + ']')\n                        .parent()\n                        .offset().left - drag.offset().left\n                    );\n                  $('.blockid[value=' + layer[i].id + ']')\n                    .parent()\n                    .css(\n                      'top',\n                      $('.blockid[value=' + layer[i].id + ']')\n                        .parent()\n                        .offset().top - drag.offset().top\n                    );\n                  $('.arrowid[value=' + layer[i].id + ']')\n                    .parent()\n                    .css(\n                      'left',\n                      $('.arrowid[value=' + layer[i].id + ']')\n                        .parent()\n                        .offset().left - drag.offset().left\n                    );\n                  $('.arrowid[value=' + layer[i].id + ']')\n                    .parent()\n                    .css(\n                      'top',\n                      $('.arrowid[value=' + layer[i].id + ']')\n                        .parent()\n                        .offset().top - drag.offset().top\n                    );\n                  $('.blockid[value=' + layer[i].id + ']')\n                    .parent()\n                    .appendTo(drag);\n                  $('.arrowid[value=' + layer[i].id + ']')\n                    .parent()\n                    .appendTo(drag);\n                  foundids.push(layer[i].id);\n                  allids.push(layer[i].id);\n                }\n                if (foundids.length == 0) {\n                  flag = true;\n                } else {\n                  layer = blocks.filter(a => foundids.includes(a.parent));\n                  foundids = [];\n                }\n              }\n              for (\n                var i = 0;\n                i < blocks.filter(a => a.parent == blockid).length;\n                i++\n              ) {\n                var blocknumber = blocks.filter(a => a.parent == blockid)[i];\n                removeBlockById(blocknumber);\n              }\n              for (var i = 0; i < allids.length; i++) {\n                var blocknumber = allids[i];\n                removeBlockById(blocknumber);\n              }\n              if (blocks.length > 1) {\n                rearrangeMe();\n              }\n              if (lastevent) {\n                fixOffset();\n              }\n            }\n          }\n        }\n        $(document).off('mouseup mousemove', handler);\n      });\n    });\n    $(document).on('mousemove', function (event) {\n      if (active) {\n        drag.css('left', event.clientX - dragx + 'px');\n        drag.css('top', event.clientY - dragy + 'px');\n      } else if (rearrange) {\n        drag.css(\n          'left',\n          event.clientX -\n            dragx -\n            canvas_div.offset().left +\n            canvas_div.scrollLeft() +\n            'px'\n        );\n        drag.css(\n          'top',\n          event.clientY -\n            dragy -\n            canvas_div.offset().top +\n            canvas_div.scrollTop() +\n            'px'\n        );\n        blockstemp.filter(\n          a => a.id == parseInt(drag.children('.blockid').val())\n        ).x =\n          drag.offset().left + drag.innerWidth() / 2 + canvas_div.scrollLeft();\n        blockstemp.filter(\n          a => a.id == parseInt(drag.children('.blockid').val())\n        ).y =\n          drag.offset().top + drag.innerHeight() / 2 + canvas_div.scrollTop();\n      }\n      if (active || rearrange) {\n        const xpos =\n          drag.offset().left + drag.innerWidth() / 2 + canvas_div.scrollLeft();\n        const ypos = drag.offset().top + canvas_div.scrollTop();\n        const blocko = blocks.map(a => a.id);\n        for (var i = 0; i < blocks.length; i++) {\n          if (\n            xpos >=\n              blocks.filter(a => a.id == blocko[i])[0].x -\n                blocks.filter(a => a.id == blocko[i])[0].width / 2 -\n                paddingx &&\n            xpos <=\n              blocks.filter(a => a.id == blocko[i])[0].x +\n                blocks.filter(a => a.id == blocko[i])[0].width / 2 +\n                paddingx &&\n            ypos >=\n              blocks.filter(a => a.id == blocko[i])[0].y -\n                blocks.filter(a => a.id == blocko[i])[0].height / 2 &&\n            ypos <=\n              blocks.filter(a => a.id == blocko[i])[0].y +\n                blocks.filter(a => a.id == blocko[i])[0].height\n          ) {\n            $('.indicator').appendTo(\n              $('.blockid[value=' + blocko[i] + ']').parent()\n            );\n            $('.indicator').css(\n              'left',\n              $('.blockid[value=' + blocko[i] + ']')\n                .parent()\n                .innerWidth() /\n                2 -\n                5 +\n                'px'\n            );\n            $('.indicator').css(\n              'top',\n              $('.blockid[value=' + blocko[i] + ']')\n                .parent()\n                .innerHeight() + 'px'\n            );\n            $('.indicator').removeClass('invisible');\n            break;\n          } else if (i == blocks.length - 1) {\n            if (!$('.indicator').hasClass('invisible')) {\n              $('.indicator').addClass('invisible');\n            }\n          }\n        }\n      }\n    });\n\n    function checkOffset() {\n      offsetleft = blocks.map(a => a.x);\n      const widths = blocks.map(a => a.width);\n      const mathmin = offsetleft.map(function (item, index) {\n        return item - widths[index] / 2;\n      });\n      offsetleft = Math.min.apply(Math, mathmin);\n      if (offsetleft < canvas_div.offset().left) {\n        lastevent = true;\n        const blocko = blocks.map(a => a.id);\n        for (var w = 0; w < blocks.length; w++) {\n          $(\n            '.blockid[value=' +\n              blocks.filter(a => a.id == blocko[w])[0].id +\n              ']'\n          )\n            .parent()\n            .css(\n              'left',\n              blocks.filter(a => a.id == blocko[w])[0].x -\n                blocks.filter(a => a.id == blocko[w])[0].width / 2 -\n                offsetleft +\n                20\n            );\n          if (blocks.filter(a => a.id == blocko[w])[0].parent != -1) {\n            const arrowhelp = blocks.filter(a => a.id == blocko[w])[0];\n            const arrowx =\n              arrowhelp.x -\n              blocks.filter(\n                a => a.id == blocks.filter(a => a.id == blocko[w])[0].parent\n              )[0].x;\n            if (arrowx < 0) {\n              $('.arrowid[value=' + blocko[w] + ']')\n                .parent()\n                .css('left', arrowhelp.x - offsetleft + 20 - 5 + 'px');\n            } else {\n              $('.arrowid[value=' + blocko[w] + ']')\n                .parent()\n                .css(\n                  'left',\n                  blocks.filter(\n                    id =>\n                      id.id == blocks.filter(a => a.id == blocko[w])[0].parent\n                  )[0].x -\n                    20 -\n                    offsetleft +\n                    20 +\n                    'px'\n                );\n            }\n          }\n        }\n        for (var w = 0; w < blocks.length; w++) {\n          blocks[w].x =\n            $('.blockid[value=' + blocks[w].id + ']')\n              .parent()\n              .offset().left +\n            canvas_div.offset().left -\n            $('.blockid[value=' + blocks[w].id + ']')\n              .parent()\n              .innerWidth() /\n              2 -\n            40;\n        }\n        offsetleftold = offsetleft;\n      }\n    }\n\n    function fixOffset() {\n      if (offsetleftold < canvas_div.offset().left) {\n        lastevent = false;\n        const blocko = blocks.map(a => a.id);\n        for (var w = 0; w < blocks.length; w++) {\n          $(\n            '.blockid[value=' +\n              blocks.filter(a => a.id == blocko[w])[0].id +\n              ']'\n          )\n            .parent()\n            .css(\n              'left',\n              blocks.filter(a => a.id == blocko[w])[0].x -\n                blocks.filter(a => a.id == blocko[w])[0].width / 2 -\n                offsetleftold -\n                20\n            );\n          blocks.filter(a => a.id == blocko[w])[0].x =\n            $(\n              '.blockid[value=' +\n                blocks.filter(a => a.id == blocko[w])[0].id +\n                ']'\n            )\n              .parent()\n              .offset().left +\n            blocks.filter(a => a.id == blocko[w])[0].width / 2;\n\n          if (blocks.filter(a => a.id == blocko[w])[0].parent != -1) {\n            const arrowhelp = blocks.filter(a => a.id == blocko[w])[0];\n            const arrowx =\n              arrowhelp.x -\n              blocks.filter(\n                a => a.id == blocks.filter(a => a.id == blocko[w])[0].parent\n              )[0].x;\n            if (arrowx < 0) {\n              $('.arrowid[value=' + blocko[w] + ']')\n                .parent()\n                .css('left', arrowhelp.x - 5 - canvas_div.offset().left + 'px');\n            } else {\n              $('.arrowid[value=' + blocko[w] + ']')\n                .parent()\n                .css(\n                  'left',\n                  blocks.filter(\n                    id =>\n                      id.id == blocks.filter(a => a.id == blocko[w])[0].parent\n                  )[0].x -\n                    20 -\n                    canvas_div.offset().left +\n                    'px'\n                );\n            }\n          }\n        }\n        for (var w = 0; w < blocks.length; w++) {\n          //blocks[w].x = blocks[w].x+offsetleftold-20;\n        }\n        offsetleftold = 0;\n      }\n    }\n\n    function rearrangeMe() {\n      const result = blocks.map(a => a.parent);\n      for (var z = 0; z < result.length; z++) {\n        if (result[z] == -1) {\n          continue; // 跳过根块，不要使用z++\n        }\n        let totalwidth = 0;\n        let totalremove = 0;\n        const maxheight = 0;\n        for (\n          var w = 0;\n          w < blocks.filter(id => id.parent == result[z]).length;\n          w++\n        ) {\n          var children = blocks.filter(id => id.parent == result[z])[w];\n          if (blocks.filter(id => id.parent == children.id).length == 0) {\n            children.childwidth = 0;\n          }\n          if (children.childwidth > children.width) {\n            if (w == blocks.filter(id => id.parent == result[z]).length - 1) {\n              totalwidth += children.childwidth;\n            } else {\n              totalwidth += children.childwidth + paddingx;\n            }\n          } else {\n            if (w == blocks.filter(id => id.parent == result[z]).length - 1) {\n              totalwidth += children.width;\n            } else {\n              totalwidth += children.width + paddingx;\n            }\n          }\n        }\n        if (result[z] != -1) {\n          const parentBlock = blocks.filter(a => a.id == result[z])[0];\n          if (parentBlock) {\n            parentBlock.childwidth = totalwidth;\n          }\n        }\n        for (\n          var w = 0;\n          w < blocks.filter(id => id.parent == result[z]).length;\n          w++\n        ) {\n          var children = blocks.filter(id => id.parent == result[z])[w];\n          if (result[z] != -1) {\n            const parentBlock = blocks.filter(id => id.id == result[z])[0];\n            if (parentBlock) {\n              // 保存父块的原始y位置，用于后续连线计算\n              const originalParentY = parentBlock.y;\n\n              $('.blockid[value=' + children.id + ']')\n                .parent()\n                .css(\n                  'top',\n                  parentBlock.y +\n                  paddingy -\n                  canvas_div.offset().top +\n                  canvas_div.scrollTop() +\n                  'px'\n                );\n              parentBlock.y = parentBlock.y + paddingy;\n\n              // 将原始y位置存储在临时属性中\n              parentBlock.originalY = originalParentY;\n            }\n          }\n          if (children.childwidth > children.width) {\n            $('.blockid[value=' + children.id + ']')\n              .parent()\n              .css(\n                'left',\n                blocks.filter(id => id.id == result[z])[0].x -\n                  totalwidth / 2 +\n                  totalremove +\n                  children.childwidth / 2 -\n                  children.width / 2 -\n                  canvas_div.offset().left +\n                  canvas_div.scrollLeft() +\n                  'px'\n              );\n            children.x =\n              blocks.filter(id => id.id == result[z])[0].x -\n              totalwidth / 2 +\n              totalremove +\n              children.childwidth / 2;\n            totalremove += children.childwidth + paddingx;\n          } else {\n            $('.blockid[value=' + children.id + ']')\n              .parent()\n              .css(\n                'left',\n                blocks.filter(id => id.id == result[z])[0].x -\n                  totalwidth / 2 +\n                  totalremove -\n                  canvas_div.offset().left +\n                  canvas_div.scrollLeft() +\n                  'px'\n              );\n            children.x =\n              blocks.filter(id => id.id == result[z])[0].x -\n              totalwidth / 2 +\n              totalremove +\n              children.width / 2;\n            totalremove += children.width + paddingx;\n          }\n          const arrowhelp = blocks.filter(a => a.id == children.id)[0];\n          const arrowx =\n            arrowhelp.x - blocks.filter(a => a.id == children.parent)[0].x + 20;\n          const parentBlock = blocks.filter(a => a.id == children.parent)[0];\n          // 使用父块的原始y位置（修改前的位置）进行连线计算\n          const parentY = parentBlock.originalY !== undefined ? parentBlock.originalY : parentBlock.y;\n          const arrowy =\n            arrowhelp.y -\n            arrowhelp.height / 2 -\n            (parentY + parentBlock.height / 2);\n          // 注意：在rearrangeMe中不需要加canvas_div.scrollTop()，因为块位置已经是绝对位置\n\n\n          $('.arrowid[value=' + children.id + ']')\n            .parent()\n            .css(\n              'top',\n              blocks.filter(id => id.id == children.parent)[0].y +\n                blocks.filter(id => id.id == children.parent)[0].height / 2 -\n                canvas_div.offset().top +\n                canvas_div.scrollTop() +\n                'px'\n            );\n          if (arrowx < 0) {\n            $('.arrowid[value=' + children.id + ']')\n              .parent()\n              .css('left', arrowhelp.x - 5 - canvas_div.offset().left + canvas_div.scrollLeft() + 'px');\n            $('.arrowid[value=' + children.id + ']')\n              .parent()\n              .html(\n                '<input type=\"hidden\" class=\"arrowid\" value=\"' +\n                  children.id +\n                  '\"><svg preserveaspectratio=\"none\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M' +\n                  (blocks.filter(id => id.id == children.parent)[0].x -\n                    arrowhelp.x +\n                    5) +\n                  ' 0L' +\n                  (blocks.filter(id => id.id == children.parent)[0].x -\n                    arrowhelp.x +\n                    5) +\n                  ' ' +\n                  paddingy / 2 +\n                  'L5 ' +\n                  paddingy / 2 +\n                  'L5 ' +\n                  arrowy +\n                  '\" stroke=\"#C5CCD0\" stroke-width=\"2px\"/><path d=\"M0 ' +\n                  (arrowy - 5) +\n                  'H10L5 ' +\n                  arrowy +\n                  'L0 ' +\n                  (arrowy - 5) +\n                  'Z\" fill=\"#C5CCD0\"/></svg>'\n              );\n          } else {\n            $('.arrowid[value=' + children.id + ']')\n              .parent()\n              .css(\n                'left',\n                blocks.filter(id => id.id == children.parent)[0].x -\n                  20 -\n                  canvas_div.offset().left +\n                  canvas_div.scrollLeft() +\n                  'px'\n              );\n            $('.arrowid[value=' + children.id + ']')\n              .parent()\n              .html(\n                '<input type=\"hidden\" class=\"arrowid\" value=\"' +\n                  children.id +\n                  '\"><svg preserveaspectratio=\"none\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 0L20 ' +\n                  paddingy / 2 +\n                  'L' +\n                  arrowx +\n                  ' ' +\n                  paddingy / 2 +\n                  'L' +\n                  arrowx +\n                  ' ' +\n                  arrowy +\n                  '\" stroke=\"#C5CCD0\" stroke-width=\"2px\"/><path d=\"M' +\n                  (arrowx - 5) +\n                  ' ' +\n                  (arrowy - 5) +\n                  'H' +\n                  (arrowx + 5) +\n                  'L' +\n                  arrowx +\n                  ' ' +\n                  arrowy +\n                  'L' +\n                  (arrowx - 5) +\n                  ' ' +\n                  (arrowy - 5) +\n                  'Z\" fill=\"#C5CCD0\"/></svg>'\n              );\n          }\n        }\n      }\n    }\n  });\n\n  function blockGrabbed(block) {\n    grab(block);\n  }\n\n  function blockReleased() {\n    release();\n  }\n\n  function blockSnap(drag) {\n    snapping(drag);\n  }\n\n  // 添加状态清理函数\n  function clearCanvasState() {\n    // 清理所有块和连线\n    $('.block').remove();\n    $('.arrowblock').remove();\n    $('.indicator').addClass('invisible');\n\n    // 重置状态变量\n    active = false;\n    rearrange = false;\n    drag = null;\n    original = null;\n\n    // 清理块数据\n    if (blockManager) {\n      blockManager.clearAll();\n    } else {\n      blocks.length = 0;\n      blockstemp.length = 0;\n    }\n\n    // 同步引用\n    syncBlockReferences();\n  }\n\n  // 暴露清理函数到全局\n  window.clearFlowyCanvas = clearCanvasState;\n};\n\n// 模块导出支持\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = flowy;\n} else if (typeof window !== 'undefined') {\n  window.flowy = flowy;\n}\n"],"names":["flowy","canvas","grab","release","snapping","spacing_x","spacing_y","blockSnap","drag","$","document","ready","blockManager","window","BlockManager","require","e","getBlockManager","blocks","getAllBlocks","blockstemp","getTempBlocks","canvas_div","syncBlockReferences","getBlockCount","length","addBlock","blockData","push","mergeTempBlocks","merge","removeBlockById","blockId","removeBlocks","block","id","grep","active","paddingx","paddingy","dragx","dragy","original","offsetleft","offsetleftold","rearrange","lastevent","checkOffset","map","a","x","widths","width","mathmin","item","index","Math","min","apply","offset","left","blocko","w","filter","parent","css","arrowhelp","innerWidth","rearrangeMe","result","z","totalwidth","totalremove","children","childwidth","parentBlock","originalParentY","y","top","scrollTop","originalY","scrollLeft","arrowx","parentY","arrowy","height","html","append","output","json_data","i","data","each","json_name","this","attr","json_value","val","name","value","deleteBlocks","clearBlocks","on","event","which","newBlockId","clone","addClass","removeClass","appendTo","getNextBlockId","max","parseInt","clientX","clientY","hasClass","innerHeight","remove","xpos","ypos","debugInfo","dragPos","b","dragElement","offsetLeft","offsetTop","lastDebugInfo","console","log","targetBlock","xMin","xMax","yMin","yMax","xInRange","yInRange","snapCheckInfo","xRange","inRange","yRange","shouldSnap","lastSnapCheck","firstChildOfParent","after","svgPath","flag","idval","zwidth","handler","type","blockid","layer","foundids","allids","includes","fixOffset","off","clearFlowyCanvas","clearAll","module","exports"],"mappings":"yBA0BA,MAAMA,EAAQ,SAAUC,EAAQC,EAAMC,EAASC,EAAUC,EAAWC,GA2tClE,SAASC,EAAUC,GACjBJ,EAASI,EACX,CA5tCKN,IACHA,EAAO,WAAa,GAEjBC,IACHA,EAAU,WAAa,GAEpBC,IACHA,EAAW,WAAa,GAErBC,IACHA,EAAY,IAETC,IACHA,EAAY,IAEdG,EAAEC,UAAUC,MAAM,WAEhB,MAAMC,EArCV,WAEE,GAAsB,oBAAXC,QAA0BA,OAAOC,aAC1C,OAAO,IAAID,OAAOC,aAGpB,GAAuB,oBAAZC,QACT,IAEE,OAAO,IADcA,QAAQ,2BAE/B,OAASC,GAEP,OAAO,IACT,CAGF,OAAO,IACT,CAoByBC,GAGrB,IAAIC,EAASN,EAAeA,EAAaO,eAAiB,GACtDC,EAAaR,EAAeA,EAAaS,gBAAkB,GAC/D,MAAMC,EAAarB,EAGnB,SAASsB,IACDX,IACAM,EAASN,EAAaO,eACtBC,EAAaR,EAAaS,gBAElC,CAGA,SAASG,IACP,OAAOZ,EAAeA,EAAaY,gBAAkBN,EAAOO,MAC9D,CA4BA,SAASC,EAASC,GACZf,EACFA,EAAac,SAASC,GAGtBT,EAAOU,KAAKD,EAEhB,CAGA,SAASE,IACHjB,GACFA,EAAaiB,kBAEbX,EAASN,EAAaO,eACtBC,EAAaR,EAAaS,kBAE1BH,EAAST,EAAEqB,MAAMZ,EAAQE,GACzBA,EAAa,GAEjB,CAGA,SAASW,EAAgBC,GACnBpB,GACFA,EAAaqB,aAAa,SAAUC,GAClC,OAAOA,EAAMC,IAAMH,CACrB,GAEAd,EAASN,EAAaO,gBAEtBD,EAAST,EAAE2B,KAAKlB,EAAQ,SAAUF,GAChC,OAAOA,EAAEmB,IAAMH,CACjB,EAEJ,CACA,IAAIK,GAAS,EACb,MAAMC,EAAWjC,EACXkC,EAAWjC,EACjB,IAIIE,EAAMgC,EAAOC,EAAOC,EAJpBC,EAAa,EACbC,EAAgB,EAChBC,GAAY,EACZC,GAAY,EAwxBhB,SAASC,IACPJ,EAAazB,EAAO8B,IAAIC,GAAKA,EAAEC,GAC/B,MAAMC,EAASjC,EAAO8B,IAAIC,GAAKA,EAAEG,OAC3BC,EAAUV,EAAWK,IAAI,SAAUM,EAAMC,GAC7C,OAAOD,EAAOH,EAAOI,GAAS,CAChC,GAEA,GADAZ,EAAaa,KAAKC,IAAIC,MAAMF,KAAMH,GAC9BV,EAAarB,EAAWqC,SAASC,KAAM,CACzCd,GAAY,EACZ,MAAMe,EAAS3C,EAAO8B,IAAIC,GAAKA,EAAEd,IACjC,IAAA,IAAS2B,EAAI,EAAGA,EAAI5C,EAAOO,OAAQqC,IAcjC,GAbArD,EACE,kBACES,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAOC,IAAI,GAAG3B,GACzC,KAED6B,SACAC,IACC,OACA/C,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAOC,IAAI,GAAGZ,EACvChC,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAOC,IAAI,GAAGV,MAAQ,EACjDT,EACA,KAEiD,GAAnDzB,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAOC,IAAI,GAAGE,OAAc,CACzD,MAAME,EAAYhD,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAOC,IAAI,GAEtDI,EAAUhB,EACVhC,EAAO6C,OACLd,GAAKA,EAAEd,IAAMjB,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAOC,IAAI,GAAGE,QACtD,GAAGd,EACM,EACXzC,EAAE,kBAAoBoD,EAAOC,GAAK,KAC/BE,SACAC,IAAI,OAAQC,EAAUhB,EAAIP,EAAa,GAAK,EAAI,MAEnDlC,EAAE,kBAAoBoD,EAAOC,GAAK,KAC/BE,SACAC,IACC,OACA/C,EAAO6C,OACL5B,GACEA,EAAGA,IAAMjB,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAOC,IAAI,GAAGE,QACpD,GAAGd,EACH,GACAP,EACA,GACA,KAGV,CAEF,IAASmB,EAAI,EAAGA,EAAI5C,EAAOO,OAAQqC,IACjC5C,EAAO4C,GAAGZ,EACRzC,EAAE,kBAAoBS,EAAO4C,GAAG3B,GAAK,KAClC6B,SACAL,SAASC,KACZtC,EAAWqC,SAASC,KACpBnD,EAAE,kBAAoBS,EAAO4C,GAAG3B,GAAK,KAClC6B,SACAG,aACD,EACF,GAEJvB,EAAgBD,CAClB,CACF,CAgEA,SAASyB,IACP,MAAMC,EAASnD,EAAO8B,IAAIC,GAAKA,EAAEe,QACjC,IAAA,IAASM,EAAI,EAAGA,EAAID,EAAO5C,OAAQ6C,IAAK,CACtC,IAAiB,GAAbD,EAAOC,GACT,SAEF,IAAIC,EAAa,EACbC,EAAc,EAElB,IAAA,IACMV,EAAI,EACRA,EAAI5C,EAAO6C,OAAO5B,GAAMA,EAAG6B,QAAUK,EAAOC,IAAI7C,OAChDqC,IACA,CACA,IAAIW,EAAWvD,EAAO6C,OAAO5B,GAAMA,EAAG6B,QAAUK,EAAOC,IAAIR,GACC,GAAxD5C,EAAO6C,OAAO5B,GAAMA,EAAG6B,QAAUS,EAAStC,IAAIV,SAChDgD,EAASC,WAAa,GAEpBD,EAASC,WAAaD,EAASrB,MAC7BU,GAAK5C,EAAO6C,OAAO5B,GAAMA,EAAG6B,QAAUK,EAAOC,IAAI7C,OAAS,EAC5D8C,GAAcE,EAASC,WAEvBH,GAAcE,EAASC,WAAapC,EAGlCwB,GAAK5C,EAAO6C,OAAO5B,GAAMA,EAAG6B,QAAUK,EAAOC,IAAI7C,OAAS,EAC5D8C,GAAcE,EAASrB,MAEvBmB,GAAcE,EAASrB,MAAQd,CAGrC,CACA,IAAiB,GAAb+B,EAAOC,GAAU,CACnB,MAAMK,EAAczD,EAAO6C,OAAOd,GAAKA,EAAEd,IAAMkC,EAAOC,IAAI,GACtDK,IACFA,EAAYD,WAAaH,EAE7B,CACA,IACMT,EAAI,EACRA,EAAI5C,EAAO6C,OAAO5B,GAAMA,EAAG6B,QAAUK,EAAOC,IAAI7C,OAChDqC,IACA,CACIW,EAAWvD,EAAO6C,OAAO5B,GAAMA,EAAG6B,QAAUK,EAAOC,IAAIR,GAC3D,IAAiB,GAAbO,EAAOC,GAAU,CACnB,MAAMK,EAAczD,EAAO6C,OAAO5B,GAAMA,EAAGA,IAAMkC,EAAOC,IAAI,GAC5D,GAAIK,EAAa,CAEf,MAAMC,EAAkBD,EAAYE,EAEpCpE,EAAE,kBAAoBgE,EAAStC,GAAK,KACjC6B,SACAC,IACC,MACAU,EAAYE,EACZtC,EACAjB,EAAWqC,SAASmB,IACpBxD,EAAWyD,YACX,MAEJJ,EAAYE,EAAIF,EAAYE,EAAItC,EAGhCoC,EAAYK,UAAYJ,CAC1B,CACF,CACIH,EAASC,WAAaD,EAASrB,OACjC3C,EAAE,kBAAoBgE,EAAStC,GAAK,KACjC6B,SACAC,IACC,OACA/C,EAAO6C,OAAO5B,GAAMA,EAAGA,IAAMkC,EAAOC,IAAI,GAAGpB,EACzCqB,EAAa,EACbC,EACAC,EAASC,WAAa,EACtBD,EAASrB,MAAQ,EACjB9B,EAAWqC,SAASC,KACpBtC,EAAW2D,aACX,MAENR,EAASvB,EACPhC,EAAO6C,OAAO5B,GAAMA,EAAGA,IAAMkC,EAAOC,IAAI,GAAGpB,EAC3CqB,EAAa,EACbC,EACAC,EAASC,WAAa,EACxBF,GAAeC,EAASC,WAAapC,IAErC7B,EAAE,kBAAoBgE,EAAStC,GAAK,KACjC6B,SACAC,IACC,OACA/C,EAAO6C,OAAO5B,GAAMA,EAAGA,IAAMkC,EAAOC,IAAI,GAAGpB,EACzCqB,EAAa,EACbC,EACAlD,EAAWqC,SAASC,KACpBtC,EAAW2D,aACX,MAENR,EAASvB,EACPhC,EAAO6C,OAAO5B,GAAMA,EAAGA,IAAMkC,EAAOC,IAAI,GAAGpB,EAC3CqB,EAAa,EACbC,EACAC,EAASrB,MAAQ,EACnBoB,GAAeC,EAASrB,MAAQd,GAElC,MAAM4B,EAAYhD,EAAO6C,OAAOd,GAAKA,EAAEd,IAAMsC,EAAStC,IAAI,GACpD+C,EACJhB,EAAUhB,EAAIhC,EAAO6C,OAAOd,GAAKA,EAAEd,IAAMsC,EAAST,QAAQ,GAAGd,EAAI,GAC7DyB,EAAczD,EAAO6C,OAAOd,GAAKA,EAAEd,IAAMsC,EAAST,QAAQ,GAE1DmB,OAAoC,IAA1BR,EAAYK,UAA0BL,EAAYK,UAAYL,EAAYE,EACpFO,EACJlB,EAAUW,EACVX,EAAUmB,OAAS,GAClBF,EAAUR,EAAYU,OAAS,GAIlC5E,EAAE,kBAAoBgE,EAAStC,GAAK,KACjC6B,SACAC,IACC,MACA/C,EAAO6C,OAAO5B,GAAMA,EAAGA,IAAMsC,EAAST,QAAQ,GAAGa,EAC/C3D,EAAO6C,OAAO5B,GAAMA,EAAGA,IAAMsC,EAAST,QAAQ,GAAGqB,OAAS,EAC1D/D,EAAWqC,SAASmB,IACpBxD,EAAWyD,YACX,MAEFG,EAAS,GACXzE,EAAE,kBAAoBgE,EAAStC,GAAK,KACjC6B,SACAC,IAAI,OAAQC,EAAUhB,EAAI,EAAI5B,EAAWqC,SAASC,KAAOtC,EAAW2D,aAAe,MACtFxE,EAAE,kBAAoBgE,EAAStC,GAAK,KACjC6B,SACAsB,KACC,+CACEb,EAAStC,GACT,+FACCjB,EAAO6C,OAAO5B,GAAMA,EAAGA,IAAMsC,EAAST,QAAQ,GAAGd,EAChDgB,EAAUhB,EACV,GACF,OACChC,EAAO6C,OAAO5B,GAAMA,EAAGA,IAAMsC,EAAST,QAAQ,GAAGd,EAChDgB,EAAUhB,EACV,GACF,IACAX,EAAW,EACX,MACAA,EAAW,EACX,MACA6C,EACA,uDACCA,EAAS,GACV,SACAA,EACA,OACCA,EAAS,GACV,+BAGN3E,EAAE,kBAAoBgE,EAAStC,GAAK,KACjC6B,SACAC,IACC,OACA/C,EAAO6C,OAAO5B,GAAMA,EAAGA,IAAMsC,EAAST,QAAQ,GAAGd,EAC/C,GACA5B,EAAWqC,SAASC,KACpBtC,EAAW2D,aACX,MAENxE,EAAE,kBAAoBgE,EAAStC,GAAK,KACjC6B,SACAsB,KACC,+CACEb,EAAStC,GACT,sGACAI,EAAW,EACX,IACA2C,EACA,IACA3C,EAAW,EACX,IACA2C,EACA,IACAE,EACA,qDACCF,EAAS,GACV,KACCE,EAAS,GACV,KACCF,EAAS,GACV,IACAA,EACA,IACAE,EACA,KACCF,EAAS,GACV,KACCE,EAAS,GACV,6BAGV,CACF,CACF,CAnmCI9D,GAA2C,mBAAtBA,EAAWiE,QAClCjE,EAAWiE,OAAO,2CAEpBvF,EAAMwF,OAAS,WACb,MAAMC,EAAY,GAClB,GAAIvE,EAAOO,OAAS,EAAG,CACrB,IAAA,IAASiE,EAAI,EAAGA,EAAIxE,EAAOO,OAAQiE,IACjCD,EAAU7D,KAAK,CACbO,GAAIjB,EAAOwE,GAAGvD,GACd6B,OAAQ9C,EAAOwE,GAAG1B,OAClB2B,KAAM,KAERlF,EAAE,kBAAoBS,EAAOwE,GAAGvD,GAAK,KAClC6B,SACAS,SAAS,SACTmB,KAAK,WACJ,MAAMC,EAAYpF,EAAEqF,MAAMC,KAAK,QACzBC,EAAavF,EAAEqF,MAAMG,MAC3BR,EAAUC,GAAGC,KAAK/D,KAAK,CACrBsE,KAAML,EACNM,MAAOH,GAEX,GAEJ,OAAOP,CACT,CACF,EACAzF,EAAMoG,aAAe,WAlFfxF,GACFA,EAAayF,cAEbnF,EAAOO,OAAS,GAEhBP,EAAS,GA+EXI,EAAWgE,KAAK,0CAClB,EACA7E,EAAEC,UAAU4F,GAAG,YAAa,gBAAiB,SAAUC,GACrD,GAAoB,IAAhBA,EAAMC,MAAa,CAErB,GADA9D,EAAWjC,EAAEqF,MACU,GAAnBtE,IAAsB,CACxB,IAAIiF,EAAajF,IACjBf,EAAEqF,MACCY,QACAC,SAAS,SACTpB,OACC,8DACEkB,EACA,MAEHG,YAAY,gBACZC,SAAS,QACZpG,EAAEqF,MAAMa,SAAS,WACjBnG,EAAOC,EAAE,kBAAoBgG,EAAa,KAAKzC,QACjD,KAAO,CACDyC,EAtHJ7F,EACKA,EAAakG,iBAEK,IAAlB5F,EAAOO,OACV,EACA+B,KAAKuD,IAAIrD,MACPF,KACAtC,EAAO8B,IAAIC,GAAKA,EAAEd,KAChB,EA+GN1B,EAAEqF,MACCY,QACAC,SAAS,SACTpB,OACC,8DACEkB,EACA,MAEHG,YAAY,gBACZC,SAAS,QACZpG,EAAEqF,MAAMa,SAAS,WACjBnG,EAAOC,EAAE,kBAAoBuG,SAASP,GAAc,KAAKzC,QAC3D,CAwiCgB9B,EAviCHzB,EAAEqF,MAwiCnB5F,EAAKgC,GAviCD1B,EAAKmG,SAAS,YACdtE,GAAS,EACTG,EAAQ+D,EAAMU,QAAUxG,EAAEqF,MAAMnC,SAASC,KACzCnB,EAAQ8D,EAAMW,QAAUzG,EAAEqF,MAAMnC,SAASmB,IACzCtE,EAAKyD,IAAI,OAAQsC,EAAMU,QAAUzE,EAAQ,MACzChC,EAAKyD,IAAI,MAAOsC,EAAMW,QAAUzE,EAAQ,KAG1C,CA8hCJ,IAAsBP,CA7hCpB,GACAzB,EAAEC,UAAU4F,GAAG,UAAW,SAAUC,GAClC,GAAoB,IAAhBA,EAAMC,QAAgBnE,GAAUQ,GASlC,GAuhCJ1C,IA9hCSM,EAAE,cAAc0G,SAAS,cAC5B1G,EAAE,cAAckG,SAAS,aAEvBtE,IACFK,EAASkE,YAAY,WACrBpG,EAAKoG,YAAY,aAE8B,GAA7CI,SAASxG,EAAKiE,SAAS,YAAYwB,QAAepD,EAAW,CAC/DrC,EAAKoG,YAAY,YACjB/D,GAAY,EACZ,IAAA,IAASiB,EAAI,EAAGA,EAAI1C,EAAWK,OAAQqC,IACjC1C,EAAW0C,GAAG3B,IAAM6E,SAASxG,EAAKiE,SAAS,YAAYwB,SACzDxF,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAC,IACC,OACAxD,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAL,SAASC,KACVtC,EAAWqC,SAASC,KACpBtC,EAAW2D,cAEjBxE,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAC,IACC,MACAxD,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAL,SAASmB,IACVxD,EAAWqC,SAASmB,IACpBxD,EAAWyD,aAEjBtE,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAC,IACC,OACAxD,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAL,SAASC,KACVtC,EAAWqC,SAASC,KACpBtC,EAAW2D,cAEjBxE,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAC,IACC,MACAxD,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAL,SAASmB,IACVxD,EAAWqC,SAASmB,IACpBxD,EAAWyD,YACX,MAENtE,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACA6C,SAASvF,GACZb,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACA6C,SAASvF,GAEZF,EAAW0C,GAAGZ,EACZzC,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAL,SAASC,KACZnD,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KAAKgC,aAAe,EAC7D7C,EAAW2D,aACb7D,EAAW0C,GAAGe,EACZpE,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAL,SAASmB,IACZrE,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAoD,cACD,EACF9F,EAAWyD,aAGjB3D,EAAW2C,OAAOd,GAAa,GAARA,EAAEd,IAAS,GAAGe,EACnC1C,EAAKmD,SAASC,KAAOpD,EAAK2D,aAAe,EAC3C/C,EAAW2C,OAAOd,GAAa,GAARA,EAAEd,IAAS,GAAG0C,EACnCrE,EAAKmD,SAASmB,IAAMtE,EAAK4G,cAAgB,EAC3CvF,GACF,MAAA,GACEQ,GACiB,GAAjBnB,EAAOO,QACPjB,EAAKmD,SAASmB,IAAMxD,EAAWqC,SAASmB,KACxCtE,EAAKmD,SAASC,KAAOtC,EAAWqC,SAASC,KAEzCrD,EAAUC,GACV6B,GAAS,EACT7B,EAAKyD,IACH,MACAzD,EAAKmD,SAASmB,IACZxD,EAAWqC,SAASmB,IACpBxD,EAAWyD,YACX,MAEJvE,EAAKyD,IACH,OACAzD,EAAKmD,SAASC,KACZtC,EAAWqC,SAASC,KACpBtC,EAAW2D,aACX,MAEJzE,EAAKqG,SAASvF,GACdI,EAAS,CACPsC,QAAQ,EACRU,WAAY,EACZvC,GAAI6E,SAASxG,EAAKiE,SAAS,YAAYwB,OACvC/C,EACE1C,EAAKmD,SAASC,KACdpD,EAAK2D,aAAe,EACpB7C,EAAW2D,aACbJ,EACErE,EAAKmD,SAASmB,IACdtE,EAAK4G,cAAgB,EACrB9F,EAAWyD,YACb3B,MAAO5C,EAAK2D,aACZkB,OAAQ7E,EAAK4G,qBAEjB,GAAW/E,GAA2B,GAAjBnB,EAAOO,OAC1BjB,EAAK6G,cACP,GAAWhF,GAAUQ,EAAW,CAC9B,MAAMyE,EACJ9G,EAAKmD,SAASC,KACdpD,EAAK2D,aAAe,EACpB7C,EAAW2D,aACPsC,EAAO/G,EAAKmD,SAASmB,IAAMxD,EAAWyD,YACtClB,EAAS3C,EAAO8B,IAAIC,GAAKA,EAAEd,IAG3BqF,EAAY,CAChBC,QAAS,CAAEvE,EAAGoE,EAAMzC,EAAG0C,GACvBrG,OAAQA,EAAO8B,IAAI0E,IAAA,CAAQvF,GAAIuF,EAAEvF,GAAIe,EAAGwE,EAAExE,EAAG2B,EAAG6C,EAAE7C,EAAGzB,MAAOsE,EAAEtE,MAAOiC,OAAQqC,EAAErC,UAC/EsC,YAAa,CACXC,WAAYpH,EAAKmD,SAASC,KAC1BiE,UAAWrH,EAAKmD,SAASmB,IACzB1B,MAAO5C,EAAK2D,aACZkB,OAAQ7E,EAAK4G,gBAGjBvG,OAAOiH,cAAgBN,EACvBO,QAAQC,IAAI,QAASR,GACrB,IAAA,IAAS9B,EAAI,EAAGA,EAAIxE,EAAOO,OAAQiE,IAAK,CACtC,MAAMuC,EAAc/G,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAO6B,IAAI,GACpDwC,EAAOD,EAAY/E,EAAI+E,EAAY7E,MAAQ,EAAId,EAC/C6F,EAAOF,EAAY/E,EAAI+E,EAAY7E,MAAQ,EAAId,EAC/C8F,EAAOH,EAAYpD,EAAIoD,EAAY5C,OAAS,EAC5CgD,EAAOJ,EAAYpD,EAAIoD,EAAY5C,OAEnCiD,EAAWhB,GAAQY,GAAQZ,GAAQa,EACnCI,EAAWhB,GAAQa,GAAQb,GAAQc,EAEnCG,EAAgB,CACpBxG,QAAS6B,EAAO6B,GAChBuC,YAAa,CAAE/E,EAAG+E,EAAY/E,EAAG2B,EAAGoD,EAAYpD,EAAGzB,MAAO6E,EAAY7E,MAAOiC,OAAQ4C,EAAY5C,QACjGoC,QAAS,CAAEvE,EAAGoE,EAAMzC,EAAG0C,GACvBkB,OAAQ,CAAEhF,IAAKyE,EAAMnB,IAAKoB,EAAMO,QAASJ,GACzCK,OAAQ,CAAElF,IAAK2E,EAAMrB,IAAKsB,EAAMK,QAASH,GACzCK,WAAYN,GAAYC,EACxBjG,YAKF,GAHAzB,OAAOgI,cAAgBL,EACvBT,QAAQC,IAAI,UAAWQ,GAEnBF,GAAYC,EAAU,CACxBR,QAAQC,IAAI,qBAAsB,CAAEnF,UAAAA,IACpCR,GAAS,EACJQ,EAKHkF,QAAQC,IAAI,wBAJZD,QAAQC,IAAI,2BACZzH,EAAUC,GACVA,EAAKqG,SAASvF,IAIhB,IAAIiD,EAAa,EACbC,EAAc,EAElB,IACMV,EAAI,EACRA,EAAI5C,EAAO6C,OAAO5B,GAAMA,EAAG6B,QAAUH,EAAO6B,IAAIjE,OAChDqC,IACA,EACIW,EAAWvD,EAAO6C,OAAO5B,GAAMA,EAAG6B,QAAUH,EAAO6B,IAAI5B,IAC9CY,WAAaD,EAASrB,MACjCmB,GAAcE,EAASC,WAAapC,EAEpCiC,GAAcE,EAASrB,MAAQd,CAEnC,CACAiC,GAAc/D,EAAK2D,aACnB,IACML,EAAI,EACRA,EAAI5C,EAAO6C,OAAO5B,GAAMA,EAAG6B,QAAUH,EAAO6B,IAAIjE,OAChDqC,IACA,EACIW,EAAWvD,EAAO6C,OAAO5B,GAAMA,EAAG6B,QAAUH,EAAO6B,IAAI5B,IAC9CY,WAAaD,EAASrB,OACjC3C,EAAE,kBAAoBgE,EAAStC,GAAK,KACjC6B,SACAC,IACC,OACA/C,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAO6B,IAAI,GAAGxC,EACvCqB,EAAa,EACbC,EACAC,EAASC,WAAa,EACtBD,EAASrB,MAAQ,EACjB,MAENqB,EAASvB,EACPhC,EAAO6C,OAAO5B,GAAMA,EAAG6B,QAAUH,EAAO6B,IAAI,GAAGxC,EAC/CqB,EAAa,EACbC,EACAC,EAASC,WAAa,EACxBF,GAAeC,EAASC,WAAapC,IAErC7B,EAAE,kBAAoBgE,EAAStC,GAAK,KACjC6B,SACAC,IACC,OACA/C,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAO6B,IAAI,GAAGxC,EACvCqB,EAAa,EACbC,EACA,MAENC,EAASvB,EACPhC,EAAO6C,OAAO5B,GAAMA,EAAG6B,QAAUH,EAAO6B,IAAI,GAAGxC,EAC/CqB,EAAa,EACbC,EACAC,EAASrB,MAAQ,EACnBoB,GAAeC,EAASrB,MAAQd,EAEpC,CAkBA,GAjBA9B,EAAKyD,IACH,OACA/C,EAAO6C,OAAO5B,GAAMA,EAAGA,IAAM0B,EAAO6B,IAAI,GAAGxC,EACzCqB,EAAa,EACbC,EACAlD,EAAWqC,SAASC,KACpBtC,EAAW2D,aACX,MAEJzE,EAAKyD,IACH,MACA/C,EAAO6C,OAAO5B,GAAMA,EAAGA,IAAM0B,EAAO6B,IAAI,GAAGb,EACzC3D,EAAO6C,OAAO5B,GAAMA,EAAGA,IAAM0B,EAAO6B,IAAI,GAAGL,OAAS,EACpD9C,EACAjB,EAAWqC,SAASmB,IACpB,MAEAjC,EAAW,CACbzB,EAAW2C,OACTd,GAAKA,EAAEd,IAAM6E,SAASxG,EAAKiE,SAAS,YAAYwB,QAChD,GAAG/C,EACH1C,EAAKmD,SAASC,KACdpD,EAAK2D,aAAe,EACpB7C,EAAW2D,aACb7D,EAAW2C,OACTd,GAAKA,EAAEd,IAAM6E,SAASxG,EAAKiE,SAAS,YAAYwB,QAChD,GAAGpB,EACHrE,EAAKmD,SAASmB,IACdtE,EAAK4G,cAAgB,EACrB9F,EAAWyD,YACb3D,EAAW2C,UACJd,EAAEd,IAAM3B,EAAKiE,SAAS,YAAYwB,OACvC,GAAGjC,OAASH,EAAO6B,GACrB,IAAS5B,EAAI,EAAGA,EAAI1C,EAAWK,OAAQqC,IAEnC1C,EAAW0C,GAAG3B,IACd6E,SAASxG,EAAKiE,SAAS,YAAYwB,SAEnCxF,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAC,IACC,OACAxD,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAL,SAASC,KACVtC,EAAWqC,SAASC,KACpBtC,EAAW2D,cAEjBxE,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAC,IACC,MACAxD,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAL,SAASmB,IACVxD,EAAWqC,SAASmB,IACpBxD,EAAWyD,aAEjBtE,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAC,IACC,OACAxD,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAL,SAASC,KACVtC,EAAWqC,SAASC,KACpBtC,EAAW2D,aACX,IAENxE,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAC,IACC,MACAxD,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAL,SAASmB,IACVxD,EAAWqC,SAASmB,IACpBxD,EAAWyD,aAEjBtE,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACA6C,SAASvF,GACZb,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACA6C,SAASvF,GAEZF,EAAW0C,GAAGZ,EACZzC,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAL,SAASC,KACZnD,EACE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACvCgC,aACA,EACF7C,EAAW2D,aACb7D,EAAW0C,GAAGe,EACZpE,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAL,SAASmB,IACZrE,EAAE,kBAAoBW,EAAW0C,GAAG3B,GAAK,KACtC6B,SACAoD,cACD,EACF9F,EAAWyD,aAGjBlD,GACF,MACEH,EAAS,CACPgD,WAAY,EACZV,OAAQH,EAAO6B,GACfvD,GAAI6E,SAASxG,EAAKiE,SAAS,YAAYwB,OACvC/C,EACE1C,EAAKmD,SAASC,KACdpD,EAAK2D,aAAe,EACpB7C,EAAW2D,aACbJ,EACErE,EAAKmD,SAASmB,IACdtE,EAAK4G,cAAgB,EACrB9F,EAAWyD,YACb3B,MAAO5C,EAAK2D,aACZkB,OAAQ7E,EAAK4G,gBAGf7F,IAGFA,IACA,MAAM2C,EAAYhD,EAAO6C,OACvBd,GAAKA,EAAEd,IAAM6E,SAASxG,EAAKiE,SAAS,YAAYwB,QAChD,GACIf,EACJhB,EAAUhB,EAAIhC,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAO6B,IAAI,GAAGxC,EAAI,GAEvD4F,EAAqB5H,EAAO6C,OAAO5B,GAAMA,EAAG6B,QAAUH,EAAO6B,IAAI,GACjEN,EACJlB,EAAUW,EACVX,EAAUmB,OAAS,GAClByD,EAAsBA,EAAmBjE,EAAIiE,EAAmBzD,OAAS,EAAMnB,EAAUW,EAAIX,EAAUmB,OAAS,GACjH/D,EAAWyD,YAGb,GAAIG,EAAS,EACX1E,EAAKuI,MACH,uEACEvI,EAAKiE,SAAS,YAAYwB,MAC1B,+FACC/E,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAO6B,IAAI,GAAGxC,EACxCgB,EAAUhB,EACV,GACF,OACChC,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAO6B,IAAI,GAAGxC,EACxCgB,EAAUhB,EACV,GACF,IACAX,EAAW,EACX,MACAA,EAAW,EACX,MACA6C,EACA,uDACCA,EAAS,GACV,SACAA,EACA,OACCA,EAAS,GACV,mCAEJ3E,EAAE,kBAAoBD,EAAKiE,SAAS,YAAYwB,MAAQ,KACrDjC,SACAC,IACC,OACAC,EAAUhB,EACR,EACA5B,EAAWqC,SAASC,KACpBtC,EAAW2D,aACX,MAENxE,EAAE,kBAAoBD,EAAKiE,SAAS,YAAYwB,MAAQ,KACrDjC,SACAC,IACC,MACA/C,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAO6B,IAAI,GAAGb,EACvC3D,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAO6B,IAAI,GAAGL,OAAS,EAClD/D,EAAWqC,SAASmB,IACpBxD,EAAWyD,YACX,UAED,CACL,MAAMiE,EAAU,YAAYzG,EAAW,KAAK2C,KAAU3C,EAAW,KAAK2C,KAAUE,IAEhF5E,EAAKuI,MACH,uEACEvI,EAAKiE,SAAS,YAAYwB,MAC1B,6FACA+C,EACA,qDACC9D,EAAS,GACV,KACCE,EAAS,GACV,KACCF,EAAS,GACV,IACAA,EACA,IACAE,EACA,KACCF,EAAS,GACV,KACCE,EAAS,GACV,mCAEJ3E,EACE,kBACEuG,SAASxG,EAAKiE,SAAS,YAAYwB,OACnC,KAEDjC,SACAC,IACC,OACA/C,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAO6B,IAAI,GAAGxC,EACvC,GACA5B,EAAWqC,SAASC,KACpBtC,EAAW2D,aACX,KAER,CAeA,GAdAxE,EACE,kBACEuG,SAASxG,EAAKiE,SAAS,YAAYwB,OACnC,KAEDjC,SACAC,IACC,MACA/C,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAO6B,IAAI,GAAGb,EACvC3D,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAO6B,IAAI,GAAGL,OAAS,EAClD/D,EAAWqC,SAASmB,IACpBxD,EAAWyD,YACX,OAEiD,GAAnD7D,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAO6B,IAAI,GAAG1B,OAAc,CACzD,IAAIiF,GAAO,EAEX,IADA,IAAIC,EAAQrF,EAAO6B,IACXuD,GACN,IAAmD,GAA/C/H,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM+G,GAAO,GAAGlF,OACvCiF,GAAO,MACF,CACL,IAAIE,EAAS,EACb,IACMrF,EAAI,EACRA,EAAI5C,EAAO6C,OAAO5B,GAAMA,EAAG6B,QAAUkF,GAAOzH,OAC5CqC,IACA,CACA,IAAIW,KAAWvD,EAAO6C,OAAO5B,GAAMA,EAAG6B,QAAUkF,GAAOpF,IAC1CY,WAAaD,EAASrB,MAE/BU,GACA5C,EAAO6C,OAAO5B,GAAMA,EAAG6B,QAAUkF,GAAOzH,OAAS,EAEjD0H,GAAU1E,EAASC,WAEnByE,GAAU1E,EAASC,WAAapC,EAIhCwB,GACA5C,EAAO6C,OAAO5B,GAAMA,EAAG6B,QAAUkF,GAAOzH,OAAS,EAEjD0H,GAAU1E,EAASrB,MAEnB+F,GAAU1E,EAASrB,MAAQd,CAGjC,CACApB,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM+G,GAAO,GAAGxE,WAAayE,EAClDD,EAAQhI,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM+G,GAAO,GAAGlF,MAC/C,CAEF9C,EAAO6C,OAAO5B,GAAMA,EAAGA,IAAM+G,GAAO,GAAGxE,WAAaH,CACtD,CACI1B,IACFA,GAAY,EACZrC,EAAKoG,YAAY,aAEnBxC,IACArB,IACA,KACF,CAAW2C,GAAKxE,EAAOO,OAAS,IAC1BoB,IACFA,GAAY,EACZzB,EAAa,IAEfiB,GAAS,EACT7B,EAAK6G,SAET,CACF,CAEJ,GACA5G,EAAEC,UAAU4F,GAAG,YAAa,SAAU,SAAUC,GAC9C9F,EAAEC,UAAU4F,GAAG,oBAAqB,SAAU,SAAS8C,EAAQ7C,GAC7D,GAAmB,YAAfA,EAAM8C,MACY,IAAhB9C,EAAMC,QACHnE,IAAWQ,EAAW,CACzBA,GAAY,EACZrC,EAAOC,EAAEqF,MACTtF,EAAKmG,SAAS,YACdnE,EAAQ+D,EAAMU,QAAUxG,EAAEqF,MAAMnC,SAASC,KACzCnB,EAAQ8D,EAAMW,QAAUzG,EAAEqF,MAAMnC,SAASmB,IACzC,MAAMwE,EAAUtC,SAASvG,EAAEqF,MAAMrB,SAAS,YAAYwB,OACtDzF,EAAOC,EAAEqF,MACT1E,EAAWQ,KAAKV,EAAO6C,OAAOd,GAAKA,EAAEd,IAAMmH,GAAS,IACpDpI,EAAST,EAAE2B,KAAKlB,EAAQ,SAASF,GAC/B,OAAOA,EAAEmB,IAAMmH,CACjB,GACA7I,EAAE,kBAAoB6I,EAAU,KAC7BtF,SACAqD,SACH,IAAIkC,EAAQrI,EAAO6C,OAAOd,GAAKA,EAAEe,QAAUsF,GACvCL,GAAO,EACPO,EAAW,GACf,MAAMC,EAAS,GACf,MAAQR,GAAM,CACZ,IAAA,IAASvD,EAAI,EAAGA,EAAI6D,EAAM9H,OAAQiE,IAChCtE,EAAWQ,KAAKV,EAAO6C,OAAOd,GAAKA,EAAEd,IAAMoH,EAAM7D,GAAGvD,IAAI,IACxD1B,EAAE,kBAAoB8I,EAAM7D,GAAGvD,GAAK,KACjC6B,SACAC,IACC,OACAxD,EAAE,kBAAoB8I,EAAM7D,GAAGvD,GAAK,KACjC6B,SACAL,SAASC,KAAOpD,EAAKmD,SAASC,MAErCnD,EAAE,kBAAoB8I,EAAM7D,GAAGvD,GAAK,KACjC6B,SACAC,IACC,MACAxD,EAAE,kBAAoB8I,EAAM7D,GAAGvD,GAAK,KACjC6B,SACAL,SAASmB,IAAMtE,EAAKmD,SAASmB,KAEpCrE,EAAE,kBAAoB8I,EAAM7D,GAAGvD,GAAK,KACjC6B,SACAC,IACC,OACAxD,EAAE,kBAAoB8I,EAAM7D,GAAGvD,GAAK,KACjC6B,SACAL,SAASC,KAAOpD,EAAKmD,SAASC,MAErCnD,EAAE,kBAAoB8I,EAAM7D,GAAGvD,GAAK,KACjC6B,SACAC,IACC,MACAxD,EAAE,kBAAoB8I,EAAM7D,GAAGvD,GAAK,KACjC6B,SACAL,SAASmB,IAAMtE,EAAKmD,SAASmB,KAEpCrE,EAAE,kBAAoB8I,EAAM7D,GAAGvD,GAAK,KACjC6B,SACA6C,SAASrG,GACZC,EAAE,kBAAoB8I,EAAM7D,GAAGvD,GAAK,KACjC6B,SACA6C,SAASrG,GACZgJ,EAAS5H,KAAK2H,EAAM7D,GAAGvD,IACvBsH,EAAO7H,KAAK2H,EAAM7D,GAAGvD,IAEA,GAAnBqH,EAAS/H,OACXwH,GAAO,GAEPM,EAAQrI,EAAO6C,OAAOd,GAAKuG,EAASE,SAASzG,EAAEe,SAC/CwF,EAAW,GAEf,CACA,IACM9D,EAAI,EACRA,EAAIxE,EAAO6C,OAAOd,GAAKA,EAAEe,QAAUsF,GAAS7H,OAC5CiE,IACA,CAEA3D,EADkBb,EAAO6C,OAAOd,GAAKA,EAAEe,QAAUsF,GAAS5D,GAE5D,CACA,IAASA,EAAI,EAAGA,EAAI+D,EAAOhI,OAAQiE,IAAK,CAEtC3D,EADkB0H,EAAO/D,GAE3B,CACIxE,EAAOO,OAAS,GAClB2C,IAEEtB,GA8Jd,WACE,GAAIF,EAAgBtB,EAAWqC,SAASC,KAAM,CAC5Cd,GAAY,EACZ,MAAMe,EAAS3C,EAAO8B,IAAIC,GAAKA,EAAEd,IACjC,IAAA,IAAS2B,EAAI,EAAGA,EAAI5C,EAAOO,OAAQqC,IAwBjC,GAvBArD,EACE,kBACES,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAOC,IAAI,GAAG3B,GACzC,KAED6B,SACAC,IACC,OACA/C,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAOC,IAAI,GAAGZ,EACvChC,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAOC,IAAI,GAAGV,MAAQ,EACjDR,EACA,IAEN1B,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAOC,IAAI,GAAGZ,EACvCzC,EACE,kBACES,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAOC,IAAI,GAAG3B,GACzC,KAED6B,SACAL,SAASC,KACZ1C,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAOC,IAAI,GAAGV,MAAQ,GAEI,GAAnDlC,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAOC,IAAI,GAAGE,OAAc,CACzD,MAAME,EAAYhD,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAOC,IAAI,GAEtDI,EAAUhB,EACVhC,EAAO6C,OACLd,GAAKA,EAAEd,IAAMjB,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAOC,IAAI,GAAGE,QACtD,GAAGd,EACM,EACXzC,EAAE,kBAAoBoD,EAAOC,GAAK,KAC/BE,SACAC,IAAI,OAAQC,EAAUhB,EAAI,EAAI5B,EAAWqC,SAASC,KAAO,MAE5DnD,EAAE,kBAAoBoD,EAAOC,GAAK,KAC/BE,SACAC,IACC,OACA/C,EAAO6C,OACL5B,GACEA,EAAGA,IAAMjB,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAOC,IAAI,GAAGE,QACpD,GAAGd,EACH,GACA5B,EAAWqC,SAASC,KACpB,KAGV,CAEF,IAASE,EAAI,EAAGA,EAAI5C,EAAOO,OAAQqC,KAGnClB,EAAgB,CAClB,CACF,CAzNY+G,EAEJ,CAGJlJ,EAAEC,UAAUkJ,IAAI,oBAAqBR,EACvC,EACF,GACA3I,EAAEC,UAAU4F,GAAG,YAAa,SAAUC,GA8BpC,GA7BIlE,GACF7B,EAAKyD,IAAI,OAAQsC,EAAMU,QAAUzE,EAAQ,MACzChC,EAAKyD,IAAI,MAAOsC,EAAMW,QAAUzE,EAAQ,OAC/BI,IACTrC,EAAKyD,IACH,OACAsC,EAAMU,QACJzE,EACAlB,EAAWqC,SAASC,KACpBtC,EAAW2D,aACX,MAEJzE,EAAKyD,IACH,MACAsC,EAAMW,QACJzE,EACAnB,EAAWqC,SAASmB,IACpBxD,EAAWyD,YACX,MAEJ3D,EAAW2C,OACTd,GAAKA,EAAEd,IAAM6E,SAASxG,EAAKiE,SAAS,YAAYwB,QAChD/C,EACA1C,EAAKmD,SAASC,KAAOpD,EAAK2D,aAAe,EAAI7C,EAAW2D,aAC1D7D,EAAW2C,OACTd,GAAKA,EAAEd,IAAM6E,SAASxG,EAAKiE,SAAS,YAAYwB,QAChDpB,EACArE,EAAKmD,SAASmB,IAAMtE,EAAK4G,cAAgB,EAAI9F,EAAWyD,aAExD1C,GAAUQ,EAAW,CACvB,MAAMyE,EACJ9G,EAAKmD,SAASC,KAAOpD,EAAK2D,aAAe,EAAI7C,EAAW2D,aACpDsC,EAAO/G,EAAKmD,SAASmB,IAAMxD,EAAWyD,YACtClB,EAAS3C,EAAO8B,IAAIC,GAAKA,EAAEd,IACjC,IAAA,IAASuD,EAAI,EAAGA,EAAIxE,EAAOO,OAAQiE,IAAK,CACtC,GACE4B,GACEpG,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAO6B,IAAI,GAAGxC,EACvChC,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAO6B,IAAI,GAAGtC,MAAQ,EACjDd,GACJgF,GACEpG,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAO6B,IAAI,GAAGxC,EACvChC,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAO6B,IAAI,GAAGtC,MAAQ,EACjDd,GACJiF,GACErG,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAO6B,IAAI,GAAGb,EACvC3D,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAO6B,IAAI,GAAGL,OAAS,GACtDkC,GACErG,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAO6B,IAAI,GAAGb,EACvC3D,EAAO6C,OAAOd,GAAKA,EAAEd,IAAM0B,EAAO6B,IAAI,GAAGL,OAC7C,CACA5E,EAAE,cAAcoG,SACdpG,EAAE,kBAAoBoD,EAAO6B,GAAK,KAAK1B,UAEzCvD,EAAE,cAAcwD,IACd,OACAxD,EAAE,kBAAoBoD,EAAO6B,GAAK,KAC/B1B,SACAG,aACD,EACA,EACA,MAEJ1D,EAAE,cAAcwD,IACd,MACAxD,EAAE,kBAAoBoD,EAAO6B,GAAK,KAC/B1B,SACAoD,cAAgB,MAErB3G,EAAE,cAAcmG,YAAY,aAC5B,KACF,CAAWlB,GAAKxE,EAAOO,OAAS,IACzBhB,EAAE,cAAc0G,SAAS,cAC5B1G,EAAE,cAAckG,SAAS,aAG/B,CACF,CACF,EAiVF,GAwCA9F,OAAOgJ,iBAzBP,WAEEpJ,EAAE,UAAU4G,SACZ5G,EAAE,eAAe4G,SACjB5G,EAAE,cAAckG,SAAS,aAGzBtE,QAAS,EACTQ,WAAY,EACZrC,KAAO,KACPkC,SAAW,KAGP9B,aACFA,aAAakJ,YAEb5I,OAAOO,OAAS,EAChBL,WAAWK,OAAS,GAItBF,qBACF,CAIF,EAGsB,oBAAXwI,QAA0BA,OAAOC,QAC1CD,OAAOC,QAAUhK,EACU,oBAAXa,SAChBA,OAAOb,MAAQA"}