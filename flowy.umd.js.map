{"version":3,"file":"flowy.umd.js","sources":["../src/flowy.js"],"sourcesContent":["// 导入模块\n// 在浏览器环境中，模块会被自动加载到window对象\n// 在Node.js测试环境中，通过require加载\n// - DomUtils: DOM操作工具\n// - BlockManager: 块管理模块\n\n// 检查模块是否可用\nfunction getBlockManager() {\n  // 在浏览器环境中，尝试从全局作用域获取\n  if (typeof window !== 'undefined' && window.BlockManager) {\n    return new window.BlockManager();\n  }\n  // 在Node.js测试环境中，尝试require\n  if (typeof require !== 'undefined') {\n    try {\n      const BlockManager = require('./core/block-manager.js');\n      return new BlockManager();\n    } catch (e) {\n      // 如果模块不可用，返回null\n      return null;\n    }\n  }\n  // 如果都不可用，返回null\n  return null;\n}\n\nconst flowy = function (canvas, grab, release, snapping, spacing_x, spacing_y) {\n  if (!grab) {\n    grab = function () {};\n  }\n  if (!release) {\n    release = function () {};\n  }\n  if (!snapping) {\n    snapping = function () {};\n  }\n  if (!spacing_x) {\n    spacing_x = 20;\n  }\n  if (!spacing_y) {\n    spacing_y = 80;\n  }\n  $(document).ready(function () {\n    // 创建块管理器实例\n    const blockManager = getBlockManager();\n\n    // 保持原有变量作为引用，确保向后兼容\n    let blocks = blockManager ? blockManager.getAllBlocks() : [];\n    let blockstemp = blockManager ? blockManager.getTempBlocks() : [];\n    const canvas_div = canvas;\n\n    // 添加同步函数，确保引用始终是最新的\n    function syncBlockReferences() {\n        if (blockManager) {\n            blocks = blockManager.getAllBlocks();\n            blockstemp = blockManager.getTempBlocks();\n        }\n    }\n\n    // 辅助函数：获取块数量（兼容原有代码）\n    function getBlockCount() {\n      return blockManager ? blockManager.getBlockCount() : blocks.length;\n    }\n\n    // 辅助函数：获取下一个块ID\n    function getNextBlockId() {\n      if (blockManager) {\n        return blockManager.getNextBlockId();\n      } else {\n        return blocks.length === 0\n          ? 0\n          : Math.max.apply(\n              Math,\n              blocks.map(a => a.id)\n            ) + 1;\n      }\n    }\n\n    // 辅助函数：清空所有块\n    function clearAllBlocks() {\n      if (blockManager) {\n        // 🔧 修复：使用clearAll()同时清空blocks和blockstemp\n        blockManager.clearAll();\n        // 🔧 修复：立即同步引用，确保blocks数组正确更新\n        syncBlockReferences();\n      } else {\n        blocks = [];\n      }\n    }\n\n    // 辅助函数：添加块\n    function addBlock(blockData) {\n      if (blockManager) {\n        blockManager.addBlock(blockData);\n        // 不要重复添加到blocks数组，通过syncBlockReferences同步\n      } else {\n        blocks.push(blockData);\n      }\n    }\n\n    // 辅助函数：合并临时块到主数组\n    function mergeTempBlocks() {\n      if (blockManager) {\n        blockManager.mergeTempBlocks();\n        // 同时更新引用数组以保持同步\n        blocks = blockManager.getAllBlocks();\n        blockstemp = blockManager.getTempBlocks();\n      } else {\n        blocks = $.merge(blocks, blockstemp);\n        blockstemp = [];\n      }\n    }\n\n    // 辅助函数：移除指定ID的块\n    function removeBlockById(blockId) {\n      if (blockManager) {\n        blockManager.removeBlocks(function (block) {\n          return block.id != blockId;\n        });\n        // 同时更新引用数组以保持同步\n        blocks = blockManager.getAllBlocks();\n      } else {\n        blocks = $.grep(blocks, function (e) {\n          return e.id != blockId;\n        });\n      }\n    }\n    let active = false;\n    const paddingx = spacing_x;\n    const paddingy = spacing_y;\n    let offsetleft = 0;\n    let offsetleftold = 0;\n    let rearrange = false;\n    let lastevent = false;\n    let drag, dragx, dragy, original;\n    // 添加条件检查，确保 canvas_div 存在且有 append 方法\n    if (canvas_div && typeof canvas_div.append === 'function') {\n      canvas_div.append(\"<div class='indicator invisible'></div>\");\n    }\n    flowy.output = function () {\n      const json_data = [];\n      if (blocks.length > 0) {\n        for (var i = 0; i < blocks.length; i++) {\n          json_data.push({\n            id: blocks[i].id,\n            parent: blocks[i].parent,\n            data: [],\n          });\n          $('.blockid[value=' + blocks[i].id + ']')\n            .parent()\n            .children('input')\n            .each(function () {\n              const json_name = $(this).attr('name');\n              const json_value = $(this).val();\n              json_data[i].data.push({\n                name: json_name,\n                value: json_value,\n              });\n            });\n        }\n        return json_data;\n      }\n    };\n    flowy.deleteBlocks = function () {\n      clearAllBlocks();\n      canvas_div.html(\"<div class='indicator invisible'></div>\");\n    };\n    $(document).on('mousedown', '.create-flowy', function (event) {\n      if (event.which === 1) {\n        original = $(this);\n        if (getBlockCount() == 0) {\n          var newBlockId = getBlockCount(); // 当blocks为空时，使用0作为第一个ID\n          $(this)\n            .clone()\n            .addClass('block')\n            .append(\n              \"<input type='hidden' name='blockid' class='blockid' value='\" +\n                newBlockId +\n                \"'>\"\n            )\n            .removeClass('create-flowy')\n            .appendTo('body');\n          $(this).addClass('dragnow');\n          drag = $('.blockid[value=' + newBlockId + ']').parent();\n        } else {\n          var newBlockId = getNextBlockId();\n          $(this)\n            .clone()\n            .addClass('block')\n            .append(\n              \"<input type='hidden' name='blockid' class='blockid' value='\" +\n                newBlockId +\n                \"'>\"\n            )\n            .removeClass('create-flowy')\n            .appendTo('body');\n          $(this).addClass('dragnow');\n          drag = $('.blockid[value=' + parseInt(newBlockId) + ']').parent();\n        }\n        blockGrabbed($(this));\n        drag.addClass('dragging');\n        active = true;\n        dragx = event.clientX - $(this).offset().left;\n        dragy = event.clientY - $(this).offset().top;\n        drag.css('left', event.clientX - dragx + 'px');\n        drag.css('top', event.clientY - dragy + 'px');\n\n\n      }\n    });\n    $(document).on('mouseup', function (event) {\n      if (event.which === 1 && (active || rearrange)) {\n        blockReleased();\n        if (!$('.indicator').hasClass('invisible')) {\n          $('.indicator').addClass('invisible');\n        }\n        if (active) {\n          original.removeClass('dragnow');\n          drag.removeClass('dragging');\n        }\n        if (parseInt(drag.children('.blockid').val()) == 0 && rearrange) {\n          drag.removeClass('dragging');\n          rearrange = false;\n          for (var w = 0; w < blockstemp.length; w++) {\n            if (blockstemp[w].id != parseInt(drag.children('.blockid').val())) {\n              $('.blockid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .css(\n                  'left',\n                  $('.blockid[value=' + blockstemp[w].id + ']')\n                    .parent()\n                    .offset().left -\n                    canvas_div.offset().left +\n                    canvas_div.scrollLeft()\n                );\n              $('.blockid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .css(\n                  'top',\n                  $('.blockid[value=' + blockstemp[w].id + ']')\n                    .parent()\n                    .offset().top -\n                    canvas_div.offset().top +\n                    canvas_div.scrollTop()\n                );\n              $('.arrowid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .css(\n                  'left',\n                  $('.arrowid[value=' + blockstemp[w].id + ']')\n                    .parent()\n                    .offset().left -\n                    canvas_div.offset().left +\n                    canvas_div.scrollLeft()\n                );\n              $('.arrowid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .css(\n                  'top',\n                  $('.arrowid[value=' + blockstemp[w].id + ']')\n                    .parent()\n                    .offset().top -\n                    canvas_div.offset().top +\n                    canvas_div.scrollTop() +\n                    'px'\n                );\n              $('.blockid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .appendTo(canvas_div);\n              $('.arrowid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .appendTo(canvas_div);\n\n              blockstemp[w].x =\n                $('.blockid[value=' + blockstemp[w].id + ']')\n                  .parent()\n                  .offset().left +\n                $('.blockid[value=' + blockstemp[w].id + ']').innerWidth() / 2 +\n                canvas_div.scrollLeft();\n              blockstemp[w].y =\n                $('.blockid[value=' + blockstemp[w].id + ']')\n                  .parent()\n                  .offset().top +\n                $('.blockid[value=' + blockstemp[w].id + ']')\n                  .parent()\n                  .innerHeight() /\n                  2 +\n                canvas_div.scrollTop();\n            }\n          }\n          blockstemp.filter(a => a.id == 0)[0].x =\n            drag.offset().left + drag.innerWidth() / 2;\n          blockstemp.filter(a => a.id == 0)[0].y =\n            drag.offset().top + drag.innerHeight() / 2;\n          mergeTempBlocks();\n        } else if (\n          active &&\n          blocks.length == 0 &&\n          drag.offset().top > canvas_div.offset().top &&\n          drag.offset().left > canvas_div.offset().left\n        ) {\n          blockSnap(drag);\n          active = false;\n          drag.css(\n            'top',\n            drag.offset().top -\n              canvas_div.offset().top +\n              canvas_div.scrollTop() +\n              'px'\n          );\n          drag.css(\n            'left',\n            drag.offset().left -\n              canvas_div.offset().left +\n              canvas_div.scrollLeft() +\n              'px'\n          );\n          drag.appendTo(canvas_div);\n          addBlock({\n            parent: -1,\n            childwidth: 0,\n            id: parseInt(drag.children('.blockid').val()),\n            x:\n              drag.offset().left +\n              drag.innerWidth() / 2 +\n              canvas_div.scrollLeft(),\n            y:\n              drag.offset().top +\n              drag.innerHeight() / 2 +\n              canvas_div.scrollTop(),\n            width: drag.innerWidth(),\n            height: drag.innerHeight(),\n          });\n        } else if (active && blocks.length == 0) {\n          drag.remove();\n        } else if (active || rearrange) {\n          const xpos =\n            drag.offset().left +\n            drag.innerWidth() / 2 +\n            canvas_div.scrollLeft();\n          const ypos = drag.offset().top + canvas_div.scrollTop();\n          const blocko = blocks.map(a => a.id);\n\n          // 调试信息\n          const debugInfo = {\n            dragPos: { x: xpos, y: ypos },\n            blocks: blocks.map(b => ({ id: b.id, x: b.x, y: b.y, width: b.width, height: b.height })),\n            dragElement: {\n              offsetLeft: drag.offset().left,\n              offsetTop: drag.offset().top,\n              width: drag.innerWidth(),\n              height: drag.innerHeight()\n            }\n          };\n\n          for (var i = 0; i < blocks.length; i++) {\n            const targetBlock = blocks.filter(a => a.id == blocko[i])[0];\n            const xMin = targetBlock.x - targetBlock.width / 2 - paddingx;\n            const xMax = targetBlock.x + targetBlock.width / 2 + paddingx;\n            const yMin = targetBlock.y - targetBlock.height / 2;\n            const yMax = targetBlock.y + targetBlock.height;\n\n            const xInRange = xpos >= xMin && xpos <= xMax;\n            const yInRange = ypos >= yMin && ypos <= yMax;\n\n            const snapCheckInfo = {\n              blockId: blocko[i],\n              targetBlock: { x: targetBlock.x, y: targetBlock.y, width: targetBlock.width, height: targetBlock.height },\n              dragPos: { x: xpos, y: ypos },\n              xRange: { min: xMin, max: xMax, inRange: xInRange },\n              yRange: { min: yMin, max: yMax, inRange: yInRange },\n              shouldSnap: xInRange && yInRange,\n              paddingx: paddingx\n            };\n\n\n            if (xInRange && yInRange) {\n              active = false;\n              if (!rearrange) {\n                blockSnap(drag);\n                drag.appendTo(canvas_div);\n              }\n              let totalwidth = 0;\n              let totalremove = 0;\n              const maxheight = 0;\n              for (\n                var w = 0;\n                w < blocks.filter(id => id.parent == blocko[i]).length;\n                w++\n              ) {\n                var children = blocks.filter(id => id.parent == blocko[i])[w];\n                if (children.childwidth > children.width) {\n                  totalwidth += children.childwidth + paddingx;\n                } else {\n                  totalwidth += children.width + paddingx;\n                }\n              }\n              totalwidth += drag.innerWidth();\n              for (\n                var w = 0;\n                w < blocks.filter(id => id.parent == blocko[i]).length;\n                w++\n              ) {\n                var children = blocks.filter(id => id.parent == blocko[i])[w];\n                if (children.childwidth > children.width) {\n                  $('.blockid[value=' + children.id + ']')\n                    .parent()\n                    .css(\n                      'left',\n                      blocks.filter(a => a.id == blocko[i])[0].x -\n                        totalwidth / 2 +\n                        totalremove +\n                        children.childwidth / 2 -\n                        children.width / 2 +\n                        'px'\n                    );\n                  children.x =\n                    blocks.filter(id => id.parent == blocko[i])[0].x -\n                    totalwidth / 2 +\n                    totalremove +\n                    children.childwidth / 2;\n                  totalremove += children.childwidth + paddingx;\n                } else {\n                  $('.blockid[value=' + children.id + ']')\n                    .parent()\n                    .css(\n                      'left',\n                      blocks.filter(a => a.id == blocko[i])[0].x -\n                        totalwidth / 2 +\n                        totalremove +\n                        'px'\n                    );\n                  children.x =\n                    blocks.filter(id => id.parent == blocko[i])[0].x -\n                    totalwidth / 2 +\n                    totalremove +\n                    children.width / 2;\n                  totalremove += children.width + paddingx;\n                }\n              }\n              drag.css(\n                'left',\n                blocks.filter(id => id.id == blocko[i])[0].x -\n                  totalwidth / 2 +\n                  totalremove -\n                  canvas_div.offset().left +\n                  canvas_div.scrollLeft() +\n                  'px'\n              );\n              drag.css(\n                'top',\n                blocks.filter(id => id.id == blocko[i])[0].y +\n                  blocks.filter(id => id.id == blocko[i])[0].height / 2 +\n                  paddingy -\n                  canvas_div.offset().top +\n                  'px'\n              );\n              if (rearrange) {\n                blockstemp.filter(\n                  a => a.id == parseInt(drag.children('.blockid').val())\n                )[0].x =\n                  drag.offset().left +\n                  drag.innerWidth() / 2 +\n                  canvas_div.scrollLeft();\n                blockstemp.filter(\n                  a => a.id == parseInt(drag.children('.blockid').val())\n                )[0].y =\n                  drag.offset().top +\n                  drag.innerHeight() / 2 +\n                  canvas_div.scrollTop();\n                blockstemp.filter(\n                  a => a.id == drag.children('.blockid').val()\n                )[0].parent = blocko[i];\n                for (var w = 0; w < blockstemp.length; w++) {\n                  if (\n                    blockstemp[w].id !=\n                    parseInt(drag.children('.blockid').val())\n                  ) {\n                    $('.blockid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .css(\n                        'left',\n                        $('.blockid[value=' + blockstemp[w].id + ']')\n                          .parent()\n                          .offset().left -\n                          canvas_div.offset().left +\n                          canvas_div.scrollLeft()\n                      );\n                    $('.blockid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .css(\n                        'top',\n                        $('.blockid[value=' + blockstemp[w].id + ']')\n                          .parent()\n                          .offset().top -\n                          canvas_div.offset().top +\n                          canvas_div.scrollTop()\n                      );\n                    $('.arrowid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .css(\n                        'left',\n                        $('.arrowid[value=' + blockstemp[w].id + ']')\n                          .parent()\n                          .offset().left -\n                          canvas_div.offset().left +\n                          canvas_div.scrollLeft() +\n                          20\n                      );\n                    $('.arrowid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .css(\n                        'top',\n                        $('.arrowid[value=' + blockstemp[w].id + ']')\n                          .parent()\n                          .offset().top -\n                          canvas_div.offset().top +\n                          canvas_div.scrollTop()\n                      );\n                    $('.blockid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .appendTo(canvas_div);\n                    $('.arrowid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .appendTo(canvas_div);\n\n                    blockstemp[w].x =\n                      $('.blockid[value=' + blockstemp[w].id + ']')\n                        .parent()\n                        .offset().left +\n                      $(\n                        '.blockid[value=' + blockstemp[w].id + ']'\n                      ).innerWidth() /\n                        2 +\n                      canvas_div.scrollLeft();\n                    blockstemp[w].y =\n                      $('.blockid[value=' + blockstemp[w].id + ']')\n                        .parent()\n                        .offset().top +\n                      $('.blockid[value=' + blockstemp[w].id + ']')\n                        .parent()\n                        .innerHeight() /\n                        2 +\n                      canvas_div.scrollTop();\n                  }\n                }\n                mergeTempBlocks();\n              } else {\n                addBlock({\n                  childwidth: 0,\n                  parent: blocko[i],\n                  id: parseInt(drag.children('.blockid').val()),\n                  x:\n                    drag.offset().left +\n                    drag.innerWidth() / 2 +\n                    canvas_div.scrollLeft(),\n                  y:\n                    drag.offset().top +\n                    drag.innerHeight() / 2 +\n                    canvas_div.scrollTop(),\n                  width: drag.innerWidth(),\n                  height: drag.innerHeight(),\n                });\n                // 同步引用以确保新添加的块可以被找到\n                syncBlockReferences();\n              }\n              // 确保在连线计算前块数据是最新的\n              syncBlockReferences();\n              const arrowhelp = blocks.filter(\n                a => a.id == parseInt(drag.children('.blockid').val())\n              )[0];\n              const arrowx =\n                arrowhelp.x - blocks.filter(a => a.id == blocko[i])[0].x + 20;\n              // 使用父块的位置计算arrowy，与原始版本保持一致\n              const parentBlock = blocks.filter(a => a.id == blocko[i])[0];\n              const arrowy =\n                arrowhelp.y -\n                arrowhelp.height / 2 -\n                (parentBlock.y + parentBlock.height / 2) +\n                canvas_div.scrollTop();\n\n\n              if (arrowx < 0) {\n                drag.after(\n                  '<div class=\"arrowblock\"><input type=\"hidden\" class=\"arrowid\" value=\"' +\n                    drag.children('.blockid').val() +\n                    '\"><svg preserveaspectratio=\"none\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M' +\n                    (blocks.filter(a => a.id == blocko[i])[0].x -\n                      arrowhelp.x +\n                      5) +\n                    ' 0L' +\n                    (blocks.filter(a => a.id == blocko[i])[0].x -\n                      arrowhelp.x +\n                      5) +\n                    ' ' +\n                    paddingy / 2 +\n                    'L5 ' +\n                    paddingy / 2 +\n                    'L5 ' +\n                    arrowy +\n                    '\" stroke=\"#C5CCD0\" stroke-width=\"2px\"/><path d=\"M0 ' +\n                    (arrowy - 5) +\n                    'H10L5 ' +\n                    arrowy +\n                    'L0 ' +\n                    (arrowy - 5) +\n                    'Z\" fill=\"#C5CCD0\"/></svg></div>'\n                );\n                $('.arrowid[value=' + drag.children('.blockid').val() + ']')\n                  .parent()\n                  .css(\n                    'left',\n                    arrowhelp.x -\n                      5 -\n                      canvas_div.offset().left +\n                      canvas_div.scrollLeft() +\n                      'px'\n                  );\n                $('.arrowid[value=' + drag.children('.blockid').val() + ']')\n                  .parent()\n                  .css(\n                    'top',\n                    blocks.filter(a => a.id == blocko[i])[0].y +\n                      blocks.filter(a => a.id == blocko[i])[0].height / 2 -\n                      canvas_div.offset().top +\n                      canvas_div.scrollTop() +\n                      'px'\n                  );\n              } else {\n                const svgPath = `M20 0L20 ${paddingy / 2}L${arrowx} ${paddingy / 2}L${arrowx} ${arrowy}`;\n\n                drag.after(\n                  '<div class=\"arrowblock\"><input type=\"hidden\" class=\"arrowid\" value=\"' +\n                    drag.children('.blockid').val() +\n                    '\"><svg preserveaspectratio=\"none\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"' +\n                    svgPath +\n                    '\" stroke=\"#C5CCD0\" stroke-width=\"2px\"/><path d=\"M' +\n                    (arrowx - 5) +\n                    ' ' +\n                    (arrowy - 5) +\n                    'H' +\n                    (arrowx + 5) +\n                    'L' +\n                    arrowx +\n                    ' ' +\n                    arrowy +\n                    'L' +\n                    (arrowx - 5) +\n                    ' ' +\n                    (arrowy - 5) +\n                    'Z\" fill=\"#C5CCD0\"/></svg></div>'\n                );\n                $(\n                  '.arrowid[value=' +\n                    parseInt(drag.children('.blockid').val()) +\n                    ']'\n                )\n                  .parent()\n                  .css(\n                    'left',\n                    blocks.filter(a => a.id == blocko[i])[0].x -\n                      20 -\n                      canvas_div.offset().left +\n                      canvas_div.scrollLeft() +\n                      'px'\n                  );\n              }\n              $(\n                '.arrowid[value=' +\n                  parseInt(drag.children('.blockid').val()) +\n                  ']'\n              )\n                .parent()\n                .css(\n                  'top',\n                  blocks.filter(a => a.id == blocko[i])[0].y +\n                    blocks.filter(a => a.id == blocko[i])[0].height / 2 -\n                    canvas_div.offset().top +\n                    canvas_div.scrollTop() +\n                    'px'\n                );\n              if (blocks.filter(a => a.id == blocko[i])[0].parent != -1) {\n                let flag = false;\n                var idval = blocko[i];\n                while (!flag) {\n                  if (blocks.filter(a => a.id == idval)[0].parent == -1) {\n                    flag = true;\n                  } else {\n                    let zwidth = 0;\n                    for (\n                      var w = 0;\n                      w < blocks.filter(id => id.parent == idval).length;\n                      w++\n                    ) {\n                      var children = blocks.filter(id => id.parent == idval)[w];\n                      if (children.childwidth > children.width) {\n                        if (\n                          w ==\n                          blocks.filter(id => id.parent == idval).length - 1\n                        ) {\n                          zwidth += children.childwidth;\n                        } else {\n                          zwidth += children.childwidth + paddingx;\n                        }\n                      } else {\n                        if (\n                          w ==\n                          blocks.filter(id => id.parent == idval).length - 1\n                        ) {\n                          zwidth += children.width;\n                        } else {\n                          zwidth += children.width + paddingx;\n                        }\n                      }\n                    }\n                    blocks.filter(a => a.id == idval)[0].childwidth = zwidth;\n                    idval = blocks.filter(a => a.id == idval)[0].parent;\n                  }\n                }\n                blocks.filter(id => id.id == idval)[0].childwidth = totalwidth;\n              }\n              if (rearrange) {\n                rearrange = false;\n                drag.removeClass('dragging');\n              }\n              rearrangeMe();\n              checkOffset();\n              break;\n            } else if (i == blocks.length - 1) {\n              if (rearrange) {\n                rearrange = false;\n                blockstemp = [];\n              }\n              active = false;\n              drag.remove();\n            }\n          }\n        }\n      }\n    });\n    $(document).on('mousedown', '.block', function (event) {\n      $(document).on('mouseup mousemove', '.block', function handler(event) {\n        if (event.type !== 'mouseup') {\n          if (event.which === 1) {\n            if (!active && !rearrange) {\n              rearrange = true;\n              drag = $(this);\n              drag.addClass('dragging');\n              dragx = event.clientX - $(this).offset().left;\n              dragy = event.clientY - $(this).offset().top;\n              const blockid = parseInt($(this).children('.blockid').val());\n              drag = $(this);\n              blockstemp.push(blocks.filter(a => a.id == blockid)[0]);\n              blocks = $.grep(blocks, function(e) {\n                return e.id != blockid;\n              });\n              $('.arrowid[value=' + blockid + ']')\n                .parent()\n                .remove();\n              let layer = blocks.filter(a => a.parent == blockid);\n              let flag = false;\n              let foundids = [];\n              const allids = [];\n              while (!flag) {\n                for (var i = 0; i < layer.length; i++) {\n                  blockstemp.push(blocks.filter(a => a.id == layer[i].id)[0]);\n                  $('.blockid[value=' + layer[i].id + ']')\n                    .parent()\n                    .css(\n                      'left',\n                      $('.blockid[value=' + layer[i].id + ']')\n                        .parent()\n                        .offset().left - drag.offset().left\n                    );\n                  $('.blockid[value=' + layer[i].id + ']')\n                    .parent()\n                    .css(\n                      'top',\n                      $('.blockid[value=' + layer[i].id + ']')\n                        .parent()\n                        .offset().top - drag.offset().top\n                    );\n                  $('.arrowid[value=' + layer[i].id + ']')\n                    .parent()\n                    .css(\n                      'left',\n                      $('.arrowid[value=' + layer[i].id + ']')\n                        .parent()\n                        .offset().left - drag.offset().left\n                    );\n                  $('.arrowid[value=' + layer[i].id + ']')\n                    .parent()\n                    .css(\n                      'top',\n                      $('.arrowid[value=' + layer[i].id + ']')\n                        .parent()\n                        .offset().top - drag.offset().top\n                    );\n                  $('.blockid[value=' + layer[i].id + ']')\n                    .parent()\n                    .appendTo(drag);\n                  $('.arrowid[value=' + layer[i].id + ']')\n                    .parent()\n                    .appendTo(drag);\n                  foundids.push(layer[i].id);\n                  allids.push(layer[i].id);\n                }\n                if (foundids.length == 0) {\n                  flag = true;\n                } else {\n                  layer = blocks.filter(a => foundids.includes(a.parent));\n                  foundids = [];\n                }\n              }\n              for (\n                var i = 0;\n                i < blocks.filter(a => a.parent == blockid).length;\n                i++\n              ) {\n                var blocknumber = blocks.filter(a => a.parent == blockid)[i];\n                removeBlockById(blocknumber);\n              }\n              for (var i = 0; i < allids.length; i++) {\n                var blocknumber = allids[i];\n                removeBlockById(blocknumber);\n              }\n              if (blocks.length > 1) {\n                rearrangeMe();\n              }\n              if (lastevent) {\n                fixOffset();\n              }\n            }\n          }\n        }\n        $(document).off('mouseup mousemove', handler);\n      });\n    });\n    $(document).on('mousemove', function (event) {\n      if (active) {\n        drag.css('left', event.clientX - dragx + 'px');\n        drag.css('top', event.clientY - dragy + 'px');\n      } else if (rearrange) {\n        drag.css(\n          'left',\n          event.clientX -\n            dragx -\n            canvas_div.offset().left +\n            canvas_div.scrollLeft() +\n            'px'\n        );\n        drag.css(\n          'top',\n          event.clientY -\n            dragy -\n            canvas_div.offset().top +\n            canvas_div.scrollTop() +\n            'px'\n        );\n        blockstemp.filter(\n          a => a.id == parseInt(drag.children('.blockid').val())\n        ).x =\n          drag.offset().left + drag.innerWidth() / 2 + canvas_div.scrollLeft();\n        blockstemp.filter(\n          a => a.id == parseInt(drag.children('.blockid').val())\n        ).y =\n          drag.offset().top + drag.innerHeight() / 2 + canvas_div.scrollTop();\n      }\n      if (active || rearrange) {\n        const xpos =\n          drag.offset().left + drag.innerWidth() / 2 + canvas_div.scrollLeft();\n        const ypos = drag.offset().top + canvas_div.scrollTop();\n        const blocko = blocks.map(a => a.id);\n        for (var i = 0; i < blocks.length; i++) {\n          if (\n            xpos >=\n              blocks.filter(a => a.id == blocko[i])[0].x -\n                blocks.filter(a => a.id == blocko[i])[0].width / 2 -\n                paddingx &&\n            xpos <=\n              blocks.filter(a => a.id == blocko[i])[0].x +\n                blocks.filter(a => a.id == blocko[i])[0].width / 2 +\n                paddingx &&\n            ypos >=\n              blocks.filter(a => a.id == blocko[i])[0].y -\n                blocks.filter(a => a.id == blocko[i])[0].height / 2 &&\n            ypos <=\n              blocks.filter(a => a.id == blocko[i])[0].y +\n                blocks.filter(a => a.id == blocko[i])[0].height\n          ) {\n            $('.indicator').appendTo(\n              $('.blockid[value=' + blocko[i] + ']').parent()\n            );\n            $('.indicator').css(\n              'left',\n              $('.blockid[value=' + blocko[i] + ']')\n                .parent()\n                .innerWidth() /\n                2 -\n                5 +\n                'px'\n            );\n            $('.indicator').css(\n              'top',\n              $('.blockid[value=' + blocko[i] + ']')\n                .parent()\n                .innerHeight() + 'px'\n            );\n            $('.indicator').removeClass('invisible');\n            break;\n          } else if (i == blocks.length - 1) {\n            if (!$('.indicator').hasClass('invisible')) {\n              $('.indicator').addClass('invisible');\n            }\n          }\n        }\n      }\n    });\n\n    function checkOffset() {\n      offsetleft = blocks.map(a => a.x);\n      const widths = blocks.map(a => a.width);\n      const mathmin = offsetleft.map(function (item, index) {\n        return item - widths[index] / 2;\n      });\n      offsetleft = Math.min.apply(Math, mathmin);\n      if (offsetleft < canvas_div.offset().left) {\n        lastevent = true;\n        const blocko = blocks.map(a => a.id);\n        for (var w = 0; w < blocks.length; w++) {\n          $(\n            '.blockid[value=' +\n              blocks.filter(a => a.id == blocko[w])[0].id +\n              ']'\n          )\n            .parent()\n            .css(\n              'left',\n              blocks.filter(a => a.id == blocko[w])[0].x -\n                blocks.filter(a => a.id == blocko[w])[0].width / 2 -\n                offsetleft +\n                20\n            );\n          if (blocks.filter(a => a.id == blocko[w])[0].parent != -1) {\n            const arrowhelp = blocks.filter(a => a.id == blocko[w])[0];\n            const arrowx =\n              arrowhelp.x -\n              blocks.filter(\n                a => a.id == blocks.filter(a => a.id == blocko[w])[0].parent\n              )[0].x;\n            if (arrowx < 0) {\n              $('.arrowid[value=' + blocko[w] + ']')\n                .parent()\n                .css('left', arrowhelp.x - offsetleft + 20 - 5 + 'px');\n            } else {\n              $('.arrowid[value=' + blocko[w] + ']')\n                .parent()\n                .css(\n                  'left',\n                  blocks.filter(\n                    id =>\n                      id.id == blocks.filter(a => a.id == blocko[w])[0].parent\n                  )[0].x -\n                    20 -\n                    offsetleft +\n                    20 +\n                    'px'\n                );\n            }\n          }\n        }\n        for (var w = 0; w < blocks.length; w++) {\n          blocks[w].x =\n            $('.blockid[value=' + blocks[w].id + ']')\n              .parent()\n              .offset().left +\n            canvas_div.offset().left -\n            $('.blockid[value=' + blocks[w].id + ']')\n              .parent()\n              .innerWidth() /\n              2 -\n            40;\n        }\n        offsetleftold = offsetleft;\n      }\n    }\n\n    function fixOffset() {\n      if (offsetleftold < canvas_div.offset().left) {\n        lastevent = false;\n        const blocko = blocks.map(a => a.id);\n        for (var w = 0; w < blocks.length; w++) {\n          $(\n            '.blockid[value=' +\n              blocks.filter(a => a.id == blocko[w])[0].id +\n              ']'\n          )\n            .parent()\n            .css(\n              'left',\n              blocks.filter(a => a.id == blocko[w])[0].x -\n                blocks.filter(a => a.id == blocko[w])[0].width / 2 -\n                offsetleftold -\n                20\n            );\n          blocks.filter(a => a.id == blocko[w])[0].x =\n            $(\n              '.blockid[value=' +\n                blocks.filter(a => a.id == blocko[w])[0].id +\n                ']'\n            )\n              .parent()\n              .offset().left +\n            blocks.filter(a => a.id == blocko[w])[0].width / 2;\n\n          if (blocks.filter(a => a.id == blocko[w])[0].parent != -1) {\n            const arrowhelp = blocks.filter(a => a.id == blocko[w])[0];\n            const arrowx =\n              arrowhelp.x -\n              blocks.filter(\n                a => a.id == blocks.filter(a => a.id == blocko[w])[0].parent\n              )[0].x;\n            if (arrowx < 0) {\n              $('.arrowid[value=' + blocko[w] + ']')\n                .parent()\n                .css('left', arrowhelp.x - 5 - canvas_div.offset().left + 'px');\n            } else {\n              $('.arrowid[value=' + blocko[w] + ']')\n                .parent()\n                .css(\n                  'left',\n                  blocks.filter(\n                    id =>\n                      id.id == blocks.filter(a => a.id == blocko[w])[0].parent\n                  )[0].x -\n                    20 -\n                    canvas_div.offset().left +\n                    'px'\n                );\n            }\n          }\n        }\n        for (var w = 0; w < blocks.length; w++) {\n          //blocks[w].x = blocks[w].x+offsetleftold-20;\n        }\n        offsetleftold = 0;\n      }\n    }\n\n    function rearrangeMe() {\n      const result = blocks.map(a => a.parent);\n      for (var z = 0; z < result.length; z++) {\n        if (result[z] == -1) {\n          z++; // 与原始版本保持完全一致\n        }\n        let totalwidth = 0;\n        let totalremove = 0;\n        const maxheight = 0;\n        for (\n          var w = 0;\n          w < blocks.filter(id => id.parent == result[z]).length;\n          w++\n        ) {\n          var children = blocks.filter(id => id.parent == result[z])[w];\n          if (blocks.filter(id => id.parent == children.id).length == 0) {\n            children.childwidth = 0;\n          }\n          if (children.childwidth > children.width) {\n            if (w == blocks.filter(id => id.parent == result[z]).length - 1) {\n              totalwidth += children.childwidth;\n            } else {\n              totalwidth += children.childwidth + paddingx;\n            }\n          } else {\n            if (w == blocks.filter(id => id.parent == result[z]).length - 1) {\n              totalwidth += children.width;\n            } else {\n              totalwidth += children.width + paddingx;\n            }\n          }\n        }\n        if (result[z] != -1) {\n          const parentBlock = blocks.filter(a => a.id == result[z])[0];\n          if (parentBlock) {\n            parentBlock.childwidth = totalwidth;\n          }\n        }\n        for (\n          var w = 0;\n          w < blocks.filter(id => id.parent == result[z]).length;\n          w++\n        ) {\n          var children = blocks.filter(id => id.parent == result[z])[w];\n          if (result[z] != -1) {\n            // 与原始版本完全一致：.y属性不使用[0]索引\n            $('.blockid[value=' + children.id + ']')\n              .parent()\n              .css(\n                'top',\n                blocks.filter(id => id.id == result[z]).y + paddingy + 'px'\n              );\n            blocks.filter(id => id.id == result[z]).y =\n              blocks.filter(id => id.id == result[z]).y + paddingy;\n          }\n          if (children.childwidth > children.width) {\n            $('.blockid[value=' + children.id + ']')\n              .parent()\n              .css(\n                'left',\n                blocks.filter(id => id.id == result[z])[0].x -\n                  totalwidth / 2 +\n                  totalremove +\n                  children.childwidth / 2 -\n                  children.width / 2 -\n                  canvas_div.offset().left +\n                  'px'\n              );\n            children.x =\n              blocks.filter(id => id.id == result[z])[0].x -\n              totalwidth / 2 +\n              totalremove +\n              children.childwidth / 2;\n            totalremove += children.childwidth + paddingx;\n          } else {\n            $('.blockid[value=' + children.id + ']')\n              .parent()\n              .css(\n                'left',\n                blocks.filter(id => id.id == result[z])[0].x -\n                  totalwidth / 2 +\n                  totalremove -\n                  canvas_div.offset().left +\n                  'px'\n              );\n            children.x =\n              blocks.filter(id => id.id == result[z])[0].x -\n              totalwidth / 2 +\n              totalremove +\n              children.width / 2;\n            totalremove += children.width + paddingx;\n          }\n          const arrowhelp = blocks.filter(a => a.id == children.id)[0];\n          const arrowx =\n            arrowhelp.x - blocks.filter(a => a.id == children.parent)[0].x + 20;\n          const arrowy =\n            arrowhelp.y -\n            arrowhelp.height / 2 -\n            (blocks.filter(a => a.id == children.parent)[0].y +\n              blocks.filter(a => a.id == children.parent)[0].height / 2);\n          $('.arrowid[value=' + children.id + ']')\n            .parent()\n            .css(\n              'top',\n              blocks.filter(id => id.id == children.parent)[0].y +\n                blocks.filter(id => id.id == children.parent)[0].height / 2 -\n                canvas_div.offset().top +\n                'px'\n            );\n          if (arrowx < 0) {\n            $('.arrowid[value=' + children.id + ']')\n              .parent()\n              .css('left', arrowhelp.x - 5 - canvas_div.offset().left + 'px');\n            $('.arrowid[value=' + children.id + ']')\n              .parent()\n              .html(\n                '<input type=\"hidden\" class=\"arrowid\" value=\"' +\n                  children.id +\n                  '\"><svg preserveaspectratio=\"none\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M' +\n                  (blocks.filter(id => id.id == children.parent)[0].x -\n                    arrowhelp.x +\n                    5) +\n                  ' 0L' +\n                  (blocks.filter(id => id.id == children.parent)[0].x -\n                    arrowhelp.x +\n                    5) +\n                  ' ' +\n                  paddingy / 2 +\n                  'L5 ' +\n                  paddingy / 2 +\n                  'L5 ' +\n                  arrowy +\n                  '\" stroke=\"#C5CCD0\" stroke-width=\"2px\"/><path d=\"M0 ' +\n                  (arrowy - 5) +\n                  'H10L5 ' +\n                  arrowy +\n                  'L0 ' +\n                  (arrowy - 5) +\n                  'Z\" fill=\"#C5CCD0\"/></svg>'\n              );\n          } else {\n            $('.arrowid[value=' + children.id + ']')\n              .parent()\n              .css(\n                'left',\n                blocks.filter(id => id.id == children.parent)[0].x -\n                  20 -\n                  canvas_div.offset().left +\n                  'px'\n              );\n            $('.arrowid[value=' + children.id + ']')\n              .parent()\n              .html(\n                '<input type=\"hidden\" class=\"arrowid\" value=\"' +\n                  children.id +\n                  '\"><svg preserveaspectratio=\"none\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 0L20 ' +\n                  paddingy / 2 +\n                  'L' +\n                  arrowx +\n                  ' ' +\n                  paddingy / 2 +\n                  'L' +\n                  arrowx +\n                  ' ' +\n                  arrowy +\n                  '\" stroke=\"#C5CCD0\" stroke-width=\"2px\"/><path d=\"M' +\n                  (arrowx - 5) +\n                  ' ' +\n                  (arrowy - 5) +\n                  'H' +\n                  (arrowx + 5) +\n                  'L' +\n                  arrowx +\n                  ' ' +\n                  arrowy +\n                  'L' +\n                  (arrowx - 5) +\n                  ' ' +\n                  (arrowy - 5) +\n                  'Z\" fill=\"#C5CCD0\"/></svg>'\n              );\n          }\n        }\n      }\n    }\n  });\n\n  function blockGrabbed(block) {\n    grab(block);\n  }\n\n  function blockReleased() {\n    release();\n  }\n\n  function blockSnap(drag) {\n    snapping(drag);\n  }\n\n  // 添加状态清理函数\n  function clearCanvasState() {\n    // 清理所有块和连线\n    $('.block').remove();\n    $('.arrowblock').remove();\n    $('.indicator').addClass('invisible');\n\n    // 重置状态变量\n    active = false;\n    rearrange = false;\n    drag = null;\n    original = null;\n\n    // 清理块数据\n    if (blockManager) {\n      blockManager.clearAll();\n    } else {\n      blocks.length = 0;\n      blockstemp.length = 0;\n    }\n\n    // 同步引用\n    syncBlockReferences();\n  }\n\n  // 暴露清理函数到全局\n  window.clearFlowyCanvas = clearCanvasState;\n};\n\n// 模块导出支持\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = flowy;\n} else if (typeof window !== 'undefined') {\n  window.flowy = flowy;\n}\n"],"names":["flowy","canvas","grab","release","snapping","spacing_x","spacing_y","blockSnap","drag","$","document","ready","blockManager","window","BlockManager","require","e","getBlockManager","blocks","getAllBlocks","blockstemp","getTempBlocks","canvas_div","syncBlockReferences","getBlockCount","length","addBlock","blockData","push","mergeTempBlocks","merge","removeBlockById","blockId","removeBlocks","block","id","grep","active","paddingx","paddingy","dragx","dragy","original","offsetleft","offsetleftold","rearrange","lastevent","checkOffset","map","a","x","widths","width","mathmin","item","index","Math","min","apply","offset","left","blocko","w","filter","parent","css","arrowhelp","innerWidth","rearrangeMe","result","z","totalwidth","totalremove","children","childwidth","parentBlock","y","arrowx","arrowy","height","top","html","append","output","json_data","i","data","each","json_name","this","attr","json_value","val","name","value","deleteBlocks","clearAll","on","event","which","newBlockId","clone","addClass","removeClass","appendTo","getNextBlockId","max","parseInt","clientX","clientY","hasClass","scrollLeft","scrollTop","innerHeight","remove","xpos","ypos","b","targetBlock","xMin","xMax","yMin","yMax","xInRange","yInRange","after","svgPath","flag","idval","zwidth","handler","type","blockid","layer","foundids","allids","includes","fixOffset","off","clearFlowyCanvas","module","exports"],"mappings":"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"}