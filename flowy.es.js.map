{"version":3,"file":"flowy.es.js","sources":["../src/flowy.js"],"sourcesContent":["// 导入模块\n// 在浏览器环境中，模块会被自动加载到window对象\n// 在Node.js测试环境中，通过require加载\n// - DomUtils: DOM操作工具\n// - BlockManager: 块管理模块\n\n// 检查模块是否可用\nfunction getBlockManager() {\n  // 在浏览器环境中，尝试从全局作用域获取\n  if (typeof window !== 'undefined' && window.BlockManager) {\n    return new window.BlockManager();\n  }\n  // 在Node.js测试环境中，尝试require\n  if (typeof require !== 'undefined') {\n    try {\n      const BlockManager = require('./core/block-manager.js');\n      return new BlockManager();\n    } catch (e) {\n      // 如果模块不可用，返回null\n      return null;\n    }\n  }\n  // 如果都不可用，返回null\n  return null;\n}\n\nconst flowy = function (canvas, grab, release, snapping, spacing_x, spacing_y) {\n  if (!grab) {\n    grab = function () {};\n  }\n  if (!release) {\n    release = function () {};\n  }\n  if (!snapping) {\n    snapping = function () {};\n  }\n  if (!spacing_x) {\n    spacing_x = 20;\n  }\n  if (!spacing_y) {\n    spacing_y = 80;\n  }\n  $(document).ready(function () {\n    // 创建块管理器实例\n    const blockManager = getBlockManager();\n\n    // 保持原有变量作为引用，确保向后兼容\n    let blocks = blockManager ? blockManager.getAllBlocks() : [];\n    let blockstemp = blockManager ? blockManager.getTempBlocks() : [];\n    const canvas_div = canvas;\n\n    // 添加同步函数，确保引用始终是最新的\n    function syncBlockReferences() {\n        if (blockManager) {\n            blocks = blockManager.getAllBlocks();\n            blockstemp = blockManager.getTempBlocks();\n        }\n    }\n\n    // 辅助函数：获取块数量（兼容原有代码）\n    function getBlockCount() {\n      return blockManager ? blockManager.getBlockCount() : blocks.length;\n    }\n\n    // 辅助函数：获取下一个块ID\n    function getNextBlockId() {\n      if (blockManager) {\n        return blockManager.getNextBlockId();\n      } else {\n        return blocks.length === 0\n          ? 0\n          : Math.max.apply(\n              Math,\n              blocks.map(a => a.id)\n            ) + 1;\n      }\n    }\n\n    // 辅助函数：清空所有块\n    function clearAllBlocks() {\n      if (blockManager) {\n        blockManager.clearBlocks();\n        // 同时清空引用数组以保持同步\n        blocks.length = 0;\n      } else {\n        blocks = [];\n      }\n    }\n\n    // 辅助函数：添加块\n    function addBlock(blockData) {\n      if (blockManager) {\n        blockManager.addBlock(blockData);\n        // 不要重复添加到blocks数组，通过syncBlockReferences同步\n      } else {\n        blocks.push(blockData);\n      }\n    }\n\n    // 辅助函数：合并临时块到主数组\n    function mergeTempBlocks() {\n      if (blockManager) {\n        blockManager.mergeTempBlocks();\n        // 同时更新引用数组以保持同步\n        blocks = blockManager.getAllBlocks();\n        blockstemp = blockManager.getTempBlocks();\n      } else {\n        blocks = $.merge(blocks, blockstemp);\n        blockstemp = [];\n      }\n    }\n\n    // 辅助函数：移除指定ID的块\n    function removeBlockById(blockId) {\n      if (blockManager) {\n        blockManager.removeBlocks(function (block) {\n          return block.id != blockId;\n        });\n        // 同时更新引用数组以保持同步\n        blocks = blockManager.getAllBlocks();\n      } else {\n        blocks = $.grep(blocks, function (e) {\n          return e.id != blockId;\n        });\n      }\n    }\n    let active = false;\n    const paddingx = spacing_x;\n    const paddingy = spacing_y;\n    let offsetleft = 0;\n    let offsetleftold = 0;\n    let rearrange = false;\n    let lastevent = false;\n    let drag, dragx, dragy, original;\n    // 添加条件检查，确保 canvas_div 存在且有 append 方法\n    if (canvas_div && typeof canvas_div.append === 'function') {\n      canvas_div.append(\"<div class='indicator invisible'></div>\");\n    }\n    flowy.output = function () {\n      const json_data = [];\n      if (blocks.length > 0) {\n        for (var i = 0; i < blocks.length; i++) {\n          json_data.push({\n            id: blocks[i].id,\n            parent: blocks[i].parent,\n            data: [],\n          });\n          $('.blockid[value=' + blocks[i].id + ']')\n            .parent()\n            .children('input')\n            .each(function () {\n              const json_name = $(this).attr('name');\n              const json_value = $(this).val();\n              json_data[i].data.push({\n                name: json_name,\n                value: json_value,\n              });\n            });\n        }\n        return json_data;\n      }\n    };\n    flowy.deleteBlocks = function () {\n      clearAllBlocks();\n      canvas_div.html(\"<div class='indicator invisible'></div>\");\n    };\n    $(document).on('mousedown', '.create-flowy', function (event) {\n      if (event.which === 1) {\n        original = $(this);\n        if (getBlockCount() == 0) {\n          var newBlockId = getBlockCount(); // 当blocks为空时，使用0作为第一个ID\n          $(this)\n            .clone()\n            .addClass('block')\n            .append(\n              \"<input type='hidden' name='blockid' class='blockid' value='\" +\n                newBlockId +\n                \"'>\"\n            )\n            .removeClass('create-flowy')\n            .appendTo('body');\n          $(this).addClass('dragnow');\n          drag = $('.blockid[value=' + newBlockId + ']').parent();\n        } else {\n          var newBlockId = getNextBlockId();\n          $(this)\n            .clone()\n            .addClass('block')\n            .append(\n              \"<input type='hidden' name='blockid' class='blockid' value='\" +\n                newBlockId +\n                \"'>\"\n            )\n            .removeClass('create-flowy')\n            .appendTo('body');\n          $(this).addClass('dragnow');\n          drag = $('.blockid[value=' + parseInt(newBlockId) + ']').parent();\n        }\n        blockGrabbed($(this));\n        drag.addClass('dragging');\n        active = true;\n        dragx = event.clientX - $(this).offset().left;\n        dragy = event.clientY - $(this).offset().top;\n        drag.css('left', event.clientX - dragx + 'px');\n        drag.css('top', event.clientY - dragy + 'px');\n\n\n      }\n    });\n    $(document).on('mouseup', function (event) {\n      if (event.which === 1 && (active || rearrange)) {\n        blockReleased();\n        if (!$('.indicator').hasClass('invisible')) {\n          $('.indicator').addClass('invisible');\n        }\n        if (active) {\n          original.removeClass('dragnow');\n          drag.removeClass('dragging');\n        }\n        if (parseInt(drag.children('.blockid').val()) == 0 && rearrange) {\n          drag.removeClass('dragging');\n          rearrange = false;\n          for (var w = 0; w < blockstemp.length; w++) {\n            if (blockstemp[w].id != parseInt(drag.children('.blockid').val())) {\n              $('.blockid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .css(\n                  'left',\n                  $('.blockid[value=' + blockstemp[w].id + ']')\n                    .parent()\n                    .offset().left -\n                    canvas_div.offset().left +\n                    canvas_div.scrollLeft()\n                );\n              $('.blockid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .css(\n                  'top',\n                  $('.blockid[value=' + blockstemp[w].id + ']')\n                    .parent()\n                    .offset().top -\n                    canvas_div.offset().top +\n                    canvas_div.scrollTop()\n                );\n              $('.arrowid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .css(\n                  'left',\n                  $('.arrowid[value=' + blockstemp[w].id + ']')\n                    .parent()\n                    .offset().left -\n                    canvas_div.offset().left +\n                    canvas_div.scrollLeft()\n                );\n              $('.arrowid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .css(\n                  'top',\n                  $('.arrowid[value=' + blockstemp[w].id + ']')\n                    .parent()\n                    .offset().top -\n                    canvas_div.offset().top +\n                    canvas_div.scrollTop() +\n                    'px'\n                );\n              $('.blockid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .appendTo(canvas_div);\n              $('.arrowid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .appendTo(canvas_div);\n\n              blockstemp[w].x =\n                $('.blockid[value=' + blockstemp[w].id + ']')\n                  .parent()\n                  .offset().left +\n                $('.blockid[value=' + blockstemp[w].id + ']').innerWidth() / 2 +\n                canvas_div.scrollLeft();\n              blockstemp[w].y =\n                $('.blockid[value=' + blockstemp[w].id + ']')\n                  .parent()\n                  .offset().top +\n                $('.blockid[value=' + blockstemp[w].id + ']')\n                  .parent()\n                  .innerHeight() /\n                  2 +\n                canvas_div.scrollTop();\n            }\n          }\n          blockstemp.filter(a => a.id == 0)[0].x =\n            drag.offset().left + drag.innerWidth() / 2;\n          blockstemp.filter(a => a.id == 0)[0].y =\n            drag.offset().top + drag.innerHeight() / 2;\n          mergeTempBlocks();\n        } else if (\n          active &&\n          blocks.length == 0 &&\n          drag.offset().top > canvas_div.offset().top &&\n          drag.offset().left > canvas_div.offset().left\n        ) {\n          blockSnap(drag);\n          active = false;\n          drag.css(\n            'top',\n            drag.offset().top -\n              canvas_div.offset().top +\n              canvas_div.scrollTop() +\n              'px'\n          );\n          drag.css(\n            'left',\n            drag.offset().left -\n              canvas_div.offset().left +\n              canvas_div.scrollLeft() +\n              'px'\n          );\n          drag.appendTo(canvas_div);\n          addBlock({\n            parent: -1,\n            childwidth: 0,\n            id: parseInt(drag.children('.blockid').val()),\n            x:\n              drag.offset().left +\n              drag.innerWidth() / 2 +\n              canvas_div.scrollLeft(),\n            y:\n              drag.offset().top +\n              drag.innerHeight() / 2 +\n              canvas_div.scrollTop(),\n            width: drag.innerWidth(),\n            height: drag.innerHeight(),\n          });\n        } else if (active && blocks.length == 0) {\n          drag.remove();\n        } else if (active || rearrange) {\n          const xpos =\n            drag.offset().left +\n            drag.innerWidth() / 2 +\n            canvas_div.scrollLeft();\n          const ypos = drag.offset().top + canvas_div.scrollTop();\n          const blocko = blocks.map(a => a.id);\n\n          // 调试信息\n          const debugInfo = {\n            dragPos: { x: xpos, y: ypos },\n            blocks: blocks.map(b => ({ id: b.id, x: b.x, y: b.y, width: b.width, height: b.height })),\n            dragElement: {\n              offsetLeft: drag.offset().left,\n              offsetTop: drag.offset().top,\n              width: drag.innerWidth(),\n              height: drag.innerHeight()\n            }\n          };\n          window.lastDebugInfo = debugInfo;\n          console.log('吸附检测:', debugInfo);\n          for (var i = 0; i < blocks.length; i++) {\n            const targetBlock = blocks.filter(a => a.id == blocko[i])[0];\n            const xMin = targetBlock.x - targetBlock.width / 2 - paddingx;\n            const xMax = targetBlock.x + targetBlock.width / 2 + paddingx;\n            const yMin = targetBlock.y - targetBlock.height / 2;\n            const yMax = targetBlock.y + targetBlock.height;\n\n            const xInRange = xpos >= xMin && xpos <= xMax;\n            const yInRange = ypos >= yMin && ypos <= yMax;\n\n            const snapCheckInfo = {\n              blockId: blocko[i],\n              targetBlock: { x: targetBlock.x, y: targetBlock.y, width: targetBlock.width, height: targetBlock.height },\n              dragPos: { x: xpos, y: ypos },\n              xRange: { min: xMin, max: xMax, inRange: xInRange },\n              yRange: { min: yMin, max: yMax, inRange: yInRange },\n              shouldSnap: xInRange && yInRange,\n              paddingx: paddingx\n            };\n            window.lastSnapCheck = snapCheckInfo;\n            console.log('吸附条件检查:', snapCheckInfo);\n\n            if (xInRange && yInRange) {\n              console.log('🎯 吸附条件满足，开始执行吸附逻辑', { rearrange });\n              active = false;\n              if (!rearrange) {\n                console.log('📌 执行blockSnap和appendTo');\n                blockSnap(drag);\n                drag.appendTo(canvas_div);\n              } else {\n                console.log('🔄 重排模式，跳过blockSnap');\n              }\n              let totalwidth = 0;\n              let totalremove = 0;\n              const maxheight = 0;\n              for (\n                var w = 0;\n                w < blocks.filter(id => id.parent == blocko[i]).length;\n                w++\n              ) {\n                var children = blocks.filter(id => id.parent == blocko[i])[w];\n                if (children.childwidth > children.width) {\n                  totalwidth += children.childwidth + paddingx;\n                } else {\n                  totalwidth += children.width + paddingx;\n                }\n              }\n              totalwidth += drag.innerWidth();\n              for (\n                var w = 0;\n                w < blocks.filter(id => id.parent == blocko[i]).length;\n                w++\n              ) {\n                var children = blocks.filter(id => id.parent == blocko[i])[w];\n                if (children.childwidth > children.width) {\n                  $('.blockid[value=' + children.id + ']')\n                    .parent()\n                    .css(\n                      'left',\n                      blocks.filter(a => a.id == blocko[i])[0].x -\n                        totalwidth / 2 +\n                        totalremove +\n                        children.childwidth / 2 -\n                        children.width / 2 +\n                        'px'\n                    );\n                  children.x =\n                    blocks.filter(id => id.parent == blocko[i])[0].x -\n                    totalwidth / 2 +\n                    totalremove +\n                    children.childwidth / 2;\n                  totalremove += children.childwidth + paddingx;\n                } else {\n                  $('.blockid[value=' + children.id + ']')\n                    .parent()\n                    .css(\n                      'left',\n                      blocks.filter(a => a.id == blocko[i])[0].x -\n                        totalwidth / 2 +\n                        totalremove +\n                        'px'\n                    );\n                  children.x =\n                    blocks.filter(id => id.parent == blocko[i])[0].x -\n                    totalwidth / 2 +\n                    totalremove +\n                    children.width / 2;\n                  totalremove += children.width + paddingx;\n                }\n              }\n              drag.css(\n                'left',\n                blocks.filter(id => id.id == blocko[i])[0].x -\n                  totalwidth / 2 +\n                  totalremove -\n                  canvas_div.offset().left +\n                  canvas_div.scrollLeft() +\n                  'px'\n              );\n              drag.css(\n                'top',\n                blocks.filter(id => id.id == blocko[i])[0].y +\n                  blocks.filter(id => id.id == blocko[i])[0].height / 2 +\n                  paddingy -\n                  canvas_div.offset().top +\n                  'px'\n              );\n              if (rearrange) {\n                blockstemp.filter(\n                  a => a.id == parseInt(drag.children('.blockid').val())\n                )[0].x =\n                  drag.offset().left +\n                  drag.innerWidth() / 2 +\n                  canvas_div.scrollLeft();\n                blockstemp.filter(\n                  a => a.id == parseInt(drag.children('.blockid').val())\n                )[0].y =\n                  drag.offset().top +\n                  drag.innerHeight() / 2 +\n                  canvas_div.scrollTop();\n                blockstemp.filter(\n                  a => a.id == drag.children('.blockid').val()\n                )[0].parent = blocko[i];\n                for (var w = 0; w < blockstemp.length; w++) {\n                  if (\n                    blockstemp[w].id !=\n                    parseInt(drag.children('.blockid').val())\n                  ) {\n                    $('.blockid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .css(\n                        'left',\n                        $('.blockid[value=' + blockstemp[w].id + ']')\n                          .parent()\n                          .offset().left -\n                          canvas_div.offset().left +\n                          canvas_div.scrollLeft()\n                      );\n                    $('.blockid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .css(\n                        'top',\n                        $('.blockid[value=' + blockstemp[w].id + ']')\n                          .parent()\n                          .offset().top -\n                          canvas_div.offset().top +\n                          canvas_div.scrollTop()\n                      );\n                    $('.arrowid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .css(\n                        'left',\n                        $('.arrowid[value=' + blockstemp[w].id + ']')\n                          .parent()\n                          .offset().left -\n                          canvas_div.offset().left +\n                          canvas_div.scrollLeft() +\n                          20\n                      );\n                    $('.arrowid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .css(\n                        'top',\n                        $('.arrowid[value=' + blockstemp[w].id + ']')\n                          .parent()\n                          .offset().top -\n                          canvas_div.offset().top +\n                          canvas_div.scrollTop()\n                      );\n                    $('.blockid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .appendTo(canvas_div);\n                    $('.arrowid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .appendTo(canvas_div);\n\n                    blockstemp[w].x =\n                      $('.blockid[value=' + blockstemp[w].id + ']')\n                        .parent()\n                        .offset().left +\n                      $(\n                        '.blockid[value=' + blockstemp[w].id + ']'\n                      ).innerWidth() /\n                        2 +\n                      canvas_div.scrollLeft();\n                    blockstemp[w].y =\n                      $('.blockid[value=' + blockstemp[w].id + ']')\n                        .parent()\n                        .offset().top +\n                      $('.blockid[value=' + blockstemp[w].id + ']')\n                        .parent()\n                        .innerHeight() /\n                        2 +\n                      canvas_div.scrollTop();\n                  }\n                }\n                mergeTempBlocks();\n              } else {\n                addBlock({\n                  childwidth: 0,\n                  parent: blocko[i],\n                  id: parseInt(drag.children('.blockid').val()),\n                  x:\n                    drag.offset().left +\n                    drag.innerWidth() / 2 +\n                    canvas_div.scrollLeft(),\n                  y:\n                    drag.offset().top +\n                    drag.innerHeight() / 2 +\n                    canvas_div.scrollTop(),\n                  width: drag.innerWidth(),\n                  height: drag.innerHeight(),\n                });\n                // 同步引用以确保新添加的块可以被找到\n                syncBlockReferences();\n              }\n              // 确保在连线计算前块数据是最新的\n              syncBlockReferences();\n              const arrowhelp = blocks.filter(\n                a => a.id == parseInt(drag.children('.blockid').val())\n              )[0];\n              const arrowx =\n                arrowhelp.x - blocks.filter(a => a.id == blocko[i])[0].x + 20;\n              // 获取父块的第一个子块（应该是刚添加的当前块）\n              const firstChildOfParent = blocks.filter(id => id.parent == blocko[i])[0];\n              const arrowy =\n                arrowhelp.y -\n                arrowhelp.height / 2 -\n                (firstChildOfParent ? (firstChildOfParent.y + firstChildOfParent.height / 2) : (arrowhelp.y + arrowhelp.height / 2)) +\n                canvas_div.scrollTop();\n\n\n              if (arrowx < 0) {\n                drag.after(\n                  '<div class=\"arrowblock\"><input type=\"hidden\" class=\"arrowid\" value=\"' +\n                    drag.children('.blockid').val() +\n                    '\"><svg preserveaspectratio=\"none\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M' +\n                    (blocks.filter(a => a.id == blocko[i])[0].x -\n                      arrowhelp.x +\n                      5) +\n                    ' 0L' +\n                    (blocks.filter(a => a.id == blocko[i])[0].x -\n                      arrowhelp.x +\n                      5) +\n                    ' ' +\n                    paddingy / 2 +\n                    'L5 ' +\n                    paddingy / 2 +\n                    'L5 ' +\n                    arrowy +\n                    '\" stroke=\"#C5CCD0\" stroke-width=\"2px\"/><path d=\"M0 ' +\n                    (arrowy - 5) +\n                    'H10L5 ' +\n                    arrowy +\n                    'L0 ' +\n                    (arrowy - 5) +\n                    'Z\" fill=\"#C5CCD0\"/></svg></div>'\n                );\n                $('.arrowid[value=' + drag.children('.blockid').val() + ']')\n                  .parent()\n                  .css(\n                    'left',\n                    arrowhelp.x -\n                      5 -\n                      canvas_div.offset().left +\n                      canvas_div.scrollLeft() +\n                      'px'\n                  );\n                $('.arrowid[value=' + drag.children('.blockid').val() + ']')\n                  .parent()\n                  .css(\n                    'top',\n                    blocks.filter(a => a.id == blocko[i])[0].y +\n                      blocks.filter(a => a.id == blocko[i])[0].height / 2 -\n                      canvas_div.offset().top +\n                      canvas_div.scrollTop() +\n                      'px'\n                  );\n              } else {\n                const svgPath = `M20 0L20 ${paddingy / 2}L${arrowx} ${paddingy / 2}L${arrowx} ${arrowy}`;\n\n                drag.after(\n                  '<div class=\"arrowblock\"><input type=\"hidden\" class=\"arrowid\" value=\"' +\n                    drag.children('.blockid').val() +\n                    '\"><svg preserveaspectratio=\"none\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"' +\n                    svgPath +\n                    '\" stroke=\"#C5CCD0\" stroke-width=\"2px\"/><path d=\"M' +\n                    (arrowx - 5) +\n                    ' ' +\n                    (arrowy - 5) +\n                    'H' +\n                    (arrowx + 5) +\n                    'L' +\n                    arrowx +\n                    ' ' +\n                    arrowy +\n                    'L' +\n                    (arrowx - 5) +\n                    ' ' +\n                    (arrowy - 5) +\n                    'Z\" fill=\"#C5CCD0\"/></svg></div>'\n                );\n                $(\n                  '.arrowid[value=' +\n                    parseInt(drag.children('.blockid').val()) +\n                    ']'\n                )\n                  .parent()\n                  .css(\n                    'left',\n                    blocks.filter(a => a.id == blocko[i])[0].x -\n                      20 -\n                      canvas_div.offset().left +\n                      canvas_div.scrollLeft() +\n                      'px'\n                  );\n              }\n              $(\n                '.arrowid[value=' +\n                  parseInt(drag.children('.blockid').val()) +\n                  ']'\n              )\n                .parent()\n                .css(\n                  'top',\n                  blocks.filter(a => a.id == blocko[i])[0].y +\n                    blocks.filter(a => a.id == blocko[i])[0].height / 2 -\n                    canvas_div.offset().top +\n                    canvas_div.scrollTop() +\n                    'px'\n                );\n              if (blocks.filter(a => a.id == blocko[i])[0].parent != -1) {\n                let flag = false;\n                var idval = blocko[i];\n                while (!flag) {\n                  if (blocks.filter(a => a.id == idval)[0].parent == -1) {\n                    flag = true;\n                  } else {\n                    let zwidth = 0;\n                    for (\n                      var w = 0;\n                      w < blocks.filter(id => id.parent == idval).length;\n                      w++\n                    ) {\n                      var children = blocks.filter(id => id.parent == idval)[w];\n                      if (children.childwidth > children.width) {\n                        if (\n                          w ==\n                          blocks.filter(id => id.parent == idval).length - 1\n                        ) {\n                          zwidth += children.childwidth;\n                        } else {\n                          zwidth += children.childwidth + paddingx;\n                        }\n                      } else {\n                        if (\n                          w ==\n                          blocks.filter(id => id.parent == idval).length - 1\n                        ) {\n                          zwidth += children.width;\n                        } else {\n                          zwidth += children.width + paddingx;\n                        }\n                      }\n                    }\n                    blocks.filter(a => a.id == idval)[0].childwidth = zwidth;\n                    idval = blocks.filter(a => a.id == idval)[0].parent;\n                  }\n                }\n                blocks.filter(id => id.id == idval)[0].childwidth = totalwidth;\n              }\n              if (rearrange) {\n                rearrange = false;\n                drag.removeClass('dragging');\n              }\n              rearrangeMe();\n              checkOffset();\n              break;\n            } else if (i == blocks.length - 1) {\n              if (rearrange) {\n                rearrange = false;\n                blockstemp = [];\n              }\n              active = false;\n              drag.remove();\n            }\n          }\n        }\n      }\n    });\n    $(document).on('mousedown', '.block', function (event) {\n      $(document).on('mouseup mousemove', '.block', function handler(event) {\n        if (event.type !== 'mouseup') {\n          if (event.which === 1) {\n            if (!active && !rearrange) {\n              rearrange = true;\n              drag = $(this);\n              drag.addClass('dragging');\n              dragx = event.clientX - $(this).offset().left;\n              dragy = event.clientY - $(this).offset().top;\n              const blockid = parseInt($(this).children('.blockid').val());\n              drag = $(this);\n              blockstemp.push(blocks.filter(a => a.id == blockid)[0]);\n              blocks = $.grep(blocks, function(e) {\n                return e.id != blockid;\n              });\n              $('.arrowid[value=' + blockid + ']')\n                .parent()\n                .remove();\n              let layer = blocks.filter(a => a.parent == blockid);\n              let flag = false;\n              let foundids = [];\n              const allids = [];\n              while (!flag) {\n                for (var i = 0; i < layer.length; i++) {\n                  blockstemp.push(blocks.filter(a => a.id == layer[i].id)[0]);\n                  $('.blockid[value=' + layer[i].id + ']')\n                    .parent()\n                    .css(\n                      'left',\n                      $('.blockid[value=' + layer[i].id + ']')\n                        .parent()\n                        .offset().left - drag.offset().left\n                    );\n                  $('.blockid[value=' + layer[i].id + ']')\n                    .parent()\n                    .css(\n                      'top',\n                      $('.blockid[value=' + layer[i].id + ']')\n                        .parent()\n                        .offset().top - drag.offset().top\n                    );\n                  $('.arrowid[value=' + layer[i].id + ']')\n                    .parent()\n                    .css(\n                      'left',\n                      $('.arrowid[value=' + layer[i].id + ']')\n                        .parent()\n                        .offset().left - drag.offset().left\n                    );\n                  $('.arrowid[value=' + layer[i].id + ']')\n                    .parent()\n                    .css(\n                      'top',\n                      $('.arrowid[value=' + layer[i].id + ']')\n                        .parent()\n                        .offset().top - drag.offset().top\n                    );\n                  $('.blockid[value=' + layer[i].id + ']')\n                    .parent()\n                    .appendTo(drag);\n                  $('.arrowid[value=' + layer[i].id + ']')\n                    .parent()\n                    .appendTo(drag);\n                  foundids.push(layer[i].id);\n                  allids.push(layer[i].id);\n                }\n                if (foundids.length == 0) {\n                  flag = true;\n                } else {\n                  layer = blocks.filter(a => foundids.includes(a.parent));\n                  foundids = [];\n                }\n              }\n              for (\n                var i = 0;\n                i < blocks.filter(a => a.parent == blockid).length;\n                i++\n              ) {\n                var blocknumber = blocks.filter(a => a.parent == blockid)[i];\n                removeBlockById(blocknumber);\n              }\n              for (var i = 0; i < allids.length; i++) {\n                var blocknumber = allids[i];\n                removeBlockById(blocknumber);\n              }\n              if (blocks.length > 1) {\n                rearrangeMe();\n              }\n              if (lastevent) {\n                fixOffset();\n              }\n            }\n          }\n        }\n        $(document).off('mouseup mousemove', handler);\n      });\n    });\n    $(document).on('mousemove', function (event) {\n      if (active) {\n        drag.css('left', event.clientX - dragx + 'px');\n        drag.css('top', event.clientY - dragy + 'px');\n      } else if (rearrange) {\n        drag.css(\n          'left',\n          event.clientX -\n            dragx -\n            canvas_div.offset().left +\n            canvas_div.scrollLeft() +\n            'px'\n        );\n        drag.css(\n          'top',\n          event.clientY -\n            dragy -\n            canvas_div.offset().top +\n            canvas_div.scrollTop() +\n            'px'\n        );\n        blockstemp.filter(\n          a => a.id == parseInt(drag.children('.blockid').val())\n        ).x =\n          drag.offset().left + drag.innerWidth() / 2 + canvas_div.scrollLeft();\n        blockstemp.filter(\n          a => a.id == parseInt(drag.children('.blockid').val())\n        ).y =\n          drag.offset().top + drag.innerHeight() / 2 + canvas_div.scrollTop();\n      }\n      if (active || rearrange) {\n        const xpos =\n          drag.offset().left + drag.innerWidth() / 2 + canvas_div.scrollLeft();\n        const ypos = drag.offset().top + canvas_div.scrollTop();\n        const blocko = blocks.map(a => a.id);\n        for (var i = 0; i < blocks.length; i++) {\n          if (\n            xpos >=\n              blocks.filter(a => a.id == blocko[i])[0].x -\n                blocks.filter(a => a.id == blocko[i])[0].width / 2 -\n                paddingx &&\n            xpos <=\n              blocks.filter(a => a.id == blocko[i])[0].x +\n                blocks.filter(a => a.id == blocko[i])[0].width / 2 +\n                paddingx &&\n            ypos >=\n              blocks.filter(a => a.id == blocko[i])[0].y -\n                blocks.filter(a => a.id == blocko[i])[0].height / 2 &&\n            ypos <=\n              blocks.filter(a => a.id == blocko[i])[0].y +\n                blocks.filter(a => a.id == blocko[i])[0].height\n          ) {\n            $('.indicator').appendTo(\n              $('.blockid[value=' + blocko[i] + ']').parent()\n            );\n            $('.indicator').css(\n              'left',\n              $('.blockid[value=' + blocko[i] + ']')\n                .parent()\n                .innerWidth() /\n                2 -\n                5 +\n                'px'\n            );\n            $('.indicator').css(\n              'top',\n              $('.blockid[value=' + blocko[i] + ']')\n                .parent()\n                .innerHeight() + 'px'\n            );\n            $('.indicator').removeClass('invisible');\n            break;\n          } else if (i == blocks.length - 1) {\n            if (!$('.indicator').hasClass('invisible')) {\n              $('.indicator').addClass('invisible');\n            }\n          }\n        }\n      }\n    });\n\n    function checkOffset() {\n      offsetleft = blocks.map(a => a.x);\n      const widths = blocks.map(a => a.width);\n      const mathmin = offsetleft.map(function (item, index) {\n        return item - widths[index] / 2;\n      });\n      offsetleft = Math.min.apply(Math, mathmin);\n      if (offsetleft < canvas_div.offset().left) {\n        lastevent = true;\n        const blocko = blocks.map(a => a.id);\n        for (var w = 0; w < blocks.length; w++) {\n          $(\n            '.blockid[value=' +\n              blocks.filter(a => a.id == blocko[w])[0].id +\n              ']'\n          )\n            .parent()\n            .css(\n              'left',\n              blocks.filter(a => a.id == blocko[w])[0].x -\n                blocks.filter(a => a.id == blocko[w])[0].width / 2 -\n                offsetleft +\n                20\n            );\n          if (blocks.filter(a => a.id == blocko[w])[0].parent != -1) {\n            const arrowhelp = blocks.filter(a => a.id == blocko[w])[0];\n            const arrowx =\n              arrowhelp.x -\n              blocks.filter(\n                a => a.id == blocks.filter(a => a.id == blocko[w])[0].parent\n              )[0].x;\n            if (arrowx < 0) {\n              $('.arrowid[value=' + blocko[w] + ']')\n                .parent()\n                .css('left', arrowhelp.x - offsetleft + 20 - 5 + 'px');\n            } else {\n              $('.arrowid[value=' + blocko[w] + ']')\n                .parent()\n                .css(\n                  'left',\n                  blocks.filter(\n                    id =>\n                      id.id == blocks.filter(a => a.id == blocko[w])[0].parent\n                  )[0].x -\n                    20 -\n                    offsetleft +\n                    20 +\n                    'px'\n                );\n            }\n          }\n        }\n        for (var w = 0; w < blocks.length; w++) {\n          blocks[w].x =\n            $('.blockid[value=' + blocks[w].id + ']')\n              .parent()\n              .offset().left +\n            canvas_div.offset().left -\n            $('.blockid[value=' + blocks[w].id + ']')\n              .parent()\n              .innerWidth() /\n              2 -\n            40;\n        }\n        offsetleftold = offsetleft;\n      }\n    }\n\n    function fixOffset() {\n      if (offsetleftold < canvas_div.offset().left) {\n        lastevent = false;\n        const blocko = blocks.map(a => a.id);\n        for (var w = 0; w < blocks.length; w++) {\n          $(\n            '.blockid[value=' +\n              blocks.filter(a => a.id == blocko[w])[0].id +\n              ']'\n          )\n            .parent()\n            .css(\n              'left',\n              blocks.filter(a => a.id == blocko[w])[0].x -\n                blocks.filter(a => a.id == blocko[w])[0].width / 2 -\n                offsetleftold -\n                20\n            );\n          blocks.filter(a => a.id == blocko[w])[0].x =\n            $(\n              '.blockid[value=' +\n                blocks.filter(a => a.id == blocko[w])[0].id +\n                ']'\n            )\n              .parent()\n              .offset().left +\n            blocks.filter(a => a.id == blocko[w])[0].width / 2;\n\n          if (blocks.filter(a => a.id == blocko[w])[0].parent != -1) {\n            const arrowhelp = blocks.filter(a => a.id == blocko[w])[0];\n            const arrowx =\n              arrowhelp.x -\n              blocks.filter(\n                a => a.id == blocks.filter(a => a.id == blocko[w])[0].parent\n              )[0].x;\n            if (arrowx < 0) {\n              $('.arrowid[value=' + blocko[w] + ']')\n                .parent()\n                .css('left', arrowhelp.x - 5 - canvas_div.offset().left + 'px');\n            } else {\n              $('.arrowid[value=' + blocko[w] + ']')\n                .parent()\n                .css(\n                  'left',\n                  blocks.filter(\n                    id =>\n                      id.id == blocks.filter(a => a.id == blocko[w])[0].parent\n                  )[0].x -\n                    20 -\n                    canvas_div.offset().left +\n                    'px'\n                );\n            }\n          }\n        }\n        for (var w = 0; w < blocks.length; w++) {\n          //blocks[w].x = blocks[w].x+offsetleftold-20;\n        }\n        offsetleftold = 0;\n      }\n    }\n\n    function rearrangeMe() {\n      const result = blocks.map(a => a.parent);\n      for (var z = 0; z < result.length; z++) {\n        if (result[z] == -1) {\n          continue; // 跳过根块，不要使用z++\n        }\n        let totalwidth = 0;\n        let totalremove = 0;\n        const maxheight = 0;\n        for (\n          var w = 0;\n          w < blocks.filter(id => id.parent == result[z]).length;\n          w++\n        ) {\n          var children = blocks.filter(id => id.parent == result[z])[w];\n          if (blocks.filter(id => id.parent == children.id).length == 0) {\n            children.childwidth = 0;\n          }\n          if (children.childwidth > children.width) {\n            if (w == blocks.filter(id => id.parent == result[z]).length - 1) {\n              totalwidth += children.childwidth;\n            } else {\n              totalwidth += children.childwidth + paddingx;\n            }\n          } else {\n            if (w == blocks.filter(id => id.parent == result[z]).length - 1) {\n              totalwidth += children.width;\n            } else {\n              totalwidth += children.width + paddingx;\n            }\n          }\n        }\n        if (result[z] != -1) {\n          const parentBlock = blocks.filter(a => a.id == result[z])[0];\n          if (parentBlock) {\n            parentBlock.childwidth = totalwidth;\n          }\n        }\n        for (\n          var w = 0;\n          w < blocks.filter(id => id.parent == result[z]).length;\n          w++\n        ) {\n          var children = blocks.filter(id => id.parent == result[z])[w];\n          if (result[z] != -1) {\n            const parentBlock = blocks.filter(id => id.id == result[z])[0];\n            if (parentBlock) {\n              $('.blockid[value=' + children.id + ']')\n                .parent()\n                .css(\n                  'top',\n                  parentBlock.y + paddingy + 'px'\n                );\n              parentBlock.y = parentBlock.y + paddingy;\n            }\n          }\n          if (children.childwidth > children.width) {\n            $('.blockid[value=' + children.id + ']')\n              .parent()\n              .css(\n                'left',\n                blocks.filter(id => id.id == result[z])[0].x -\n                  totalwidth / 2 +\n                  totalremove +\n                  children.childwidth / 2 -\n                  children.width / 2 -\n                  canvas_div.offset().left +\n                  'px'\n              );\n            children.x =\n              blocks.filter(id => id.id == result[z])[0].x -\n              totalwidth / 2 +\n              totalremove +\n              children.childwidth / 2;\n            totalremove += children.childwidth + paddingx;\n          } else {\n            $('.blockid[value=' + children.id + ']')\n              .parent()\n              .css(\n                'left',\n                blocks.filter(id => id.id == result[z])[0].x -\n                  totalwidth / 2 +\n                  totalremove -\n                  canvas_div.offset().left +\n                  'px'\n              );\n            children.x =\n              blocks.filter(id => id.id == result[z])[0].x -\n              totalwidth / 2 +\n              totalremove +\n              children.width / 2;\n            totalremove += children.width + paddingx;\n          }\n          const arrowhelp = blocks.filter(a => a.id == children.id)[0];\n          const arrowx =\n            arrowhelp.x - blocks.filter(a => a.id == children.parent)[0].x + 20;\n          const parentBlock = blocks.filter(a => a.id == children.parent)[0];\n          // 使用父块的原始y位置（修改前的位置）进行连线计算\n          const parentY = parentBlock.originalY !== undefined ? parentBlock.originalY : parentBlock.y;\n          const arrowy =\n            arrowhelp.y -\n            arrowhelp.height / 2 -\n            (parentY + parentBlock.height / 2);\n          // 注意：在rearrangeMe中不需要加canvas_div.scrollTop()，因为块位置已经是绝对位置\n\n\n          $('.arrowid[value=' + children.id + ']')\n            .parent()\n            .css(\n              'top',\n              parentBlock.y + parentBlock.height / 2 - canvas_div.offset().top + 'px'\n            );\n          if (arrowx < 0) {\n            $('.arrowid[value=' + children.id + ']')\n              .parent()\n              .css('left', arrowhelp.x - 5 - canvas_div.offset().left + 'px');\n            $('.arrowid[value=' + children.id + ']')\n              .parent()\n              .html(\n                '<input type=\"hidden\" class=\"arrowid\" value=\"' +\n                  children.id +\n                  '\"><svg preserveaspectratio=\"none\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M' +\n                  (blocks.filter(id => id.id == children.parent)[0].x -\n                    arrowhelp.x +\n                    5) +\n                  ' 0L' +\n                  (blocks.filter(id => id.id == children.parent)[0].x -\n                    arrowhelp.x +\n                    5) +\n                  ' ' +\n                  paddingy / 2 +\n                  'L5 ' +\n                  paddingy / 2 +\n                  'L5 ' +\n                  arrowy +\n                  '\" stroke=\"#C5CCD0\" stroke-width=\"2px\"/><path d=\"M0 ' +\n                  (arrowy - 5) +\n                  'H10L5 ' +\n                  arrowy +\n                  'L0 ' +\n                  (arrowy - 5) +\n                  'Z\" fill=\"#C5CCD0\"/></svg>'\n              );\n          } else {\n            $('.arrowid[value=' + children.id + ']')\n              .parent()\n              .css(\n                'left',\n                blocks.filter(id => id.id == children.parent)[0].x -\n                  20 -\n                  canvas_div.offset().left +\n                  'px'\n              );\n            $('.arrowid[value=' + children.id + ']')\n              .parent()\n              .html(\n                '<input type=\"hidden\" class=\"arrowid\" value=\"' +\n                  children.id +\n                  '\"><svg preserveaspectratio=\"none\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 0L20 ' +\n                  paddingy / 2 +\n                  'L' +\n                  arrowx +\n                  ' ' +\n                  paddingy / 2 +\n                  'L' +\n                  arrowx +\n                  ' ' +\n                  arrowy +\n                  '\" stroke=\"#C5CCD0\" stroke-width=\"2px\"/><path d=\"M' +\n                  (arrowx - 5) +\n                  ' ' +\n                  (arrowy - 5) +\n                  'H' +\n                  (arrowx + 5) +\n                  'L' +\n                  arrowx +\n                  ' ' +\n                  arrowy +\n                  'L' +\n                  (arrowx - 5) +\n                  ' ' +\n                  (arrowy - 5) +\n                  'Z\" fill=\"#C5CCD0\"/></svg>'\n              );\n          }\n        }\n      }\n    }\n  });\n\n  function blockGrabbed(block) {\n    grab(block);\n  }\n\n  function blockReleased() {\n    release();\n  }\n\n  function blockSnap(drag) {\n    snapping(drag);\n  }\n\n  // 添加状态清理函数\n  function clearCanvasState() {\n    // 清理所有块和连线\n    $('.block').remove();\n    $('.arrowblock').remove();\n    $('.indicator').addClass('invisible');\n\n    // 重置状态变量\n    active = false;\n    rearrange = false;\n    drag = null;\n    original = null;\n\n    // 清理块数据\n    if (blockManager) {\n      blockManager.clearAll();\n    } else {\n      blocks.length = 0;\n      blockstemp.length = 0;\n    }\n\n    // 同步引用\n    syncBlockReferences();\n  }\n\n  // 暴露清理函数到全局\n  window.clearFlowyCanvas = clearCanvasState;\n};\n\n// 模块导出支持\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = flowy;\n} else if (typeof window !== 'undefined') {\n  window.flowy = flowy;\n}\n"],"names":["blockManager","blocks","blockstemp","syncBlockReferences","active","rearrange","drag","original","event","a","parentBlock"],"mappings":"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"}