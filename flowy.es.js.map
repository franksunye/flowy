{"version":3,"file":"flowy.es.js","sources":["../src/flowy.js"],"sourcesContent":["// 导入模块\n// 在浏览器环境中，模块会被自动加载到window对象\n// 在Node.js测试环境中，通过require加载\n// - DomUtils: DOM操作工具\n// - BlockManager: 块管理模块\n\n// 检查模块是否可用\nfunction getBlockManager() {\n  // 在浏览器环境中，尝试从全局作用域获取\n  if (typeof window !== 'undefined' && window.BlockManager) {\n    return new window.BlockManager();\n  }\n  // 在Node.js测试环境中，尝试require\n  if (typeof require !== 'undefined') {\n    try {\n      const BlockManager = require('./core/block-manager.js');\n      return new BlockManager();\n    } catch (e) {\n      // 如果模块不可用，返回null\n      return null;\n    }\n  }\n  // 如果都不可用，返回null\n  return null;\n}\n\nconst flowy = function (canvas, grab, release, snapping, spacing_x, spacing_y) {\n  if (!grab) {\n    grab = function () {};\n  }\n  if (!release) {\n    release = function () {};\n  }\n  if (!snapping) {\n    snapping = function () {};\n  }\n  if (!spacing_x) {\n    spacing_x = 20;\n  }\n  if (!spacing_y) {\n    spacing_y = 80;\n  }\n  $(document).ready(function () {\n    // 创建块管理器实例\n    const blockManager = getBlockManager();\n\n    // 保持原有变量作为引用，确保向后兼容\n    let blocks = blockManager ? blockManager.getAllBlocks() : [];\n    let blockstemp = blockManager ? blockManager.getTempBlocks() : [];\n    const canvas_div = canvas;\n\n    // 添加同步函数，确保引用始终是最新的\n    function syncBlockReferences() {\n        if (blockManager) {\n            blocks = blockManager.getAllBlocks();\n            blockstemp = blockManager.getTempBlocks();\n        }\n    }\n\n    // 辅助函数：获取块数量（兼容原有代码）\n    function getBlockCount() {\n      return blockManager ? blockManager.getBlockCount() : blocks.length;\n    }\n\n    // 辅助函数：获取下一个块ID\n    function getNextBlockId() {\n      if (blockManager) {\n        return blockManager.getNextBlockId();\n      } else {\n        return blocks.length === 0\n          ? 0\n          : Math.max.apply(\n              Math,\n              blocks.map(a => a.id)\n            ) + 1;\n      }\n    }\n\n    // 辅助函数：清空所有块\n    function clearAllBlocks() {\n      if (blockManager) {\n        blockManager.clearBlocks();\n        // 同时清空引用数组以保持同步\n        blocks.length = 0;\n      } else {\n        blocks = [];\n      }\n    }\n\n    // 辅助函数：添加块\n    function addBlock(blockData) {\n      if (blockManager) {\n        blockManager.addBlock(blockData);\n        // 同时添加到引用数组以保持同步\n        blocks.push(blockData);\n      } else {\n        blocks.push(blockData);\n      }\n    }\n\n    // 辅助函数：合并临时块到主数组\n    function mergeTempBlocks() {\n      if (blockManager) {\n        blockManager.mergeTempBlocks();\n        // 同时更新引用数组以保持同步\n        blocks = blockManager.getAllBlocks();\n        blockstemp = blockManager.getTempBlocks();\n      } else {\n        blocks = $.merge(blocks, blockstemp);\n        blockstemp = [];\n      }\n    }\n\n    // 辅助函数：移除指定ID的块\n    function removeBlockById(blockId) {\n      if (blockManager) {\n        blockManager.removeBlocks(function (block) {\n          return block.id != blockId;\n        });\n        // 同时更新引用数组以保持同步\n        blocks = blockManager.getAllBlocks();\n      } else {\n        blocks = $.grep(blocks, function (e) {\n          return e.id != blockId;\n        });\n      }\n    }\n    let active = false;\n    const paddingx = spacing_x;\n    const paddingy = spacing_y;\n    let offsetleft = 0;\n    let offsetleftold = 0;\n    let rearrange = false;\n    let lastevent = false;\n    let drag, dragx, dragy, original;\n    // 添加条件检查，确保 canvas_div 存在且有 append 方法\n    if (canvas_div && typeof canvas_div.append === 'function') {\n      canvas_div.append(\"<div class='indicator invisible'></div>\");\n    }\n    flowy.output = function () {\n      const json_data = [];\n      if (blocks.length > 0) {\n        for (var i = 0; i < blocks.length; i++) {\n          json_data.push({\n            id: blocks[i].id,\n            parent: blocks[i].parent,\n            data: [],\n          });\n          $('.blockid[value=' + blocks[i].id + ']')\n            .parent()\n            .children('input')\n            .each(function () {\n              const json_name = $(this).attr('name');\n              const json_value = $(this).val();\n              json_data[i].data.push({\n                name: json_name,\n                value: json_value,\n              });\n            });\n        }\n        return json_data;\n      }\n    };\n    flowy.deleteBlocks = function () {\n      clearAllBlocks();\n      canvas_div.html(\"<div class='indicator invisible'></div>\");\n    };\n    $(document).on('mousedown', '.create-flowy', function (event) {\n      if (event.which === 1) {\n        original = $(this);\n        if (getBlockCount() == 0) {\n          var newBlockId = getBlockCount(); // 当blocks为空时，使用0作为第一个ID\n          $(this)\n            .clone()\n            .addClass('block')\n            .append(\n              \"<input type='hidden' name='blockid' class='blockid' value='\" +\n                newBlockId +\n                \"'>\"\n            )\n            .removeClass('create-flowy')\n            .appendTo('body');\n          $(this).addClass('dragnow');\n          drag = $('.blockid[value=' + newBlockId + ']').parent();\n        } else {\n          var newBlockId = getNextBlockId();\n          $(this)\n            .clone()\n            .addClass('block')\n            .append(\n              \"<input type='hidden' name='blockid' class='blockid' value='\" +\n                newBlockId +\n                \"'>\"\n            )\n            .removeClass('create-flowy')\n            .appendTo('body');\n          $(this).addClass('dragnow');\n          drag = $('.blockid[value=' + newBlockId + ']').parent();\n        }\n        blockGrabbed($(this));\n        drag.addClass('dragging');\n        active = true;\n        dragx = event.clientX - $(this).offset().left;\n        dragy = event.clientY - $(this).offset().top;\n\n        // 确保拖拽元素有正确的绝对位置\n        const initialLeft = event.clientX - dragx;\n        const initialTop = event.clientY - dragy;\n        drag.css({\n          'position': 'absolute',\n          'left': initialLeft + 'px',\n          'top': initialTop + 'px',\n          'z-index': '1000'\n        });\n\n\n      }\n    });\n    $(document).on('mouseup', function (event) {\n      if (event.which === 1 && (active || rearrange)) {\n        blockReleased();\n        if (!$('.indicator').hasClass('invisible')) {\n          $('.indicator').addClass('invisible');\n        }\n        if (active) {\n          original.removeClass('dragnow');\n          drag.removeClass('dragging');\n        }\n        if (parseInt(drag.children('.blockid').val()) == 0 && rearrange) {\n          drag.removeClass('dragging');\n          rearrange = false;\n          for (var w = 0; w < blockstemp.length; w++) {\n            if (blockstemp[w].id != parseInt(drag.children('.blockid').val())) {\n              $('.blockid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .css(\n                  'left',\n                  $('.blockid[value=' + blockstemp[w].id + ']')\n                    .parent()\n                    .offset().left -\n                    canvas_div.offset().left +\n                    canvas_div.scrollLeft()\n                );\n              $('.blockid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .css(\n                  'top',\n                  $('.blockid[value=' + blockstemp[w].id + ']')\n                    .parent()\n                    .offset().top -\n                    canvas_div.offset().top +\n                    canvas_div.scrollTop()\n                );\n              $('.arrowid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .css(\n                  'left',\n                  $('.arrowid[value=' + blockstemp[w].id + ']')\n                    .parent()\n                    .offset().left -\n                    canvas_div.offset().left +\n                    canvas_div.scrollLeft()\n                );\n              $('.arrowid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .css(\n                  'top',\n                  $('.arrowid[value=' + blockstemp[w].id + ']')\n                    .parent()\n                    .offset().top -\n                    canvas_div.offset().top +\n                    canvas_div.scrollTop() +\n                    'px'\n                );\n              $('.blockid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .appendTo(canvas_div);\n              $('.arrowid[value=' + blockstemp[w].id + ']')\n                .parent()\n                .appendTo(canvas_div);\n\n              blockstemp[w].x =\n                $('.blockid[value=' + blockstemp[w].id + ']')\n                  .parent()\n                  .offset().left +\n                $('.blockid[value=' + blockstemp[w].id + ']').innerWidth() / 2 +\n                canvas_div.scrollLeft();\n              blockstemp[w].y =\n                $('.blockid[value=' + blockstemp[w].id + ']')\n                  .parent()\n                  .offset().top +\n                $('.blockid[value=' + blockstemp[w].id + ']')\n                  .parent()\n                  .innerHeight() /\n                  2 +\n                canvas_div.scrollTop();\n            }\n          }\n          blockstemp.filter(a => a.id == 0)[0].x =\n            drag.offset().left + drag.innerWidth() / 2;\n          blockstemp.filter(a => a.id == 0)[0].y =\n            drag.offset().top + drag.innerHeight() / 2;\n          mergeTempBlocks();\n        } else if (\n          active &&\n          blocks.length == 0 &&\n          drag.offset().top > canvas_div.offset().top &&\n          drag.offset().left > canvas_div.offset().left\n        ) {\n          blockSnap(drag);\n          active = false;\n          drag.css(\n            'top',\n            drag.offset().top -\n              canvas_div.offset().top +\n              canvas_div.scrollTop() +\n              'px'\n          );\n          drag.css(\n            'left',\n            drag.offset().left -\n              canvas_div.offset().left +\n              canvas_div.scrollLeft() +\n              'px'\n          );\n          drag.appendTo(canvas_div);\n          addBlock({\n            parent: -1,\n            childwidth: 0,\n            id: parseInt(drag.children('.blockid').val()),\n            x:\n              drag.offset().left +\n              drag.innerWidth() / 2 +\n              canvas_div.scrollLeft(),\n            y:\n              drag.offset().top +\n              drag.innerHeight() / 2 +\n              canvas_div.scrollTop(),\n            width: drag.innerWidth(),\n            height: drag.innerHeight(),\n          });\n        } else if (active && blocks.length == 0) {\n          drag.remove();\n        } else if (active || rearrange) {\n          const xpos =\n            drag.offset().left +\n            drag.innerWidth() / 2 +\n            canvas_div.scrollLeft();\n          const ypos = drag.offset().top + canvas_div.scrollTop();\n          const blocko = blocks.map(a => a.id);\n          for (var i = 0; i < blocks.length; i++) {\n            if (\n              xpos >=\n                blocks.filter(a => a.id == blocko[i])[0].x -\n                  blocks.filter(a => a.id == blocko[i])[0].width / 2 -\n                  paddingx &&\n              xpos <=\n                blocks.filter(a => a.id == blocko[i])[0].x +\n                  blocks.filter(a => a.id == blocko[i])[0].width / 2 +\n                  paddingx &&\n              ypos >=\n                blocks.filter(a => a.id == blocko[i])[0].y -\n                  blocks.filter(a => a.id == blocko[i])[0].height / 2 &&\n              ypos <=\n                blocks.filter(a => a.id == blocko[i])[0].y +\n                  blocks.filter(a => a.id == blocko[i])[0].height\n            ) {\n              active = false;\n              if (!rearrange) {\n                blockSnap(drag);\n                drag.appendTo(canvas_div);\n              }\n              let totalwidth = 0;\n              let totalremove = 0;\n              const maxheight = 0;\n              for (\n                var w = 0;\n                w < blocks.filter(id => id.parent == blocko[i]).length;\n                w++\n              ) {\n                var children = blocks.filter(id => id.parent == blocko[i])[w];\n                if (children.childwidth > children.width) {\n                  totalwidth += children.childwidth + paddingx;\n                } else {\n                  totalwidth += children.width + paddingx;\n                }\n              }\n              totalwidth += drag.innerWidth();\n              for (\n                var w = 0;\n                w < blocks.filter(id => id.parent == blocko[i]).length;\n                w++\n              ) {\n                var children = blocks.filter(id => id.parent == blocko[i])[w];\n                if (children.childwidth > children.width) {\n                  $('.blockid[value=' + children.id + ']')\n                    .parent()\n                    .css(\n                      'left',\n                      blocks.filter(a => a.id == blocko[i])[0].x -\n                        totalwidth / 2 +\n                        totalremove +\n                        children.childwidth / 2 -\n                        children.width / 2 +\n                        'px'\n                    );\n                  children.x =\n                    blocks.filter(id => id.parent == blocko[i])[0].x -\n                    totalwidth / 2 +\n                    totalremove +\n                    children.childwidth / 2;\n                  totalremove += children.childwidth + paddingx;\n                } else {\n                  $('.blockid[value=' + children.id + ']')\n                    .parent()\n                    .css(\n                      'left',\n                      blocks.filter(a => a.id == blocko[i])[0].x -\n                        totalwidth / 2 +\n                        totalremove +\n                        'px'\n                    );\n                  children.x =\n                    blocks.filter(id => id.parent == blocko[i])[0].x -\n                    totalwidth / 2 +\n                    totalremove +\n                    children.width / 2;\n                  totalremove += children.width + paddingx;\n                }\n              }\n              drag.css(\n                'left',\n                blocks.filter(id => id.id == blocko[i])[0].x -\n                  totalwidth / 2 +\n                  totalremove -\n                  canvas_div.offset().left +\n                  canvas_div.scrollLeft() +\n                  'px'\n              );\n              drag.css(\n                'top',\n                blocks.filter(id => id.id == blocko[i])[0].y +\n                  blocks.filter(id => id.id == blocko[i])[0].height / 2 +\n                  paddingy -\n                  canvas_div.offset().top +\n                  'px'\n              );\n              if (rearrange) {\n                blockstemp.filter(\n                  a => a.id == parseInt(drag.children('.blockid').val())\n                )[0].x =\n                  drag.offset().left +\n                  drag.innerWidth() / 2 +\n                  canvas_div.scrollLeft() +\n                  canvas_div.scrollLeft();\n                blockstemp.filter(\n                  a => a.id == parseInt(drag.children('.blockid').val())\n                )[0].y =\n                  drag.offset().top +\n                  drag.innerHeight() / 2 +\n                  canvas_div.scrollTop();\n                blockstemp.filter(\n                  a => a.id == drag.children('.blockid').val()\n                )[0].parent = blocko[i];\n                for (var w = 0; w < blockstemp.length; w++) {\n                  if (\n                    blockstemp[w].id !=\n                    parseInt(drag.children('.blockid').val())\n                  ) {\n                    $('.blockid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .css(\n                        'left',\n                        $('.blockid[value=' + blockstemp[w].id + ']')\n                          .parent()\n                          .offset().left -\n                          canvas_div.offset().left +\n                          canvas_div.scrollLeft()\n                      );\n                    $('.blockid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .css(\n                        'top',\n                        $('.blockid[value=' + blockstemp[w].id + ']')\n                          .parent()\n                          .offset().top -\n                          canvas_div.offset().top +\n                          canvas_div.scrollTop()\n                      );\n                    $('.arrowid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .css(\n                        'left',\n                        $('.arrowid[value=' + blockstemp[w].id + ']')\n                          .parent()\n                          .offset().left -\n                          canvas_div.offset().left +\n                          canvas_div.scrollLeft() +\n                          20\n                      );\n                    $('.arrowid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .css(\n                        'top',\n                        $('.arrowid[value=' + blockstemp[w].id + ']')\n                          .parent()\n                          .offset().top -\n                          canvas_div.offset().top +\n                          canvas_div.scrollTop()\n                      );\n                    $('.blockid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .appendTo(canvas_div);\n                    $('.arrowid[value=' + blockstemp[w].id + ']')\n                      .parent()\n                      .appendTo(canvas_div);\n\n                    blockstemp[w].x =\n                      $('.blockid[value=' + blockstemp[w].id + ']')\n                        .parent()\n                        .offset().left +\n                      $(\n                        '.blockid[value=' + blockstemp[w].id + ']'\n                      ).innerWidth() /\n                        2 +\n                      canvas_div.scrollLeft();\n                    blockstemp[w].y =\n                      $('.blockid[value=' + blockstemp[w].id + ']')\n                        .parent()\n                        .offset().top +\n                      $('.blockid[value=' + blockstemp[w].id + ']')\n                        .parent()\n                        .innerHeight() /\n                        2 +\n                      canvas_div.scrollTop();\n                  }\n                }\n                mergeTempBlocks();\n              } else {\n                addBlock({\n                  childwidth: 0,\n                  parent: blocko[i],\n                  id: parseInt(drag.children('.blockid').val()),\n                  x:\n                    drag.offset().left +\n                    drag.innerWidth() / 2 +\n                    canvas_div.scrollLeft(),\n                  y:\n                    drag.offset().top +\n                    drag.innerHeight() / 2 +\n                    canvas_div.scrollTop(),\n                  width: drag.innerWidth(),\n                  height: drag.innerHeight(),\n                });\n              }\n              const arrowhelp = blocks.filter(\n                a => a.id == parseInt(drag.children('.blockid').val())\n              )[0];\n              const arrowx =\n                arrowhelp.x - blocks.filter(a => a.id == blocko[i])[0].x + 20;\n              const arrowy =\n                arrowhelp.y -\n                arrowhelp.height / 2 -\n                (blocks.filter(id => id.parent == blocko[i])[0].y +\n                  blocks.filter(id => id.parent == blocko[i])[0].height / 2) +\n                canvas_div.scrollTop();\n              if (arrowx < 0) {\n                drag.after(\n                  '<div class=\"arrowblock\"><input type=\"hidden\" class=\"arrowid\" value=\"' +\n                    drag.children('.blockid').val() +\n                    '\"><svg preserveaspectratio=\"none\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M' +\n                    (blocks.filter(a => a.id == blocko[i])[0].x -\n                      arrowhelp.x +\n                      5) +\n                    ' 0L' +\n                    (blocks.filter(a => a.id == blocko[i])[0].x -\n                      arrowhelp.x +\n                      5) +\n                    ' ' +\n                    paddingy / 2 +\n                    'L5 ' +\n                    paddingy / 2 +\n                    'L5 ' +\n                    arrowy +\n                    '\" stroke=\"#C5CCD0\" stroke-width=\"2px\"/><path d=\"M0 ' +\n                    (arrowy - 5) +\n                    'H10L5 ' +\n                    arrowy +\n                    'L0 ' +\n                    (arrowy - 5) +\n                    'Z\" fill=\"#C5CCD0\"/></svg></div>'\n                );\n                $('.arrowid[value=' + drag.children('.blockid').val() + ']')\n                  .parent()\n                  .css(\n                    'left',\n                    arrowhelp.x -\n                      5 -\n                      canvas_div.offset().left +\n                      canvas_div.scrollLeft() +\n                      'px'\n                  );\n              } else {\n                drag.after(\n                  '<div class=\"arrowblock\"><input type=\"hidden\" class=\"arrowid\" value=\"' +\n                    drag.children('.blockid').val() +\n                    '\"><svg preserveaspectratio=\"none\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 0L20 ' +\n                    paddingy / 2 +\n                    'L' +\n                    arrowx +\n                    ' ' +\n                    paddingy / 2 +\n                    'L' +\n                    arrowx +\n                    ' ' +\n                    arrowy +\n                    '\" stroke=\"#C5CCD0\" stroke-width=\"2px\"/><path d=\"M' +\n                    (arrowx - 5) +\n                    ' ' +\n                    (arrowy - 5) +\n                    'H' +\n                    (arrowx + 5) +\n                    'L' +\n                    arrowx +\n                    ' ' +\n                    arrowy +\n                    'L' +\n                    (arrowx - 5) +\n                    ' ' +\n                    (arrowy - 5) +\n                    'Z\" fill=\"#C5CCD0\"/></svg></div>'\n                );\n                $(\n                  '.arrowid[value=' +\n                    parseInt(drag.children('.blockid').val()) +\n                    ']'\n                )\n                  .parent()\n                  .css(\n                    'left',\n                    blocks.filter(a => a.id == blocko[i])[0].x -\n                      20 -\n                      canvas_div.offset().left +\n                      canvas_div.scrollLeft() +\n                      'px'\n                  );\n              }\n              $(\n                '.arrowid[value=' +\n                  parseInt(drag.children('.blockid').val()) +\n                  ']'\n              )\n                .parent()\n                .css(\n                  'top',\n                  blocks.filter(a => a.id == blocko[i])[0].y +\n                    blocks.filter(a => a.id == blocko[i])[0].height / 2 +\n                    'px'\n                );\n              if (blocks.filter(a => a.id == blocko[i])[0].parent != -1) {\n                let flag = false;\n                var idval = blocko[i];\n                while (!flag) {\n                  if (blocks.filter(a => a.id == idval)[0].parent == -1) {\n                    flag = true;\n                  } else {\n                    let zwidth = 0;\n                    for (\n                      var w = 0;\n                      w < blocks.filter(id => id.parent == idval).length;\n                      w++\n                    ) {\n                      var children = blocks.filter(id => id.parent == idval)[w];\n                      if (children.childwidth > children.width) {\n                        if (\n                          w ==\n                          blocks.filter(id => id.parent == idval).length - 1\n                        ) {\n                          zwidth += children.childwidth;\n                        } else {\n                          zwidth += children.childwidth + paddingx;\n                        }\n                      } else {\n                        if (\n                          w ==\n                          blocks.filter(id => id.parent == idval).length - 1\n                        ) {\n                          zwidth += children.width;\n                        } else {\n                          zwidth += children.width + paddingx;\n                        }\n                      }\n                    }\n                    blocks.filter(a => a.id == idval)[0].childwidth = zwidth;\n                    idval = blocks.filter(a => a.id == idval)[0].parent;\n                  }\n                }\n                blocks.filter(id => id.id == idval)[0].childwidth = totalwidth;\n              }\n              if (rearrange) {\n                rearrange = false;\n                drag.removeClass('dragging');\n              }\n              rearrangeMe();\n              checkOffset();\n              break;\n            } else if (i == blocks.length - 1) {\n              if (rearrange) {\n                rearrange = false;\n                blockstemp = [];\n              }\n              active = false;\n              drag.remove();\n            }\n          }\n        }\n      }\n    });\n    $(document).on('mousedown', '.block', function (event) {\n      $(document).on('mouseup mousemove', '.block', function handler(event) {\n        if (event.type !== 'mouseup') {\n          if (event.which === 1) {\n            if (!active && !rearrange) {\n              rearrange = true;\n              drag = $(this);\n              drag.addClass('dragging');\n              dragx = event.clientX - $(this).offset().left;\n              dragy = event.clientY - $(this).offset().top;\n              const blockid = parseInt($(this).children('.blockid').val());\n              drag = $(this);\n              blockstemp.push(blocks.filter(a => a.id == blockid)[0]);\n              removeBlockById(blockid);\n              $('.arrowid[value=' + blockid + ']')\n                .parent()\n                .remove();\n              let layer = blocks.filter(a => a.parent == blockid);\n              let flag = false;\n              let foundids = [];\n              const allids = [];\n              while (!flag) {\n                for (var i = 0; i < layer.length; i++) {\n                  blockstemp.push(blocks.filter(a => a.id == layer[i].id)[0]);\n                  $('.blockid[value=' + layer[i].id + ']')\n                    .parent()\n                    .css(\n                      'left',\n                      $('.blockid[value=' + layer[i].id + ']')\n                        .parent()\n                        .offset().left - drag.offset().left\n                    );\n                  $('.blockid[value=' + layer[i].id + ']')\n                    .parent()\n                    .css(\n                      'top',\n                      $('.blockid[value=' + layer[i].id + ']')\n                        .parent()\n                        .offset().top - drag.offset().top\n                    );\n                  $('.arrowid[value=' + layer[i].id + ']')\n                    .parent()\n                    .css(\n                      'left',\n                      $('.arrowid[value=' + layer[i].id + ']')\n                        .parent()\n                        .offset().left - drag.offset().left\n                    );\n                  $('.arrowid[value=' + layer[i].id + ']')\n                    .parent()\n                    .css(\n                      'top',\n                      $('.arrowid[value=' + layer[i].id + ']')\n                        .parent()\n                        .offset().top - drag.offset().top\n                    );\n                  $('.blockid[value=' + layer[i].id + ']')\n                    .parent()\n                    .appendTo(drag);\n                  $('.arrowid[value=' + layer[i].id + ']')\n                    .parent()\n                    .appendTo(drag);\n                  foundids.push(layer[i].id);\n                  allids.push(layer[i].id);\n                }\n                if (foundids.length == 0) {\n                  flag = true;\n                } else {\n                  layer = blocks.filter(a => foundids.includes(a.parent));\n                  foundids = [];\n                }\n              }\n              for (\n                var i = 0;\n                i < blocks.filter(a => a.parent == blockid).length;\n                i++\n              ) {\n                var blocknumber = blocks.filter(a => a.parent == blockid)[i];\n                removeBlockById(blocknumber);\n              }\n              for (var i = 0; i < allids.length; i++) {\n                var blocknumber = allids[i];\n                removeBlockById(blocknumber);\n              }\n              if (blocks.length > 1) {\n                rearrangeMe();\n              }\n              if (lastevent) {\n                fixOffset();\n              }\n            }\n          }\n        }\n        $(document).off('mouseup mousemove', handler);\n      });\n    });\n    $(document).on('mousemove', function (event) {\n      if (active) {\n        const newLeft = event.clientX - dragx;\n        const newTop = event.clientY - dragy;\n        drag.css({\n          'left': newLeft + 'px',\n          'top': newTop + 'px'\n        });\n      } else if (rearrange) {\n        drag.css(\n          'left',\n          event.clientX -\n            dragx -\n            canvas_div.offset().left +\n            canvas_div.scrollLeft() +\n            'px'\n        );\n        drag.css(\n          'top',\n          event.clientY -\n            dragy -\n            canvas_div.offset().top +\n            canvas_div.scrollTop() +\n            'px'\n        );\n        blockstemp.filter(\n          a => a.id == parseInt(drag.children('.blockid').val())\n        ).x =\n          drag.offset().left + drag.innerWidth() / 2 + canvas_div.scrollLeft();\n        blockstemp.filter(\n          a => a.id == parseInt(drag.children('.blockid').val())\n        ).y =\n          drag.offset().left + drag.innerHeight() / 2 + canvas_div.scrollTop();\n      }\n      if (active || rearrange) {\n        const xpos =\n          drag.offset().left + drag.innerWidth() / 2 + canvas_div.scrollLeft();\n        const ypos = drag.offset().top + canvas_div.scrollTop();\n        const blocko = blocks.map(a => a.id);\n        for (var i = 0; i < blocks.length; i++) {\n          if (\n            xpos >=\n              blocks.filter(a => a.id == blocko[i])[0].x -\n                blocks.filter(a => a.id == blocko[i])[0].width / 2 -\n                paddingx &&\n            xpos <=\n              blocks.filter(a => a.id == blocko[i])[0].x +\n                blocks.filter(a => a.id == blocko[i])[0].width / 2 +\n                paddingx &&\n            ypos >=\n              blocks.filter(a => a.id == blocko[i])[0].y -\n                blocks.filter(a => a.id == blocko[i])[0].height / 2 &&\n            ypos <=\n              blocks.filter(a => a.id == blocko[i])[0].y +\n                blocks.filter(a => a.id == blocko[i])[0].height\n          ) {\n            $('.indicator').appendTo(\n              $('.blockid[value=' + blocko[i] + ']').parent()\n            );\n            $('.indicator').css(\n              'left',\n              $('.blockid[value=' + blocko[i] + ']')\n                .parent()\n                .innerWidth() /\n                2 -\n                5 +\n                'px'\n            );\n            $('.indicator').css(\n              'top',\n              $('.blockid[value=' + blocko[i] + ']')\n                .parent()\n                .innerHeight() + 'px'\n            );\n            $('.indicator').removeClass('invisible');\n            break;\n          } else if (i == blocks.length - 1) {\n            if (!$('.indicator').hasClass('invisible')) {\n              $('.indicator').addClass('invisible');\n            }\n          }\n        }\n      }\n    });\n\n    function checkOffset() {\n      offsetleft = blocks.map(a => a.x);\n      const widths = blocks.map(a => a.width);\n      const mathmin = offsetleft.map(function (item, index) {\n        return item - widths[index] / 2;\n      });\n      offsetleft = Math.min.apply(Math, mathmin);\n      if (offsetleft < canvas_div.offset().left) {\n        lastevent = true;\n        const blocko = blocks.map(a => a.id);\n        for (var w = 0; w < blocks.length; w++) {\n          $(\n            '.blockid[value=' +\n              blocks.filter(a => a.id == blocko[w])[0].id +\n              ']'\n          )\n            .parent()\n            .css(\n              'left',\n              blocks.filter(a => a.id == blocko[w])[0].x -\n                blocks.filter(a => a.id == blocko[w])[0].width / 2 -\n                offsetleft +\n                20\n            );\n          if (blocks.filter(a => a.id == blocko[w])[0].parent != -1) {\n            const arrowhelp = blocks.filter(a => a.id == blocko[w])[0];\n            const arrowx =\n              arrowhelp.x -\n              blocks.filter(\n                a => a.id == blocks.filter(a => a.id == blocko[w])[0].parent\n              )[0].x;\n            if (arrowx < 0) {\n              $('.arrowid[value=' + blocko[w] + ']')\n                .parent()\n                .css('left', arrowhelp.x - offsetleft + 20 - 5 + 'px');\n            } else {\n              $('.arrowid[value=' + blocko[w] + ']')\n                .parent()\n                .css(\n                  'left',\n                  blocks.filter(\n                    id =>\n                      id.id == blocks.filter(a => a.id == blocko[w])[0].parent\n                  )[0].x -\n                    20 -\n                    offsetleft +\n                    20 +\n                    'px'\n                );\n            }\n          }\n        }\n        for (var w = 0; w < blocks.length; w++) {\n          blocks[w].x =\n            $('.blockid[value=' + blocks[w].id + ']')\n              .parent()\n              .offset().left +\n            canvas_div.offset().left -\n            $('.blockid[value=' + blocks[w].id + ']')\n              .parent()\n              .innerWidth() /\n              2 -\n            40;\n        }\n        offsetleftold = offsetleft;\n      }\n    }\n\n    function fixOffset() {\n      if (offsetleftold < canvas_div.offset().left) {\n        lastevent = false;\n        const blocko = blocks.map(a => a.id);\n        for (var w = 0; w < blocks.length; w++) {\n          $(\n            '.blockid[value=' +\n              blocks.filter(a => a.id == blocko[w])[0].id +\n              ']'\n          )\n            .parent()\n            .css(\n              'left',\n              blocks.filter(a => a.id == blocko[w])[0].x -\n                blocks.filter(a => a.id == blocko[w])[0].width / 2 -\n                offsetleftold -\n                20\n            );\n          blocks.filter(a => a.id == blocko[w])[0].x =\n            $(\n              '.blockid[value=' +\n                blocks.filter(a => a.id == blocko[w])[0].id +\n                ']'\n            )\n              .parent()\n              .offset().left +\n            blocks.filter(a => a.id == blocko[w])[0].width / 2;\n\n          if (blocks.filter(a => a.id == blocko[w])[0].parent != -1) {\n            const arrowhelp = blocks.filter(a => a.id == blocko[w])[0];\n            const arrowx =\n              arrowhelp.x -\n              blocks.filter(\n                a => a.id == blocks.filter(a => a.id == blocko[w])[0].parent\n              )[0].x;\n            if (arrowx < 0) {\n              $('.arrowid[value=' + blocko[w] + ']')\n                .parent()\n                .css('left', arrowhelp.x - 5 - canvas_div.offset().left + 'px');\n            } else {\n              $('.arrowid[value=' + blocko[w] + ']')\n                .parent()\n                .css(\n                  'left',\n                  blocks.filter(\n                    id =>\n                      id.id == blocks.filter(a => a.id == blocko[w])[0].parent\n                  )[0].x -\n                    20 -\n                    canvas_div.offset().left +\n                    'px'\n                );\n            }\n          }\n        }\n        for (var w = 0; w < blocks.length; w++) {\n          //blocks[w].x = blocks[w].x+offsetleftold-20;\n        }\n        offsetleftold = 0;\n      }\n    }\n\n    function rearrangeMe() {\n      const result = blocks.map(a => a.parent);\n      for (var z = 0; z < result.length; z++) {\n        if (result[z] == -1) {\n          continue; // 跳过根块，不要使用z++\n        }\n        let totalwidth = 0;\n        let totalremove = 0;\n        const maxheight = 0;\n        for (\n          var w = 0;\n          w < blocks.filter(id => id.parent == result[z]).length;\n          w++\n        ) {\n          var children = blocks.filter(id => id.parent == result[z])[w];\n          if (blocks.filter(id => id.parent == children.id).length == 0) {\n            children.childwidth = 0;\n          }\n          if (children.childwidth > children.width) {\n            if (w == blocks.filter(id => id.parent == result[z]).length - 1) {\n              totalwidth += children.childwidth;\n            } else {\n              totalwidth += children.childwidth + paddingx;\n            }\n          } else {\n            if (w == blocks.filter(id => id.parent == result[z]).length - 1) {\n              totalwidth += children.width;\n            } else {\n              totalwidth += children.width + paddingx;\n            }\n          }\n        }\n        if (result[z] != -1) {\n          const parentBlock = blocks.filter(a => a.id == result[z])[0];\n          if (parentBlock) {\n            parentBlock.childwidth = totalwidth;\n          }\n        }\n        for (\n          var w = 0;\n          w < blocks.filter(id => id.parent == result[z]).length;\n          w++\n        ) {\n          var children = blocks.filter(id => id.parent == result[z])[w];\n          if (result[z] != -1) {\n            const parentBlock = blocks.filter(id => id.id == result[z])[0];\n            if (parentBlock) {\n              $('.blockid[value=' + children.id + ']')\n                .parent()\n                .css('top', parentBlock.y + paddingy + 'px');\n              parentBlock.y = parentBlock.y + paddingy;\n            }\n          }\n          if (children.childwidth > children.width) {\n            $('.blockid[value=' + children.id + ']')\n              .parent()\n              .css(\n                'left',\n                blocks.filter(id => id.id == result[z])[0].x -\n                  totalwidth / 2 +\n                  totalremove +\n                  children.childwidth / 2 -\n                  children.width / 2 -\n                  canvas_div.offset().left +\n                  'px'\n              );\n            children.x =\n              blocks.filter(id => id.id == result[z])[0].x -\n              totalwidth / 2 +\n              totalremove +\n              children.childwidth / 2;\n            totalremove += children.childwidth + paddingx;\n          } else {\n            $('.blockid[value=' + children.id + ']')\n              .parent()\n              .css(\n                'left',\n                blocks.filter(id => id.id == result[z])[0].x -\n                  totalwidth / 2 +\n                  totalremove -\n                  canvas_div.offset().left +\n                  'px'\n              );\n            children.x =\n              blocks.filter(id => id.id == result[z])[0].x -\n              totalwidth / 2 +\n              totalremove +\n              children.width / 2;\n            totalremove += children.width + paddingx;\n          }\n          const arrowhelp = blocks.filter(a => a.id == children.id)[0];\n          const arrowx =\n            arrowhelp.x - blocks.filter(a => a.id == children.parent)[0].x + 20;\n          const arrowy =\n            arrowhelp.y -\n            arrowhelp.height / 2 -\n            (blocks.filter(a => a.id == children.parent)[0].y +\n              blocks.filter(a => a.id == children.parent)[0].height / 2);\n          $('.arrowid[value=' + children.id + ']')\n            .parent()\n            .css(\n              'top',\n              blocks.filter(id => id.id == children.parent)[0].y +\n                blocks.filter(id => id.id == children.parent)[0].height / 2 -\n                canvas_div.offset().top +\n                'px'\n            );\n          if (arrowx < 0) {\n            $('.arrowid[value=' + children.id + ']')\n              .parent()\n              .css('left', arrowhelp.x - 5 - canvas_div.offset().left + 'px');\n            $('.arrowid[value=' + children.id + ']')\n              .parent()\n              .html(\n                '<input type=\"hidden\" class=\"arrowid\" value=\"' +\n                  children.id +\n                  '\"><svg preserveaspectratio=\"none\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M' +\n                  (blocks.filter(id => id.id == children.parent)[0].x -\n                    arrowhelp.x +\n                    5) +\n                  ' 0L' +\n                  (blocks.filter(id => id.id == children.parent)[0].x -\n                    arrowhelp.x +\n                    5) +\n                  ' ' +\n                  paddingy / 2 +\n                  'L5 ' +\n                  paddingy / 2 +\n                  'L5 ' +\n                  arrowy +\n                  '\" stroke=\"#C5CCD0\" stroke-width=\"2px\"/><path d=\"M0 ' +\n                  (arrowy - 5) +\n                  'H10L5 ' +\n                  arrowy +\n                  'L0 ' +\n                  (arrowy - 5) +\n                  'Z\" fill=\"#C5CCD0\"/></svg>'\n              );\n          } else {\n            $('.arrowid[value=' + children.id + ']')\n              .parent()\n              .css(\n                'left',\n                blocks.filter(id => id.id == children.parent)[0].x -\n                  20 -\n                  canvas_div.offset().left +\n                  'px'\n              );\n            $('.arrowid[value=' + children.id + ']')\n              .parent()\n              .html(\n                '<input type=\"hidden\" class=\"arrowid\" value=\"' +\n                  children.id +\n                  '\"><svg preserveaspectratio=\"none\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 0L20 ' +\n                  paddingy / 2 +\n                  'L' +\n                  arrowx +\n                  ' ' +\n                  paddingy / 2 +\n                  'L' +\n                  arrowx +\n                  ' ' +\n                  arrowy +\n                  '\" stroke=\"#C5CCD0\" stroke-width=\"2px\"/><path d=\"M' +\n                  (arrowx - 5) +\n                  ' ' +\n                  (arrowy - 5) +\n                  'H' +\n                  (arrowx + 5) +\n                  'L' +\n                  arrowx +\n                  ' ' +\n                  arrowy +\n                  'L' +\n                  (arrowx - 5) +\n                  ' ' +\n                  (arrowy - 5) +\n                  'Z\" fill=\"#C5CCD0\"/></svg>'\n              );\n          }\n        }\n      }\n    }\n  });\n\n  function blockGrabbed(block) {\n    grab(block);\n  }\n\n  function blockReleased() {\n    release();\n  }\n\n  function blockSnap(drag) {\n    snapping(drag);\n  }\n};\n\n// 模块导出支持（用于测试覆盖率追踪）\n// 这不会影响浏览器中的使用，因为 module 在浏览器中未定义\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = flowy;\n}\n"],"names":["event","a"],"mappings":"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"}