name: 📦 Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

env:
  NODE_VERSION: '18'

jobs:
  # 🏷️ 创建发布
  release:
    name: 📦 Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📥 Install dependencies
      run: npm ci
      
    - name: 🧪 Run tests
      run: npm run test:unit
      
    - name: 🔨 Build library
      run: npm run build
      
    - name: 📊 Generate coverage
      run: npm run test:coverage
      
    - name: 📝 Generate changelog
      id: changelog
      run: |
        echo "## 🚀 What's New" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        
        # 获取最新的 tag
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        
        if [ -n "$LATEST_TAG" ]; then
          echo "### 📋 Changes since $LATEST_TAG" >> CHANGELOG.md
          git log $LATEST_TAG..HEAD --pretty=format:"- %s (%h)" >> CHANGELOG.md
        else
          echo "### 📋 Initial Release" >> CHANGELOG.md
          echo "- 🎉 First release of Flowy" >> CHANGELOG.md
          echo "- ✨ Modern build system with Vite" >> CHANGELOG.md
          echo "- 🧪 Comprehensive test suite" >> CHANGELOG.md
          echo "- 📦 Multiple output formats (ES, UMD, IIFE)" >> CHANGELOG.md
        fi
        
        echo "" >> CHANGELOG.md
        echo "### 📊 Build Information" >> CHANGELOG.md
        echo "- **Build Date**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> CHANGELOG.md
        echo "- **Node Version**: ${{ env.NODE_VERSION }}" >> CHANGELOG.md
        echo "- **Commit**: ${{ github.sha }}" >> CHANGELOG.md
        
        # 添加文件大小信息
        if [ -f "dist/flowy.es.js" ]; then
          ES_SIZE=$(stat -c%s "dist/flowy.es.js" | numfmt --to=iec)
          echo "- **ES Module Size**: $ES_SIZE" >> CHANGELOG.md
        fi
        if [ -f "dist/flowy.umd.js" ]; then
          UMD_SIZE=$(stat -c%s "dist/flowy.umd.js" | numfmt --to=iec)
          echo "- **UMD Size**: $UMD_SIZE" >> CHANGELOG.md
        fi
        
    - name: 🏷️ Get version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${{ github.ref_name }}"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
        
    - name: 📦 Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: Release ${{ steps.version.outputs.version }}
        body_path: CHANGELOG.md
        files: |
          dist/flowy.es.js
          dist/flowy.es.js.map
          dist/flowy.umd.js
          dist/flowy.umd.js.map
          dist/flowy.iife.js
          dist/flowy.iife.js.map
          coverage/lcov.info
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 🎉 Release summary
      run: |
        echo "## 🎉 Release Created Successfully" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Tag**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Release URL**: https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY

  # 📦 NPM 发布 (可选)
  npm-publish:
    name: 📦 Publish to NPM
    runs-on: ubuntu-latest
    needs: release
    if: false  # 设置为 true 启用 NPM 发布
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
        
    - name: 📥 Install dependencies
      run: npm ci
      
    - name: 🔨 Build library
      run: npm run build
      
    - name: 📦 Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: 🎉 NPM publish summary
      run: |
        echo "## 📦 NPM Package Published" >> $GITHUB_STEP_SUMMARY
        echo "- **Package**: flowy" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Registry**: https://www.npmjs.com/package/flowy" >> $GITHUB_STEP_SUMMARY
